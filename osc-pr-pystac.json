{"version":2,"kind":"Notebook","sha256":"9d02e48a224f6b1112d2b92c3f223ffbe72455758e3e57ccdb04c0820761e02b","slug":"osc-pr-pystac","location":"/OSC/osc_pr_pystac.ipynb","dependencies":[],"frontmatter":{"title":"Generating OSC information using pystac","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"pangeo","language":"python"},"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/ESA-EarthCODE/tutorials","subject":"EarthCODE Tutorials","numbering":{"title":{"offset":1}},"source_url":"https://github.com/ESA-EarthCODE/tutorials/blob/main/OSC/osc_pr_pystac.ipynb","edit_url":"https://github.com/ESA-EarthCODE/tutorials/edit/main/OSC/osc_pr_pystac.ipynb","exports":[{"format":"ipynb","filename":"osc_pr_pystac.ipynb","url":"/tutorials/build/osc_pr_pystac-3c49a773556239947835c70df9873024.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This notebook shows how to generate OSC Projects, Products and Workflows using pystac. EarthCODE provides a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aLa1fQOb2w"},{"type":"link","url":"http://workspace.earthcode.earthcode.eox.at/osc-editor","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"GUI editor","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oiF9gh9xbg"}],"urlSource":"http://workspace.earthcode.earthcode.eox.at/osc-editor","key":"IEj3qo9oDB"},{"type":"text","value":" that offers this and more functionality, including a user interface. However, if you decide to manually create items, using a library like pystac can save some time.\nThe code described here does not carry out all the required steps to pass the automated OSC validation. For example, you still have to generate all return links as described in the manual PR tutorial. You’ll also have to manually open the PR in the end.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FOFKbLIOgK"}],"key":"AeBLCzyFKY"},{"type":"blockquote","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"NOTE: Before you run the notebook you’ll need a fork of the open-science-catalog-metadata repository. See the Manual PR Tutorial about how to do it.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"D4fbjjpzvD"}],"key":"ILhpSYcU19"}],"key":"lyGYnqEpw3"},{"type":"heading","depth":3,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Import libraries","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"OHXmEnK0PG"}],"identifier":"import-libraries","label":"Import libraries","html_id":"import-libraries","implicit":true,"key":"b6qBrBr0em"}],"key":"gVc9mUNOeB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import pystac\nfrom datetime import datetime\nfrom pystac.extensions.projection import ProjectionExtension","key":"MwclB4La2Q"},{"type":"output","id":"MIFNUMRl6Ffa4PEvGcit7","data":[],"key":"LLGRJNqPW4"}],"key":"OOv387ATG6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get all entries from the Open Science Catalog","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jVe7vAiQ8i"}],"identifier":"get-all-entries-from-the-open-science-catalog","label":"Get all entries from the Open Science Catalog","html_id":"get-all-entries-from-the-open-science-catalog","implicit":true,"key":"FDbqJrlGPu"}],"key":"DesHLd7vRa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# read the catalog root\ncatalog = pystac.Catalog.from_file('../../open-science-catalog-metadata/catalog.json')\n\n# access the list of the themes in open science catalog\nthemes = catalog.get_child('themes')\nallowed_themes = [child.id for child in themes.get_children()]\n\n\n# access the list of available ESA missions\nmissions = catalog.get_child('eo-missions')\nallowed_missions = [child.id for child in missions.get_children()]\n\n# access the list of avaiable variables\nvariables = catalog.get_child('variables')\nallowed_variables = [child.id for child in variables.get_children()]\n\n# access the list of existing projects, products and workflows\nproducts = catalog.get_child('products')\nprojects = catalog.get_child('projects')\nworkflows = catalog.get_child('workflows')","key":"qYpzv4tZ7X"},{"type":"output","id":"iKSe6E7noD2JgEgt5mPmv","data":[],"key":"YXPfQbTBWH"}],"key":"OU5Ng8f6AQ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define helper functions | Add new variables, theme and eo missions","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qQdsDTFGjh"}],"identifier":"define-helper-functions-add-new-variables-theme-and-eo-missions","label":"Define helper functions | Add new variables, theme and eo missions","html_id":"define-helper-functions-add-new-variables-theme-and-eo-missions","implicit":true,"key":"fkUZO3ADH9"}],"key":"Bg2oMBdHhr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def add_product_variables(collection, variables_to_add):\n    '''Add variables to the collection custom fields and add links to the missions collection.'''\n    \n    for variable in variables_to_add:\n        \n        assert variable in allowed_variables\n\n        # add the correct link\n        collection.add_link(\n            pystac.Link(rel=\"related\", \n                        target=variables.get_child(variable).get_links('self')[0].href, \n                        media_type=\"application/json\",\n                        title=f\"Variable: {variables.get_child(variable).title}\")\n        )\n\n    # Add themes to the custom fields\n    collection.extra_fields.update({\n        \"osc:variables\": variables_to_add\n    })\n\ndef add_themes(collection, themes_to_add):\n    '''Add themes to the collection custom fields and add links to the themes collection.'''\n    \n    themes_list = []\n    for theme in themes_to_add:\n        \n        assert theme in allowed_themes\n\n        # add the correct link\n        collection.add_link(\n            pystac.Link(rel=\"related\", \n                        target=themes.get_child(theme).get_links('self')[0].href, \n                        media_type=\"application/json\",\n                        title=f\"Theme: {themes.get_child(theme).title}\")\n        )\n        \n        themes_list.append(\n            {\n                \"scheme\": \"https://github.com/stac-extensions/osc#theme\",\n                \"concepts\": [{\"id\": theme}]\n            }\n        )\n\n    # Add themes to the custom fields\n    collection.extra_fields.update({\n        \"themes\": themes_list\n    }\n    )\n\n\ndef add_links(collection, relations, targets, titles):\n\n    '''Add links from the collection to outside websites.'''\n    links = []\n    \n    for rel, target, title in zip(relations, targets, titles):\n        links.append(pystac.Link(rel=rel, target=target, title=title)),\n    \n    collection.add_links(links)\n\n\ndef create_contract(name, roles, emails):\n    '''Create a contact template'''\n    contact =  {\n        \"name\": name,\n        \"roles\": [r for r in roles]\n    }\n    if emails:\n        contact['emails'] = [{\"value\":email} for email in emails]\n    return contact\n\ndef add_product_missions(collection, missions_to_add):\n    '''Add missions to the collection custom fields and add links to the missions collection.'''\n    \n    for mission in missions_to_add:\n        \n        assert mission in allowed_missions\n\n        # add the correct link\n        collection.add_link(\n            pystac.Link(rel=\"related\", \n                        target=missions.get_child(mission).get_links('self')[0].href, \n                        media_type=\"application/json\",\n                        title=f\"EO Mission: {missions.get_child(mission).title}\"\n            )\n        )\n\n    # Add themes to the custom fields\n    collection.extra_fields.update({\n         \"osc:missions\": missions_to_add\n    }\n    )\n","key":"U52EsbIYug"},{"type":"output","id":"4x87ikLYMt0r1UUUWOQVB","data":[],"key":"kMrreS9hFP"}],"key":"Hzmzmlb7rT"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define helper functions | Create new project collection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ETdPoCMItl"}],"identifier":"define-helper-functions-create-new-project-collection","label":"Define helper functions | Create new project collection","html_id":"define-helper-functions-create-new-project-collection","implicit":true,"key":"gfwaxTaxPc"}],"key":"MfvbBaOBlM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"\ndef create_project_collection(project_id, project_title, project_description, \n                      project_status, extent, project_license):\n\n    '''Create project collection template from the provided information.'''\n\n    # Create the collection\n    collection = pystac.Collection(\n        id=project_id,\n        description=project_description,\n        extent=extent,\n        license=project_license,\n        title=project_title,\n        extra_fields = {\n            \"osc:status\": project_status,\n            \"osc:type\": \"project\",\n            \"updated\": datetime.now().strftime(\"%Y-%m-%dT%H:%M:%SZ\")\n        },\n        stac_extensions=[\n            \"https://stac-extensions.github.io/osc/v1.0.0/schema.json\",\n            \"https://stac-extensions.github.io/themes/v1.0.0/schema.json\",\n            \"https://stac-extensions.github.io/contacts/v0.1.1/schema.json\"\n        ]\n    \n    )\n\n    # Add pre-determined links \n    collection.add_links([\n        pystac.Link(rel=\"root\", target=\"../../catalog.json\", media_type=\"application/json\", title=\"Open Science Catalog\"),\n        pystac.Link(rel=\"parent\", target=\"../catalog.json\", media_type=\"application/json\", title=\"Projects\"),\n        # pystac.Link(rel=\"self\", target=f\"https://esa-earthcode.github.io/open-science-catalog-metadata/projects/{project_id}/collection.json\", media_type=\"application/json\"),\n    ])\n\n    return collection\n\n","key":"r8XW6dSVyD"},{"type":"output","id":"tEZt-NHG34MfjS11nCNUT","data":[],"key":"MPHnwxLLox"}],"key":"MDrSPYcXS7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define helper functions | Create new product collection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N3S42xQaCc"}],"identifier":"define-helper-functions-create-new-product-collection","label":"Define helper functions | Create new product collection","html_id":"define-helper-functions-create-new-product-collection","implicit":true,"key":"i6u6yus2tk"}],"key":"ejY902Dspm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def create_product_collection(product_id, product_title, product_description, product_extent, product_license,\n                              product_keywords, product_status, product_region, product_project_id, product_project_title,\n                              product_parameters=None, product_doi=None):\n\n    collection = pystac.Collection(\n            id=product_id,\n            title=product_title,\n            description=product_description,\n            extent=product_extent,\n            license=product_license,\n            keywords=product_keywords,\n            stac_extensions=[\n                \"https://stac-extensions.github.io/osc/v1.0.0/schema.json\",\n                \"https://stac-extensions.github.io/themes/v1.0.0/schema.json\",\n                \"https://stac-extensions.github.io/cf/v0.2.0/schema.json\"\n            ],\n        )\n    \n    # Add pre-determined links \n    collection.add_links([\n        pystac.Link(rel=\"root\", target=\"../../catalog.json\", media_type=\"application/json\", title=\"Open Science Catalog\"),\n        pystac.Link(rel=\"parent\", target=\"../catalog.json\", media_type=\"application/json\", title=\"Products\"),\n        # pystac.Link(rel=\"self\", target=f\"https://esa-earthcode.github.io/open-science-catalog-metadata/products/{project_id}/collection.json\", media_type=\"application/json\"),\n        pystac.Link(rel=\"related\", target=f\"../../projects/{product_project_id}/collection.json\", media_type=\"application/json\", title=f\"Project: {product_project_title}\"),\n\n    ])\n\n    # Add extra properties\n    collection.extra_fields.update({\n        \"osc:project\": product_project_id,\n        \"osc:status\": product_status,\n        \"osc:region\": product_region,\n        \"osc:type\": \"product\",\n        \"created\": datetime.now().strftime(\"%Y-%m-%dT%H:%M:%SZ\"),\n        \"updated\": datetime.now().strftime(\"%Y-%m-%dT%H:%M:%SZ\"),\n    })\n\n    if product_doi is not None:\n        collection.extra_fields[\"sci:doi\"] = product_doi\n\n\n    if product_parameters:\n        collection.extra_fields[\"cf:parameter\"] = [{\"name\": p} for p in product_parameters]\n    \n    return collection","key":"bA0BmAjjCu"},{"type":"output","id":"g4s-XLSBVdSaPBMjh7Xij","data":[],"key":"zGmZrzhLg9"}],"key":"GAEBMgXdjb"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define helper functions | Create new workflow record","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VcR6XkiAIz"}],"identifier":"define-helper-functions-create-new-workflow-record","label":"Define helper functions | Create new workflow record","html_id":"define-helper-functions-create-new-workflow-record","implicit":true,"key":"ySEQQgwGMX"}],"key":"D0x1cQr2eV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def create_workflow_collection(workflow_id, workflow_title, \n                               workflow_description, workflow_license, workflow_extent,\n                               workflow_keywords, workflow_formats, workflow_project, workflow_project_title):\n\n    '''Create a workflow collection template from the provided information.'''\n\n    # Create the collection\n\n    collection = {\n        'id': workflow_id,\n        'type': 'Feature',\n        'geometry': None,\n        \"conformsTo\": [\"http://www.opengis.net/spec/ogcapi-records-1/1.0/req/record-core\"],\n        \"properties\": {\n            \"title\": workflow_title,\n            \"description\": workflow_description,\n            \"osc:type\": \"workflow\",\n            \"osc:project\": workflow_project,\n            \"osc:status\": \"completed\",\n            \"formats\": [{\"name\": f} for f in workflow_formats],\n            \"updated\": datetime.now().strftime(\"%Y-%m-%dT%H:%M:%SZ\"),\n            \"created\": datetime.now().strftime(\"%Y-%m-%dT%H:%M:%SZ\"),\n            \"keywords\": workflow_keywords,\n            \"license\": workflow_license,\n            \"version\": \"1\"\n        },\n        \"linkTemplates\": [],\n        \"links\": [\n            \n            {\n                \"rel\": \"root\",\n                \"href\": \"../../catalog.json\",\n                \"type\": \"application/json\",\n                \"title\": \"Open Science Catalog\"\n            },            \n            {\n                \"rel\": \"parent\",\n                \"href\": \"../catalog.json\",\n                \"type\": \"application/json\",\n                \"title\": \"Workflows\"\n            },            \n  \n            {\n                \"rel\": \"related\",\n                \"href\": f\"../../projects/{workflow_project}/collection.json\",\n                \"type\": \"application/json\",\n                \"title\": f\"Project: {workflow_project_title}\"\n            },\n            \n        ]\n\n    }\n    \n    return collection\n","key":"C7Yz1e2Uqf"},{"type":"output","id":"mkjPUjx6NWRmpZlK9ueMd","data":[],"key":"Yc59tvBTgU"}],"key":"iE00SwiVXT"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a metadata collection for new project","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W6JY0yY8CM"}],"identifier":"create-a-metadata-collection-for-new-project","label":"Create a metadata collection for new project","html_id":"create-a-metadata-collection-for-new-project","implicit":true,"key":"shnqhqZtq7"}],"key":"tTRQ4NWelo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define id, title, description, project status, license\nproject_id = \"worldcereal2\"\nproject_title = \"WorldCereal2\"\nproject_description = \"WorldCereal is an ESA initiative that provides global cropland and crop type maps at 10-meter resolution, offering seasonally updated data on temporary crops, croptypes (maize, winter cereals and spring cereals), and irrigation.\"\nproject_status = \"completed\"\nproject_license = 'proprietary'\n\n# Define spatial and temporal extent\nspatial_extent = pystac.SpatialExtent([[-180.0, -90.0, 180.0, 90.0]])\ntemporal_extent = pystac.TemporalExtent([[datetime(2021, 1, 1), datetime(2021, 12, 31, 23, 59, 59)]])\nextent = pystac.Extent(spatial=spatial_extent, temporal=temporal_extent)\n\n# Define links and link titles\nproject_link_targets = [\"https://esa-worldcereal.org/en\", \n                        \"https://eo4society.esa.int/projects/worldcereal-global-crop-monitoring-at-field-scale/\"]\nproject_link_relations = [\"via\", \"via\"]\nproject_link_titles = [\"Website\", \"EO4Society Link\"]\n\n# Define project themes\nproject_themes = [\"land\"]\n\n# contacts\nproject_contracts_info = [\n    (\"Zoltan Szantoi\", [\"technical_officer\"], [\"Zoltan.Szantoi@esa.int\"]),\n    (\"VITO Remote Sensing\", [\"consortium_member\"], None)\n]","key":"BaU30bXeHj"},{"type":"output","id":"b4LYCbIRunVqe4yjEOyii","data":[],"key":"CdZ41RDD1J"}],"key":"IWGoZRyWlp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"collection = create_project_collection(project_id, project_title, project_description, \n                      project_status, extent, project_license)","key":"k8G5L0LMk7"},{"type":"output","id":"RAvHAUyuS8JsSGL6yeaOm","data":[],"key":"RW5ZVnEQ3p"}],"key":"WYSjlfYCBR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# add links\nadd_links(collection, project_link_relations, project_link_targets, project_link_titles)","key":"jrHJkiJC0c"},{"type":"output","id":"P2Ao8O4tWTe4gLK_qA0kl","data":[],"key":"eIoJCHEgtE"}],"key":"HsaCXyV3hU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"## add themes\nadd_themes(collection, project_themes)","key":"xFOK5zD1my"},{"type":"output","id":"9u_QiHiVOWSVh8I6350v-","data":[],"key":"IZNm5S2d5x"}],"key":"L77fu4yehy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"\n# Add contacts\ncollection.extra_fields.update({\n\n    \"contacts\": [create_contract(*info) for info in project_contracts_info]\n    \n})","key":"cTHqnGp544"},{"type":"output","id":"v7N4_OHFOTpcEq8ZwoQK_","data":[],"key":"GGNuBZnNxZ"}],"key":"hwDFbWdtdS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"collection.validate()","key":"KVjSv4xhlU"},{"type":"output","id":"NOnUZumMMGTlhCROM1AMK","data":[],"key":"tx11WR26iT"}],"key":"r7HLpxVJNE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"collection","key":"whMYWX5WBu"},{"type":"output","id":"ILek5Vb1O4Tw4E7Qup-mc","data":[],"key":"JXrZrloPUJ"}],"key":"nPaxkB5kPE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# save this file and copy it to the catalog/projects/{project}/collection.json\ncollection.save_object(dest_href='project_collection.json')","key":"wfpKuOomx8"},{"type":"output","id":"eUar3-WcwQy4ZqHrGH0Vs","data":[],"key":"Vvd64REX8F"}],"key":"ipG2rJ94Yb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# optionally run this code to transfer the generated file to the OSC folder, ready to be commited.\n!mkdir -p ../open-science-catalog-metadata-staging/projects/worldcereal2/\n!cp project_collection.json ../open-science-catalog-metadata-staging/projects/worldcereal2/collection.json","key":"qFeuDNZRlk"},{"type":"output","id":"NhnmShHcQSiSMoE7UXn4f","data":[],"key":"hqdMJnKMC2"}],"key":"wxB3xWCccR"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a metadata collection for new product","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zHpfzAeaj4"}],"identifier":"create-a-metadata-collection-for-new-product","label":"Create a metadata collection for new product","html_id":"create-a-metadata-collection-for-new-product","implicit":true,"key":"t1DUp8V7F9"}],"key":"i954R4WlZt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"product_id = \"worldcereal-crop-extent-belgium2\"\nproduct_title = \"WorldCereal Crop Extent - Belgium2\"\nproduct_description = \"WorldCereal is an ESA initiative that provides global cropland and crop type maps at 10-meter resolution, offering seasonally updated data on temporary crops, croptypes (maize, winter cereals and spring cereals), and irrigation. This dataset provides the outputs for Belgium.\"\nproduct_keywords = [\n    \"Crops\",\n    \"Cereal\"\n]\nproduct_status = \"ongoing\"\nproduct_license = \"proprietary\"\n\n# Define spatial and temporal extent\nproduct_spatial_extent = pystac.SpatialExtent([[2.5135, 49.529, 6.156, 51.475]])\nproduct_temporal_extent = pystac.TemporalExtent([[datetime(2021, 1, 1), datetime(2021, 12, 31, 23, 59, 59)]])\nproduct_extent = pystac.Extent(spatial=product_spatial_extent, temporal=product_temporal_extent)\nproduct_region = \"Belgium\"\nproduct_themes = [\"land\"]\nproduct_missions = [ \"sentinel-2\"]\nproduct_variables = [  \"crop-yield-forecast\" ]\nproduct_parameters = [  \"crop-yield-forecast\" ]\n\nproduct_project_id = \"worldcereal2\"\nproduct_project_title = \"WorldCereal2\"\n\nproduct_doi = \"https://doi.org/10.57780/s3d-83ad619\"\n\n\n# define links to add\n\nproduct_target_relations = ['child', 'via', 'via']\nproduct_target_links = ['https://eoresults.esa.int/stac/collections/sentinel3-ampli-ice-sheet-elevation',\n                        'https://eoresults.esa.int/browser/#/external/eoresults.esa.int/stac/collections/sentinel3-ampli-ice-sheet-elevation',\n                        'https://eoresults.esa.int/d/sentinel3-ampli-ice-sheet-elevation/2025/05/07/sentinel-3-ampli-user-handbook/S3_AMPLI_User_Handbook.pdf']\nproduct_target_titles = ['PRR link', 'Access', 'Documentation']\n","key":"t0k3WGMmrC"},{"type":"output","id":"_4vwcN5WyXgYakwucmO4K","data":[],"key":"qYOCrRu44y"}],"key":"JC5jemuLzn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"product_collection = create_product_collection(\n    product_id, product_title, product_description, product_extent, \n    product_license, product_keywords, product_status, product_region, \n    product_project_id, product_project_title, product_parameters, product_doi)","key":"STw6jiZor4"},{"type":"output","id":"A-b-hyCK1Jp-QjgfBYeHX","data":[],"key":"sj94hneUGI"}],"key":"Vh6uoqVEjC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# add themes\nadd_themes(product_collection, product_themes)\n\n","key":"iBkBiXbMIf"},{"type":"output","id":"xiQXjK5cuck3Atn9UKZv5","data":[],"key":"bGWMfr9Ubc"}],"key":"d45f0xw9Ol"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"add_product_missions(product_collection, product_missions)","key":"WfBwew1X19"},{"type":"output","id":"woEDhTYLtRkQU3F4XZuwd","data":[],"key":"wh7AblZ9WX"}],"key":"MUS06iIijf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"add_product_variables(product_collection, product_variables)","key":"Qr3383iTw9"},{"type":"output","id":"YNDqrF1WC98AHdlFPlXz0","data":[],"key":"H9vF77HZan"}],"key":"sBUNhrqDec"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# add links\nadd_links(product_collection,\n          product_target_relations,\n          product_target_links,\n          product_target_titles\n)","key":"EK0lff2zlI"},{"type":"output","id":"bCP9VcDsrz3l_4rJnnlhK","data":[],"key":"vjVoPWLnCV"}],"key":"NWcChuon4y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"product_collection.validate()","key":"ALJgklGBpU"},{"type":"output","id":"T3fwxnsQCq09IScEZrh-8","data":[],"key":"GQTL8YrACd"}],"key":"I8i5jguXEU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"product_collection","key":"PzdjwHA325"},{"type":"output","id":"tEKsmI8Y3rQY365MXwgv8","data":[],"key":"agE12PfRfQ"}],"key":"lBYj1Zml1x"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# save this file and copy it to the catalog/products/{product_id}/collection.json\nproduct_collection.save_object(dest_href='product_collection.json')","key":"EMEIhhH9Kj"},{"type":"output","id":"YBQR8R0xsrcsQlRqOp10j","data":[],"key":"j3fspYMGUY"}],"key":"wzVJSui4pS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# optionally run this code to transfer the generated file to the OSC folder, ready to be commited.\n!mkdir -p ../open-science-catalog-metadata-staging/products/worldcereal-crop-extent-belgium2/\n!cp product_collection.json ../open-science-catalog-metadata-staging/products/worldcereal-crop-extent-belgium2/collection.json","key":"lduMZDL4zG"},{"type":"output","id":"J5so7cqsSuKec_qCtBV7b","data":[],"key":"sepVJKDCZM"}],"key":"PlwTQ1EL93"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a metadata collection for new workflow","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yf3uflV5WK"}],"identifier":"create-a-metadata-collection-for-new-workflow","label":"Create a metadata collection for new workflow","html_id":"create-a-metadata-collection-for-new-workflow","implicit":true,"key":"p98VK91Ugn"}],"key":"TbaMrVa61N"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"workflow_id = \"worldcereal-workflow2\"\nworkflow_title=\"ESA worldcereal global crop extent detector2\"\nworkflow_description=\"Detects crop land at 10m resolution, trained for global use. Based on Sentinel-1 and 2 data...\"\nworkflow_license = \"proprietary\"\nworkflow_keywords= [\"agriculture\", \"crops\"]\nworkflow_formats = [\"GeoTIFF\"]\nworkflow_project = \"worldcereal2\"\nworkflow_project_title = \"WorldCereal2\"\n\nworkflow_themes = ['land']\n\n# Define spatial and temporal extent\nspatial_extent = pystac.SpatialExtent([[-180.0, -90.0, 180.0, 90.0]])\ntemporal_extent = pystac.TemporalExtent([[datetime(2022, 2, 1), datetime(2026, 1, 31, 23, 59, 59)]])\nworkflow_extent = pystac.Extent(spatial=spatial_extent, temporal=temporal_extent)\n\n\n# add custom theme schemas\n\nworkflow_contracts_info = [\n    (\"Marie-Helene Rio\", [\"technical_officer\"], [\"marie-helene.rio@esa.int\"]),\n    (\"CNR-INSTITUTE OF MARINE SCIENCES-ISMAR (IT)\", [\"consortium_member\"], None),\n    (\"+ATLANTIC – Association for an Atla (PT)\", [\"consortium_member\"], None),\n]","key":"WIiSd05iII"},{"type":"output","id":"xtCRBSUGoziLKNp3pmpqh","data":[],"key":"BoPr0vkYXo"}],"key":"TetM50605R"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"workflow_collection = create_workflow_collection(workflow_id, workflow_title, \n                               workflow_description, workflow_license, workflow_extent,\n                               workflow_keywords, workflow_formats, workflow_project, workflow_project_title)","key":"m1jEdjEmll"},{"type":"output","id":"0ajA_Y4NZN6y-x220VWHW","data":[],"key":"A7jIsSLlcV"}],"key":"ZEYZkf2lhg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# add contacts\nworkflow_collection['properties'].update({\n\n    \"contacts\": [create_contract(*info) for info in workflow_contracts_info]\n    \n})\n","key":"UPmggUdptR"},{"type":"output","id":"aK_Gebj9Oo5Gq-b9S8zVn","data":[],"key":"gLllWsTOFY"}],"key":"uZdRuuwCiD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"workflow_collection['properties']['themes'] = [\n    {\n        \"scheme\": \"https://github.com/stac-extensions/osc#theme\",\n        \"concepts\": [{\"id\": t} for t in workflow_themes]\n    }\n]\n\nfor t in workflow_themes:\n    workflow_collection['links'].append(\n            {\n                    \"rel\": 'related',\n                    \"href\": f\"../../{t}/land/catalog.json\",\n                    \"type\": \"application/json\",\n                    \"title\": f'Theme: {t.capitalize()}'\n                }\n)","key":"H43ozk5pqR"},{"type":"output","id":"Jh8AZNdjUfz9-Z4g9LW9c","data":[],"key":"QEG7CVwsfw"}],"key":"IW6yw36rgv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"workflow_target_relations = ['openeo-process', 'git', 'service']\nworkflow_target_links = ['https://raw.githubusercontent.com/WorldCereal/worldcereal-classification/refs/tags/worldcereal_crop_extent_v1.0.1/src/worldcereal/udp/worldcereal_crop_extent.json',\n                        'https://github.com/WorldCereal/worldcereal-classification.git',\n                        'https://openeofed.dataspace.copernicus.eu']\nworkflow_target_titles = ['openEO Process Definition', 'Git source repository', 'CDSE openEO federation']\n\nfor rel, link, title in zip(workflow_target_relations, workflow_target_links, workflow_target_titles):\n    workflow_collection['links'].append(\n        {\n                \"rel\": rel,\n                \"href\": link,\n                \"type\": \"application/json\",\n                \"title\": title\n            }\n    )","key":"ZaN0jsYNdh"},{"type":"output","id":"MmS-KrFzTPNRmgDk-VGu1","data":[],"key":"G2moEBNbHM"}],"key":"orGJJOsVyU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import json\nwith open('record.json', 'w') as f:\n    json.dump(workflow_collection, f)","key":"W3Vv5igqVK"},{"type":"output","id":"oLpUz_qHcwWpw_RfYhUoL","data":[],"key":"ANo9es6Viw"}],"key":"uFiu13NfxB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# optionally run this code to transfer the generated file to the OSC folder, ready to be commited.\n!mkdir -p ../open-science-catalog-metadata-staging/workflows/worldcereal-workflow2/\n!cp record.json ../open-science-catalog-metadata-staging/workflows/worldcereal-workflow2/record.json","key":"jQ39GgoJka"},{"type":"output","id":"Xs_kXTWO0fDTQ0Tey9FWL","data":[],"key":"PR8PUorejR"}],"key":"VZhiOXM3rT"}],"key":"obiYyfBfFs"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Adding new content to Open Science Catalogue with Pull Request (PR)","url":"/osc-pr-manual","group":"EarthCODE Tutorials"},"next":{"title":"openEO","url":"/index-3","group":"EarthCODE Tutorials"}}},"domain":"http://localhost:3000"}