{"version":2,"kind":"Notebook","sha256":"7ec644d8343f1d99d3513d2c1d88a301434f12db591d894b32e8770018666bc2","slug":"workflow","location":"/openeo/1_workflow.ipynb","dependencies":[],"frontmatter":{"title":"Creating a workflow","content_includes_title":false,"kernelspec":{"name":"python3","display_name":".venv (3.13.2)","language":"python"},"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/ESA-EarthCODE/documentation/tree/main/examples","subject":"EarthCODE Examples","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/ESA-EarthCODE/documentation/tree/main/examples/blob/main/openeo/1_workflow.ipynb","exports":[{"format":"ipynb","filename":"1_workflow.ipynb","url":"/examples/build/1_workflow-4562995e3ddd3ad4b13482f0c3631aff.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This notebook showcases how to create a workflow using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NijzCIJbxv"},{"type":"link","url":"https://github.com/Open-EO/openeo-python-client","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"openEO Python client","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IQ825IZS0D"}],"urlSource":"https://github.com/Open-EO/openeo-python-client","error":true,"key":"yxXBSdbZFN"},{"type":"text","value":" within the Copernicus Data Space Ecosystem (CDSE). The workflow will be published as a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"n3Yagpnsxi"},{"type":"link","url":"https://open-eo.github.io/openeo-python-client/udp.html#","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"User Defined Process (UDP)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SFq7uZaOjb"}],"urlSource":"https://open-eo.github.io/openeo-python-client/udp.html#","key":"EkrvutbUUo"},{"type":"text","value":". UDPs allow you to encapsulate your processing workflow, which consists of multiple steps, into reusable openEO building blocks that can be called with a single command. This approach enables you to share and reuse your workflows across different projects and experiments.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"w2UPNOgjzl"}],"key":"qj8NN99o3p"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"If your workflow is part of a scientific or research experiment, you can publish it in the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"z4DBwN3Vv3"},{"type":"link","url":"https://opensciencedata.esa.int/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"EarthCODE Open Science Data Catalog","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Kx8ruUNwqs"}],"urlSource":"https://opensciencedata.esa.int/","key":"bYCpdvpTY2"},{"type":"text","value":" once finalized. This ensures that your workflow is findable and accessible to other users in the scientific community.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AEDK0jdCWM"}],"key":"H387yraEuh"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"In this example, we will create a workflow to generate a variability map, using Sentinel-2 data products that are available on the Copernicus Data Space Ecosystem. . In a variability map, each image pixel is assigned a specific category, which represents the deviation of the pixel value from the mean pixel value. These maps can be used to implement precision agriculture practices by applying different fertilization strategies for each category. For instance, a farmer might choose to apply more product to areas of the field that exhibit a negative deviation and less to those with positive deviations (enhancing poorer areas), or concentrate the application on regions with positive deviations (focusing on the more productive areas of the field).","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xwe1WOWgSU"}],"key":"PFqX3eIaaI"}],"key":"jnkNpUtyfo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import rasterio\nimport matplotlib.pyplot as plt\n\ndef visualise_tif(path: str):\n    with rasterio.open(path) as src:\n        data = src.read(1)  # Read the first band\n        plt.figure(figsize=(10, 10))\n        plt.imshow(data, cmap='viridis')\n        plt.colorbar()\n        plt.show()","key":"jUeuJWsKc3"},{"type":"output","id":"F-kmXkcH469eEzdIaNfwt","data":[],"key":"dKEY4ibnR7"}],"key":"RA140b2bNw"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Connection with CDSE openEO Federation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AlIfYehNkr"}],"identifier":"connection-with-cdse-openeo-federation","label":"Connection with CDSE openEO Federation","html_id":"connection-with-cdse-openeo-federation","implicit":true,"key":"agCBks8NMf"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The first step, before creating any processing workflow in openEO, is to authenticate with an available openEO backend. In this example, we will use the CDSE openEO federation, which provides seamless access to both datasets and processing resources across multiple federated openEO backends.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mwFftEf6M5"}],"key":"iQG7YpVmi2"}],"key":"NeCpOI8p3v"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import openeo\nimport json\nfrom openeo.rest.udp import build_process_dict","key":"ODerzdSomy"},{"type":"output","id":"uObAc-e2tMK3qcKecrzwc","data":[],"key":"tg7Rhk5WL0"}],"key":"Q1oyNmw0nt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"connection = openeo.connect(url=\"openeofed.dataspace.copernicus.eu\").authenticate_oidc()","key":"ehwso9V6Rr"},{"type":"output","id":"5Meqlm2JxSPEjZ6Vx3Ynq","data":[{"name":"stdout","output_type":"stream","text":"Authenticated using refresh token.\n"}],"key":"deb6OMorcI"}],"key":"hs3ETSS9MK"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Defining the workflow parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iiY4NmuUge"}],"identifier":"defining-the-workflow-parameters","label":"Defining the workflow parameters","html_id":"defining-the-workflow-parameters","implicit":true,"key":"B5opmMdmCc"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The first step in creating an openEO workflow is specifying the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fagNEAcQFK"},{"type":"link","url":"https://open-eo.github.io/openeo-python-client/api.html#openeo.api.process.Parameter","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"input parameters","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"C1xLSF8E3z"}],"urlSource":"https://open-eo.github.io/openeo-python-client/api.html#openeo.api.process.Parameter","key":"b7MxP9y80E"},{"type":"text","value":". These parameters enable users to execute the workflow with their own custom settings, making it adaptable to different datasets and use cases. openEO provides built-in ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"e4W9LR1DSz"},{"type":"link","url":"https://open-eo.github.io/openeo-python-client/udp.html#process-parameters","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"helper functions","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"LFI5LAyyjq"}],"urlSource":"https://open-eo.github.io/openeo-python-client/udp.html#process-parameters","key":"jFecjdH29T"},{"type":"text","value":" that assist in defining these parameters correctly.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"QmoPeYo6Yl"}],"key":"lR59u5ulEj"}],"key":"Cg2VjTCVfS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from openeo.api.process import Parameter","key":"aced12U3CX"},{"type":"output","id":"sf9cWQ52HsDyTlejUA8i3","data":[],"key":"V08GGAw05G"}],"key":"oKYnZoN0Gf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"area_of_interest = Parameter.geojson(name='spatial_extent', description=\"Spatial extent for which to generate the variability map\")\ntime_of_interest = Parameter.date(name='date', description=\"Date for which to generate the variability map\")","key":"ZNx2EF8Zsn"},{"type":"output","id":"xdXFfDbQQItYd584dzPPn","data":[],"key":"dJKluchShY"}],"key":"ugPL4pIf6p"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Implementation of the workflow","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eonQRX6cNP"}],"identifier":"implementation-of-the-workflow","label":"Implementation of the workflow","html_id":"implementation-of-the-workflow","implicit":true,"key":"dxEj2gyy0h"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Next, we will begin implementing the variability map workflow. This involves using the predefined functions in openEO to create a straightforward workflow consisting of the following steps:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ISrOlNvV6p"}],"key":"kaU8mJw2v7"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Select the S2 data based on the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"kpdm1XmB1q"},{"type":"inlineCode","value":"area_of_interest","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"tugkt9dR5j"},{"type":"text","value":" and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"lWnbLjuBHU"},{"type":"inlineCode","value":"time_of_interest","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XInrVAfZX3"},{"type":"text","value":" parameters.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"nvpu40PHFa"}],"key":"dawNiXpQpr"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Calculate the NDVI for the S2 data.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AXUthpM2MX"}],"key":"DXYiOFUvcP"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Apply an openEO User Defined Function (UDF) to calculate the deviation of each pixel against the mean pixel value of the datacube.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"FMazklfxaC"}],"key":"Z74rPhpXBI"}],"key":"OM4WCbjS07"}],"key":"VIXAxiZqxj"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Step 1. Select the S2 data based on the workflow parameters\ns2_cube = connection.load_collection(\n    \"SENTINEL2_L2A\",\n    spatial_extent=area_of_interest,\n    temporal_extent=[time_of_interest,time_of_interest],\n)\n    \ns2_masked = s2_cube.mask_polygon(area_of_interest)","key":"wks5XGa4ak"},{"type":"output","id":"z0uMtVL66BNtPl18MKJlb","data":[],"key":"gfOsUH3LNr"}],"key":"TtqFjXl7xy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Step 2. Calculate the S2 NDVI\ns2_ndvi = s2_masked.ndvi()","key":"DHMOQTeJvF"},{"type":"output","id":"xx4J2shyC3JFYiNlsvo5Q","data":[],"key":"bZzhdbBzO6"}],"key":"PuIR5FwdKB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Step 3. Apply the UDF to calculate the variability map\ncalculate_udf = openeo.UDF.from_file(\"./files/variability_map.py\")\nvarmap_dc = s2_ndvi.reduce_temporal(calculate_udf)","key":"yogSVMZl1q"},{"type":"output","id":"SK2dH0ru4xl5qMVFk8oXi","data":[],"key":"DtFfftW8LY"}],"key":"yaCpQvkimw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from IPython.display import JSON\n\nJSON(varmap_dc.to_json())","key":"GEvmr3M9wQ"},{"type":"output","id":"OJoj7VJkTy26n2ohLKytc","data":[{"name":"stderr","output_type":"stream","text":"/Users/bramjanssen/projects/earthcode/examples/.venv/lib/python3.13/site-packages/IPython/core/display.py:636: UserWarning: JSON expects JSONable dict or list, not JSON strings\n  warnings.warn(\"JSON expects JSONable dict or list, not JSON strings\")\n"},{"output_type":"execute_result","execution_count":11,"metadata":{"application/json":{"expanded":false,"root":"root"}},"data":{"application/json":{"content":"{\"process_graph\":{\"loadcollection1\":{\"arguments\":{\"id\":\"SENTINEL2_L2A\",\"spatial_extent\":{\"from_parameter\":\"spatial_extent\"},\"temporal_extent\":[{\"from_parameter\":\"date\"},{\"from_parameter\":\"date\"}]},\"process_id\":\"load_collection\"},\"maskpolygon1\":{\"arguments\":{\"data\":{\"from_node\":\"loadcollection1\"},\"mask\":{\"from_parameter\":\"spatial_extent\"}},\"process_id\":\"mask_polygon\"},\"ndvi1\":{\"arguments\":{\"data\":{\"from_node\":\"maskpolygon1\"}},\"process_id\":\"ndvi\"},\"reducedimension1\":{\"arguments\":{\"data\":{\"from_node\":\"ndvi1\"},\"dimension\":\"t\",\"reducer\":{\"process_graph\":{\"runudf1\":{\"arguments\":{\"data\":{\"from_parameter\":\"data\"},\"runtime\":\"Python\",\"udf\":\"import xarray\\nfrom openeo_udf.api.datacube import DataCube\\n\\n\\ndef apply_datacube(cube: DataCube, context) -> DataCube:\\n    import xarray\\n    import numpy as np\\n\\n    # Get the x array containing the time series\\n    array: xarray.DataArray = cube.get_array()\\n    min = 0.85\\n    max = 1.15\\n    step = 0.1\\n    mean = array.median(skipna=True)\\n    bins = np.arange(min, max + step, step) * mean.values.tolist()\\n    bins = np.concatenate([[0], bins, [255]])\\n    buckets = np.digitize(array.values, bins=bins).astype(float)\\n    return DataCube(\\n        xarray.DataArray(\\n            buckets,\\n            coords={\\n                \\\"t\\\": array.t.values,\\n                \\\"bands\\\": array.bands.values,\\n                \\\"y\\\": array.y.values,\\n                \\\"x\\\": array.x.values,\\n            },\\n            dims=[\\\"t\\\", \\\"bands\\\", \\\"y\\\", \\\"x\\\"],\\n        )\\n    )\\n\"},\"process_id\":\"run_udf\",\"result\":true}}}},\"process_id\":\"reduce_dimension\",\"result\":true}}}","content_type":"application/json"},"text/plain":{"content":"<IPython.core.display.JSON object>","content_type":"text/plain"}}}],"key":"bd125uSUM2"}],"key":"e4kiFr0VtM"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create an openEO-based workflow","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aUBrS4oadD"}],"identifier":"create-an-openeo-based-workflow","label":"Create an openEO-based workflow","html_id":"create-an-openeo-based-workflow","implicit":true,"key":"dQrRcEiEv8"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In this next step, we will create our workflow by establishing our openEO User Defined Process (UDP). This action will create a public reference to the workflow we developed in the preceding steps. This can be achieved by using the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Ay4oxcb2gS"},{"type":"link","url":"https://open-eo.github.io/openeo-python-client/api.html#openeo.rest.connection.Connection.save_user_defined_process","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"save_user_defined_process","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"h89mCNM2di"}],"urlSource":"https://open-eo.github.io/openeo-python-client/api.html#openeo.rest.connection.Connection.save_user_defined_process","key":"MrCeDvm8Bp"},{"type":"text","value":" function.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"r3Mk7J0gnJ"}],"key":"CB9WcyB8yJ"},{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"s1AzG9cKM7"}],"key":"qz6iElE7PA"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The publication of the UDP contains a public reference to the workflow, which can be shared with others. This allows users to execute the workflow without needing to recreate it from scratch, promoting collaboration and reuse of processing workflows.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"h4KXSinxB0"}],"key":"ANE8Uy2jj5"}],"key":"xAR0r200CM"}],"key":"ZHz458CDKm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"workflow = connection.save_user_defined_process(\n    \"variability_map\",\n    varmap_dc,\n    parameters=[area_of_interest, time_of_interest],\n    public=True\n)\nworkflow","key":"Zzpl829kju"},{"type":"output","id":"lM1Lu7Bai1menvZ0v4rLW","data":[{"name":"stderr","output_type":"stream","text":"Preflight process graph validation raised: [UpstreamValidationInfo] Backend 'cdse' reported validation errors [ProcessParameterRequired] Process 'n/a' parameter 'spatial_extent' is required.\n"},{"output_type":"execute_result","execution_count":14,"metadata":{},"data":{"text/html":{"content":"\n    <script>\n    if (!window.customElements || !window.customElements.get('openeo-process')) {\n        var el = document.createElement('script');\n        el.src = \"https://cdn.jsdelivr.net/npm/@openeo/vue-components@2/assets/openeo.min.js\";\n        document.head.appendChild(el);\n\n        var font = document.createElement('font');\n        font.as = \"font\";\n        font.type = \"font/woff2\";\n        font.crossOrigin = true;\n        font.href = \"https://use.fontawesome.com/releases/v5.13.0/webfonts/fa-solid-900.woff2\"\n        document.head.appendChild(font);\n    }\n    </script>\n    <openeo-process>\n        <script type=\"application/json\">{\"show-graph\": true, \"provide-download\": false, \"federation\": {\"cdse\": {\"description\": \"This openEO service runs on the [Copernicus Data Space Ecosystem](https://dataspace.copernicus.eu/)\\nand offers data access and processing on full archives of Copernicus data, such as the Sentinels.\", \"last_status_check\": \"2025-08-27T06:37:12Z\", \"status\": \"online\", \"title\": \"Copernicus Data Space Ecosystem openEO API\", \"url\": \"https://openeo.dataspace.copernicus.eu/openeo/1.1/\"}, \"terrascope\": {\"description\": \"OpenEO API to the Terrascope/VITO Remote Sensing product catalog and processing services (using GeoPySpark driver).\", \"last_status_check\": \"2025-08-27T06:37:12Z\", \"status\": \"online\", \"title\": \"VITO Remote Sensing openEO API\", \"url\": \"https://openeo-cdse.vito.be/openeo/1.1/\"}}, \"process\": {\"id\": \"variability_map\", \"links\": [{\"href\": \"https://openeo.dataspace.copernicus.eu/openeo/1.1/processes/u:6391851f-9042-4108-8b2a-3dd2e8a9dd0b/variability_map\", \"rel\": \"canonical\", \"title\": \"Public URL for user-defined process 'variability_map'\"}, {\"href\": \"https://openeofed.dataspace.copernicus.eu/openeo/1.2/processes/u:6391851f-9042-4108-8b2a-3dd2e8a9dd0b/variability_map\", \"rel\": \"canonical\", \"title\": \"Public URL for user-defined process 'variability_map'\"}], \"parameters\": [{\"description\": \"Spatial extent for which to generate the variability map\", \"name\": \"spatial_extent\", \"schema\": {\"subtype\": \"geojson\", \"type\": \"object\"}}, {\"description\": \"Date for which to generate the variability map\", \"name\": \"date\", \"schema\": {\"format\": \"date\", \"subtype\": \"date\", \"type\": \"string\"}}], \"process_graph\": {\"loadcollection1\": {\"arguments\": {\"id\": \"SENTINEL2_L2A\", \"spatial_extent\": {\"from_parameter\": \"spatial_extent\"}, \"temporal_extent\": [{\"from_parameter\": \"date\"}, {\"from_parameter\": \"date\"}]}, \"process_id\": \"load_collection\"}, \"maskpolygon1\": {\"arguments\": {\"data\": {\"from_node\": \"loadcollection1\"}, \"mask\": {\"from_parameter\": \"spatial_extent\"}}, \"process_id\": \"mask_polygon\"}, \"ndvi1\": {\"arguments\": {\"data\": {\"from_node\": \"maskpolygon1\"}}, \"process_id\": \"ndvi\"}, \"reducedimension1\": {\"arguments\": {\"data\": {\"from_node\": \"ndvi1\"}, \"dimension\": \"t\", \"reducer\": {\"process_graph\": {\"runudf1\": {\"arguments\": {\"data\": {\"from_parameter\": \"data\"}, \"runtime\": \"Python\", \"udf\": \"import xarray\\nfrom openeo_udf.api.datacube import DataCube\\n\\n\\ndef apply_datacube(cube: DataCube, context) -> DataCube:\\n    import xarray\\n    import numpy as np\\n\\n    # Get the x array containing the time series\\n    array: xarray.DataArray = cube.get_array()\\n    min = 0.85\\n    max = 1.15\\n    step = 0.1\\n    mean = array.median(skipna=True)\\n    bins = np.arange(min, max + step, step) * mean.values.tolist()\\n    bins = np.concatenate([[0], bins, [255]])\\n    buckets = np.digitize(array.values, bins=bins).astype(float)\\n    return DataCube(\\n        xarray.DataArray(\\n            buckets,\\n            coords={\\n                \\\"t\\\": array.t.values,\\n                \\\"bands\\\": array.bands.values,\\n                \\\"y\\\": array.y.values,\\n                \\\"x\\\": array.x.values,\\n            },\\n            dims=[\\\"t\\\", \\\"bands\\\", \\\"y\\\", \\\"x\\\"],\\n        )\\n    )\\n\"}, \"process_id\": \"run_udf\", \"result\": true}}}}, \"process_id\": \"reduce_dimension\", \"result\": true}}, \"public\": true}}</script>\n    </openeo-process>\n    ","content_type":"text/html"},"text/plain":{"content":"<openeo.rest.udp.RESTUserDefinedProcess at 0x1316af390>","content_type":"text/plain"}}}],"key":"vx1AmwstGf"}],"key":"joxELuCYJi"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In the previous step, we created a workflow as a UDP in openEO. We can now use the public URL to share the workflow with others or to execute it in different contexts. The UDP encapsulates the entire processing logic, making it easy to apply the same workflow to different datasets or parameters without needing to redefine the steps each time. In this example, the published UDP is available at the following URL: ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GIqgisQLkH"},{"type":"link","url":"https://openeo.dataspace.copernicus.eu/openeo/1.1/processes/u:6391851f-9042-4108-8b2a-3dd2e8a9dd0b/variability_map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Variability Map UDP","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"M5Z6rADIUE"}],"urlSource":"https://openeo.dataspace.copernicus.eu/openeo/1.1/processes/u:6391851f-9042-4108-8b2a-3dd2e8a9dd0b/variability_map","key":"BJtkmgZ1xh"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pFKB2vqPEA"}],"key":"x6s4PqkZ0o"}],"key":"TqMSWMtG12"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Testing the workflow","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LRG4AtLq03"}],"identifier":"testing-the-workflow","label":"Testing the workflow","html_id":"testing-the-workflow","implicit":true,"key":"fR9lv6Ogn0"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"After saving the workflow, we can test it by executing the UDP with specific parameters. This step allows us to verify that the workflow operates as expected and produces the desired results. We start by defining the parameters that we want to use for the test run. These parameters will be passed to the UDP when it is executed.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"b1y5jLHVvO"}],"key":"VXVifHVsCR"}],"key":"Zk4QVaq4Ka"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"spatial_extent_value = {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {},\n      \"geometry\": {\n        \"coordinates\": [\n          [\n            [\n              5.170043941798298,\n              51.25050990858725\n            ],\n            [\n              5.171035037521989,\n              51.24865722468999\n            ],\n            [\n              5.178521828188366,\n              51.24674578027137\n            ],\n            [\n              5.179084341977159,\n              51.24984764553983\n            ],\n            [\n              5.170043941798298,\n              51.25050990858725\n            ]\n          ]\n        ],\n        \"type\": \"Polygon\"\n      }\n    }\n  ]\n}\n\ndate_value = \"2025-05-01\"","key":"XrKoKHcHLv"},{"type":"output","id":"AG7F_tXhfuNYRlpHiYOQD","data":[],"key":"RijfxJeh5g"}],"key":"Tt9DcYHgH2"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Next we use our previously created datacube ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WCj7kqZtCZ"},{"type":"inlineCode","value":"varmap_dc","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GTPPYolB1d"},{"type":"text","value":" to execute our workflow as an openEO batch job. This step involves submitting the job to the openEO backend, which will process the data according to the defined workflow and parameters. The backend will handle the execution of the workflow and return the results, which can then be analyzed or visualized as needed.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SikOVPM8JL"}],"key":"b7EntbiR7w"}],"key":"XEtiA18rVq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"path =  \"./files/varmap_workflow_test.tiff\"\n\nvarmap_test = connection.datacube_from_process(\n    \"variability_map\",\n    spatial_extent=spatial_extent_value,\n    date=date_value,\n)\nvarmap_test.execute_batch(\n    path,\n    title=\"CDSE Federation - Variability Map Workflow Test\", \n    description=\"This is an example of a workflow test containing the calculation of a variability map in Belgium\",\n)","key":"D9TjwdeFKn"},{"type":"output","id":"lwA9JD525Bw5CZZU4d8_i","data":[{"name":"stderr","output_type":"stream","text":"Preflight process graph validation raised: [UpstreamValidationInfo] Backend 'cdse' reported validation errors [ProcessUnsupported] Process with identifier 'variability_map' is not available in namespace 'None'.\n"},{"name":"stdout","output_type":"stream","text":"0:00:00 Job 'cdse-j-2508191413394aa3adfbb79fd944e8ce': send 'start'\n0:00:13 Job 'cdse-j-2508191413394aa3adfbb79fd944e8ce': created (progress 0%)\n0:00:19 Job 'cdse-j-2508191413394aa3adfbb79fd944e8ce': created (progress 0%)\n0:00:26 Job 'cdse-j-2508191413394aa3adfbb79fd944e8ce': created (progress 0%)\n0:00:34 Job 'cdse-j-2508191413394aa3adfbb79fd944e8ce': running (progress N/A)\n0:00:44 Job 'cdse-j-2508191413394aa3adfbb79fd944e8ce': running (progress N/A)\n0:00:57 Job 'cdse-j-2508191413394aa3adfbb79fd944e8ce': running (progress N/A)\n0:01:13 Job 'cdse-j-2508191413394aa3adfbb79fd944e8ce': running (progress N/A)\n0:01:32 Job 'cdse-j-2508191413394aa3adfbb79fd944e8ce': finished (progress 100%)\n"},{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/html":{"content":"\n    <script>\n    if (!window.customElements || !window.customElements.get('openeo-job')) {\n        var el = document.createElement('script');\n        el.src = \"https://cdn.jsdelivr.net/npm/@openeo/vue-components@2/assets/openeo.min.js\";\n        document.head.appendChild(el);\n\n        var font = document.createElement('font');\n        font.as = \"font\";\n        font.type = \"font/woff2\";\n        font.crossOrigin = true;\n        font.href = \"https://use.fontawesome.com/releases/v5.13.0/webfonts/fa-solid-900.woff2\"\n        document.head.appendChild(font);\n    }\n    </script>\n    <openeo-job>\n        <script type=\"application/json\">{\"currency\": \"credits\", \"federation\": {\"cdse\": {\"description\": \"This openEO service runs on the [Copernicus Data Space Ecosystem](https://dataspace.copernicus.eu/)\\nand offers data access and processing on full archives of Copernicus data, such as the Sentinels.\", \"last_status_check\": \"2025-08-19T14:15:14Z\", \"status\": \"online\", \"title\": \"Copernicus Data Space Ecosystem openEO API\", \"url\": \"https://openeo.dataspace.copernicus.eu/openeo/1.1/\"}, \"terrascope\": {\"description\": \"OpenEO API to the Terrascope/VITO Remote Sensing product catalog and processing services (using GeoPySpark driver).\", \"last_status_check\": \"2025-08-19T14:15:14Z\", \"status\": \"online\", \"title\": \"VITO Remote Sensing openEO API\", \"url\": \"https://openeo-cdse.vito.be/openeo/1.1/\"}}, \"job\": {\"costs\": 4, \"created\": \"2025-08-19T14:13:39Z\", \"description\": \"This is an example of a workflow test containing the calculation of a variability map in Belgium\", \"id\": \"cdse-j-2508191413394aa3adfbb79fd944e8ce\", \"process\": {\"process_graph\": {\"saveresult1\": {\"arguments\": {\"data\": {\"from_node\": \"variabilitymap1\"}, \"format\": \"GTiff\", \"options\": {}}, \"process_id\": \"save_result\", \"result\": true}, \"variabilitymap1\": {\"arguments\": {\"date\": \"2025-05-01\", \"spatial_extent\": {\"features\": [{\"geometry\": {\"coordinates\": [[[5.170043941798298, 51.25050990858725], [5.171035037521989, 51.24865722468999], [5.178521828188366, 51.24674578027137], [5.179084341977159, 51.24984764553983], [5.170043941798298, 51.25050990858725]]], \"type\": \"Polygon\"}, \"properties\": {}, \"type\": \"Feature\"}], \"type\": \"FeatureCollection\"}}, \"process_id\": \"variability_map\"}}}, \"progress\": 100, \"status\": \"finished\", \"title\": \"CDSE Federation - Variability Map Workflow Test\", \"updated\": \"2025-08-19T14:15:09Z\", \"usage\": {\"cpu\": {\"unit\": \"cpu-seconds\", \"value\": 81}, \"duration\": {\"unit\": \"seconds\", \"value\": 71}, \"input_pixel\": {\"unit\": \"mega-pixel\", \"value\": 0.296875}, \"max_executor_memory\": {\"unit\": \"gb\", \"value\": 1.1738853454589844}, \"memory\": {\"unit\": \"mb-seconds\", \"value\": 318260}, \"network_received\": {\"unit\": \"b\", \"value\": 253204192}}}}</script>\n    </openeo-job>\n    ","content_type":"text/html"},"text/plain":{"content":"<BatchJob job_id='cdse-j-2508191413394aa3adfbb79fd944e8ce'>","content_type":"text/plain"}}}],"key":"wrfe67GIY6"}],"key":"bPplsOuUbO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Finally, we can visualize the results of our workflow. This step allows us to see the output of the variability map and assess its quality and relevance for our specific use case. Visualization is a crucial part of the workflow, as it helps in interpreting the results and making informed decisions based on the data processed by our openEO workflow.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vkYs9cSMIH"}],"key":"X77S6KOvuo"}],"key":"C0MJMxHDuh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"visualise_tif(path)","key":"CZHcMJDivG"},{"type":"output","id":"QTAcO9_UX8J3t_Qo7xRw_","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8dd3cd032dcbe3e6bc10644c867dac6b","path":"/examples/build/8dd3cd032dcbe3e6bc10644c867dac6b.png"},"text/plain":{"content":"<Figure size 1000x1000 with 2 Axes>","content_type":"text/plain"}}}],"key":"vkUGUWW4OG"}],"key":"Roc7dT62a4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"","key":"miAEaOkqJl"},{"type":"output","id":"Tmy6154S2wEZ-k9zp2Yuk","data":[],"key":"LAJD2uIFxb"}],"key":"nkmjq3CKTQ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Sharing your workflow","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OQXdgumXb1"}],"identifier":"sharing-your-workflow","label":"Sharing your workflow","html_id":"sharing-your-workflow","implicit":true,"key":"UrNNrKylIT"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now that our workflow has been created using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QH3XIvTInJ"},{"type":"inlineCode","value":"save_user_defined_process","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pIk8vshuV0"},{"type":"text","value":" and we’ve confirmed that it works, we can share it with others and the broader community. Using the openEO functions demonstrated before, the workflow is automatically stored on the openEO backend we connected to in the initial steps. The workflow, referred to as a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zXnR6VEnsG"},{"type":"link","url":"https://open-eo.github.io/openeo-python-client/udp.html#","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"User Defined Process (UDP)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gBwisTa162"}],"urlSource":"https://open-eo.github.io/openeo-python-client/udp.html#","key":"n67Nonr24k"},{"type":"text","value":" in openEO terminology, is a JSON-based structure that contains the steps of the workflow, represented as an ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aLghUCgp1x"},{"type":"link","url":"https://openeo.org/documentation/1.0/glossary.html#processes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"openEO process graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gaGqk3cdmu"}],"urlSource":"https://openeo.org/documentation/1.0/glossary.html#processes","key":"fm3cDtFUUG"},{"type":"text","value":", along with additional metadata such as a description of the workflow parameters.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fIhhxnx735"}],"key":"gB944vzYAx"},{"type":"heading","depth":3,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Exporting your workflow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Jw2hRJPED4"}],"identifier":"exporting-your-workflow","label":"Exporting your workflow","html_id":"exporting-your-workflow","implicit":true,"key":"V1FkQDy1H8"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"There are several ways to make your workflow accessible for reuse among peers and within your communities:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ieMaM2bBBq"}],"key":"PJAKPhS2Il"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Share the public URL with your peers","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"JrC8ZiyaCG"}],"key":"WADCVmOUe8"},{"type":"break","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"TWmlyuSU1U"},{"type":"text","value":"Since we used ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"RGrm0bb23t"},{"type":"inlineCode","value":"public=True","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"kXWlIz5nWo"},{"type":"text","value":" in our ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"PoocwA3cHW"},{"type":"inlineCode","value":"save_user_defined_process","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ijVxiYrBOR"},{"type":"text","value":", a public URL was automatically added to the workflow definition.\nIn this case, the public URL is:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"iOrlhCnTh4"},{"type":"link","url":"https://openeo.dataspace.copernicus.eu/openeo/1.1/processes/u:6391851f-9042-4108-8b2a-3dd2e8a9dd0b/variability_map","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"https://​openeo​.dataspace​.copernicus​.eu​/openeo​/1​.1​/processes​/u:6391851f​-9042​-4108​-8b2a​-3dd2e8a9dd0b​/variability​_map","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"WcZwRCsg6A"}],"urlSource":"https://openeo.dataspace.copernicus.eu/openeo/1.1/processes/u:6391851f-9042-4108-8b2a-3dd2e8a9dd0b/variability_map","key":"LQqOmicQNt"}],"key":"HLPLhc5l0v"}],"key":"P0UAS19GOd"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"strong","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Export the workflow definition to your preferred storage","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"JiDX2u8v8l"}],"key":"uV2y9TCv4A"},{"type":"break","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"hA6P0UAZgQ"},{"type":"text","value":"Alternatively, you can also export the workflow and store it in a version-controlled environment like GitHub or your own preferred storage. This gives you full control over its content and version history. In this case, instead of using ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"rmyuvRFpC9"},{"type":"inlineCode","value":"save_user_defined_process","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"A0aSrGDfLd"},{"type":"text","value":", you can use ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"RLYuCpHUhl"},{"type":"inlineCode","value":"build_process_dict","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"C7QnrlJnqP"},{"type":"text","value":" to create a dictionary representation of the workflow, which can then be written to a file. However, if you want others to reuse your workflow, make sure the file is ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Az4BscgFal"},{"type":"strong","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"accessible via a public URL","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"v2o1pLPfun"}],"key":"Y18R4u9SL0"},{"type":"text","value":". This is necessary for the openEO backend to retrieve and execute the workflow definition.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"wpr2kW4PF4"}],"key":"U6CDgbgamj"}],"key":"nLmr5gIxC0"}],"key":"BqGGw2lJhB"}],"key":"UJL2LMevBY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"spec = build_process_dict(\n    process_id=\"variability_map\",\n    process_graph=varmap_dc,\n    parameters=[area_of_interest, time_of_interest],\n)\n\nwith open(\"files/variability_map_workflow.json\", \"w\") as f:\n    json.dump(spec, f, indent=2)","key":"J3Z8qCNEiD"},{"type":"output","id":"a-he7aGXaW47gTGMrlOyW","data":[],"key":"nYsybtnqmF"}],"key":"U9CYVfBjCV"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Tip","key":"JN8ziGRYPA"}],"key":"pwc1sQZJNP"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"During the development phase, the public URL of the workflow can be used to quickly share early versions with your colleagues. However, once the workflow reaches a level of maturity suitable for broader community use, we recommend storing the workflow definition on GitHub. Since version control within openEO is limited, using open-source tools like GitHub allows for better management of release procedures and workflow updates.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"NakcE7LgCY"}],"key":"JG3AJ21xRp"}],"key":"oy7MP8Ajqn"}],"key":"VyiCxMUJPH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Sharing your workflow","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zI8R7Lmhxa"}],"identifier":"sharing-your-workflow","label":"Sharing your workflow","html_id":"sharing-your-workflow-1","implicit":true,"key":"pPRFeWUaZF"}],"key":"zNpmKTydb6"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Once you have a public reference to your workflow, either through the openEO backend or a public URL pointing to a definition stored on GitHub or another platform, you can share it in various ways to enable others to execute it, as shown in our ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vKc8QBrLhR"},{"type":"link","url":"/experiment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Creating an experiment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XTURmYup5y"}],"urlSource":"./2_experiment.ipynb","dataUrl":"/experiment.json","internal":true,"protocol":"file","key":"PPiv5aJCVV"},{"type":"text","value":" example. There are many different ways to share your workflow:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YYG70HzEUO"}],"key":"JWKjWUKDHd"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Direct sharing","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nBBnvTWapk"}],"key":"CK94IjxveN"},{"type":"text","value":" with peers and communities","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aKJc603bPS"}],"key":"oSw4f1zWaF"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Publishing your workflow on the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"avGTSieN5M"},{"type":"link","url":"https://opensciencedata.esa.int/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"EarthCODE Open Science Catalogue","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HC2uLQYENu"}],"key":"dbCRGnGa2S"}],"urlSource":"https://opensciencedata.esa.int/","key":"KoAmvludEU"},{"type":"text","value":", as demonstrated in our ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"kSkABX2BRn"},{"type":"link","url":"/publication","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"publication","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"noL5SZo6s1"}],"urlSource":"./3_publication.md","dataUrl":"/publication.json","internal":true,"protocol":"file","key":"QR80yaKnNA"},{"type":"text","value":" example","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"sjMWivCuzE"}],"key":"tCBZV86Dx8"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Publishing on platform marketplaces, such as the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OK8Lq63Zl9"},{"type":"link","url":"https://documentation.dataspace.copernicus.eu/Applications/AlgorithmPlaza.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Copernicus Data Space Ecosystem Algorithm Plaza","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sWXDJ70JWc"}],"urlSource":"https://documentation.dataspace.copernicus.eu/Applications/AlgorithmPlaza.html","key":"ds9YxZmboA"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZHX75HxDrS"}],"key":"v8ZU7jQ8tG"}],"key":"EIohGwoEkx"}],"key":"f610PaEjad"}],"key":"tHnZNg8meO"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"openEO","url":"/index-3","group":"EarthCODE Examples"},"next":{"title":"Creating an experiment","url":"/experiment","group":"EarthCODE Examples"}}},"domain":"http://localhost:3000"}