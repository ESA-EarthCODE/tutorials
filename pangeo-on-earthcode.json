{"version":2,"kind":"Notebook","sha256":"6ff23ddd3ca4988259465e4fd3486c4bce3a954f9cf0a8796eb42d273d7a8d0b","slug":"pangeo-on-earthcode","location":"/pangeo/burnt-area-example/pangeo_on_EarthCODE.ipynb","dependencies":[],"frontmatter":{"title":"Example EarthCODE Workflow","content_includes_title":false,"kernelspec":{"name":"conda-env-earthcode-bids-earthcode-bids-edc_pangeo-py","display_name":"earthcode-bids-earthcode-bids-edc_pangeo","language":"python"},"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/ESA-EarthCODE/tutorials","subject":"EarthCODE Tutorials","numbering":{"title":{"offset":1}},"source_url":"https://github.com/ESA-EarthCODE/tutorials/blob/main/pangeo/burnt-area-example/pangeo_on_EarthCODE.ipynb","edit_url":"https://github.com/ESA-EarthCODE/tutorials/edit/main/pangeo/burnt-area-example/pangeo_on_EarthCODE.ipynb","thumbnail":"/tutorials/build/2abbd18d64e70642d7c0e83666723e68.png","exports":[{"format":"ipynb","filename":"pangeo_on_EarthCODE.ipynb","url":"/tutorials/build/pangeo_on_EarthCODE-69287a3d71b657db55d6bde2cbdd8532.ipynb"}]},"widgets":{"application/vnd.jupyter.widget-state+json":{"state":{},"version_major":2,"version_minor":0}},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Context","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YNUvxU73TO"}],"identifier":"context","label":"Context","html_id":"context","implicit":true,"key":"B2iuYweHkk"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We will be using the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"eUdpLdWYeu"},{"type":"link","url":"https://pangeo.io/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Pangeo","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"FhcWtVnAfB"}],"urlSource":"https://pangeo.io/","key":"dtw8vXDO0Z"},{"type":"text","value":" open-source software stack to demonstrate how to fetch EarthCODE published data and publically available Sentinel-2 data to generate burn severity maps for the assessment of the areas affected by wildfires.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"p1mrt9qo9P"}],"key":"YA8hkTR1d8"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this workshop, we will be using the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"iyTMeKXAzN"},{"type":"link","url":"https://opensciencedata.esa.int/products/seasfire-cube/collection","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"SeasFire Data Cube","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"FksEck7yWH"}],"urlSource":"https://opensciencedata.esa.int/products/seasfire-cube/collection","key":"hrJPhLAWHy"},{"type":"text","value":" published to the EarthCODE Open Science Catalog.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"zMPRbUwqNi"}],"key":"hbQvXa924c"},{"type":"heading","depth":4,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Methodology approach","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"fOj0FIImPn"}],"identifier":"methodology-approach","label":"Methodology approach","html_id":"methodology-approach","implicit":true,"key":"J2fBPZuoDX"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":8,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Analyse and find burnt areas using SeasFire Data Cube","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"FrVsssYp42"}],"key":"doW52bd834"}],"key":"Rr5UxV2xmn"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Access Sentinel-2 L2A cloud optimised dataset through STAC","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"piXEs8fK4N"}],"key":"UryiXhTffn"}],"key":"ywdGgxNtS4"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Compute the Normalised Burn Ratio (NBR) index to highlight burned areas","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"RLGDGftvZ6"}],"key":"Oq1Ky7Q3DF"}],"key":"qpz9YX10HF"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Classify burn severity","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"NrR4Vnb4jt"}],"key":"P1yxP6pUkL"}],"key":"koGTXY4VZb"}],"key":"UZOoFyHPnt"},{"type":"heading","depth":4,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Highlights","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"y71K8LaLt4"}],"identifier":"highlights","label":"Highlights","html_id":"highlights","implicit":true,"key":"EEbwi7sYtn"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Using OSC data","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"mOyA3XsF2F"}],"key":"Ril4AzHdX9"}],"key":"BNEGjA7HdA"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"The NBR index uses near-infrared (NIR) and shortwave-infrared (SWIR) wavelengths.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"jJpZg0OGVA"}],"key":"INKtFy0h32"}],"key":"XF42pcP7yd"}],"key":"euDQXjy0D6"},{"type":"heading","depth":3,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Data","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"Ov8MX4VN4r"}],"identifier":"data","label":"Data","html_id":"data","implicit":true,"key":"HeGj9PSgPK"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"We will use Sentinel-2 data accessed via ","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"jAwOQ7rjmY"},{"type":"link","url":"https://element84.com/earth-search/","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"element84’s STAC API","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"NKFtf9JHqv"}],"urlSource":"https://element84.com/earth-search/","key":"M74jrcxbCP"},{"type":"text","value":" endpoint and the ","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"EJQS6ldWKI"},{"type":"link","url":"https://opensciencedata.esa.int/products/seasfire-cube/collection","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"SeasFire Data Cube","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"ykMQHW7RSa"}],"urlSource":"https://opensciencedata.esa.int/products/seasfire-cube/collection","key":"HMIJVREl34"},{"type":"text","value":" to find burned areas, inspect them in more detail and generate burn severity maps for the assessment of the areas affected by wildfires.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"rQurOrxYgo"}],"key":"BKTxInGBqs"},{"type":"heading","depth":5,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Related publications","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"IUXCi9P9cd"}],"identifier":"related-publications","label":"Related publications","html_id":"related-publications","implicit":true,"key":"scBL77XT4i"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":24,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://www.sciencedirect.com/science/article/pii/S1470160X22004708#f0035","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"https://​www​.sciencedirect​.com​/science​/article​/pii​/S1470160X22004708​#f0035","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"jDWtN70Zqa"}],"urlSource":"https://www.sciencedirect.com/science/article/pii/S1470160X22004708#f0035","key":"EFbefmVDSX"}],"key":"QNvTu6VvUC"}],"key":"qRnT8Guqhd"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://github.com/yobimania/dea-notebooks/blob/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"https://github.com/yobimania/dea-notebooks/blob/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire Analysis Compiled Scripts (Gadi)/dNBR_full.py","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"FsZaLgEoE3"}],"urlSource":"https://github.com/yobimania/dea-notebooks/blob/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py","data":{"kind":"file","org":"yobimania","repo":"dea-notebooks","reference":"e0ca59f437395f7c9becca74badcf8c49da6ee90","file":"Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py","raw":"https://raw.githubusercontent.com/yobimania/dea-notebooks/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py"},"internal":false,"protocol":"github","key":"Dh8yhtGWoU"}],"key":"qHvxPKUTIl"}],"key":"uJp2A0ztFv"},{"type":"listItem","spread":true,"position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"paragraph","children":[{"type":"emphasis","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Alonso, Lazaro, Gans, Fabian, Karasante, Ilektra, Ahuja, Akanksha, Prapas, Ioannis, Kondylatos, Spyros, Papoutsis, Ioannis, Panagiotou, Eleannna, Michail, Dimitrios, Cremer, Felix, Weber, Ulrich, & Carvalhais, Nuno. (2022). SeasFire Cube: A Global Dataset for Seasonal Fire Modeling in the Earth System (0.4) [Data set]. Zenodo. ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"D4Xns2G5Dd"},{"type":"cite","identifier":"alonso-2024","label":"alonso-2024","kind":"narrative","position":{"start":{"line":26,"column":331},"end":{"line":26,"column":343}},"children":[{"type":"text","value":"Alonso ","key":"u64opfm00t"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"CtzS5TpAON"}],"key":"bEW2dJ2EUT"},{"type":"text","value":" (2024)","key":"HD1A1vv4sK"}],"enumerator":"1","key":"ptxfwAnmJL"},{"type":"text","value":". The same dataset can also be downloaded from Zenodo: ","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"KzgPK0D385"},{"type":"link","url":"https://zenodo.org/records/13834057","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"https://​zenodo​.org​/records​/13834057","position":{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},"key":"Drcw7STdUq"}],"urlSource":"https://zenodo.org/records/13834057","key":"UmnMxdX0hu"}],"key":"v6ZZ0F9Hfe"}],"key":"oGQZyQzB7p"}],"key":"L4qdUYJEoM"},{"type":"listItem","spread":true,"position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"paragraph","children":[{"type":"emphasis","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"link","url":"https://registry.opendata.aws/sentinel-2-l2a-cogs/","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"https://​registry​.opendata​.aws​/sentinel​-2​-l2a​-cogs/","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"twMijCKXjm"}],"urlSource":"https://registry.opendata.aws/sentinel-2-l2a-cogs/","key":"bZgiZ4o3Do"}],"key":"q7gvxRhwI0"}],"key":"hicBCoux49"}],"key":"BEMpcuidb1"}],"key":"J0wmdzTtcg"}],"key":"AugKEafcXq"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import Packages","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SYu2Vakb3a"}],"identifier":"import-packages","label":"Import Packages","html_id":"import-packages","implicit":true,"key":"w1bQk6V9Q5"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"As best practices dictate, we recommend that you install and import all the necessary libraries at the top of your Jupyter notebook.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vM7VtcOPZo"}],"key":"zlwyLrt8G6"}],"key":"AoOkyX3N8n"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"import json\nimport xarray\nimport rasterio\n\nfrom datetime import datetime\nfrom datetime import timedelta\n\nimport numpy as np\nimport pandas as pd\nimport geopandas as gpd\n\nimport hvplot.xarray\nimport dask.distributed\n\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nimport shapely\n\nfrom pystac_client import Client as pystac_client\nfrom odc.stac import stac_load\n\nimport os\nimport xrlint.all as xrl\nfrom xcube.core.verify import assert_cube\n","key":"cZMYdFjKyl"},{"type":"output","id":"6yrC7u-a1MJ_VQxybFKzd","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<script type=\"esms-options\">{\"shimMode\": true}</script><style>*[data-root-id],\n*[data-root-id] > * {\n  box-sizing: border-box;\n  font-family: var(--jp-ui-font-family);\n  font-size: var(--jp-ui-font-size1);\n  color: var(--vscode-editor-foreground, var(--jp-ui-font-color1));\n}\n\n/* Override VSCode background color */\n.cell-output-ipywidget-background:has(\n    > .cell-output-ipywidget-background > .lm-Widget > *[data-root-id]\n  ),\n.cell-output-ipywidget-background:has(> .lm-Widget > *[data-root-id]) {\n  background-color: transparent !important;\n}\n</style>","content_type":"text/html"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = false;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.0/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.7.3.min.js\", \"https://cdn.holoviz.org/panel/1.7.0/dist/panel.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            console.log(message)\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        comm.open();\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"701aa0be-056e-43a8-93bc-0dc5e074737d"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content":"<div id='701aa0be-056e-43a8-93bc-0dc5e074737d'>\n  <div id=\"cbe18ada-1895-4d23-9fc3-3bc28a12bcdd\" data-root-id=\"701aa0be-056e-43a8-93bc-0dc5e074737d\" style=\"display: contents;\"></div>\n</div>\n<script type=\"application/javascript\">(function(root) {\n  var docs_json = {\"28553146-2e72-4f4c-a497-44ecb1114fe8\":{\"version\":\"3.7.3\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"panel.models.browser.BrowserInfo\",\"id\":\"701aa0be-056e-43a8-93bc-0dc5e074737d\"},{\"type\":\"object\",\"name\":\"panel.models.comm_manager.CommManager\",\"id\":\"dbc3edfc-4795-4210-abce-164b4e450acd\",\"attributes\":{\"plot_id\":\"701aa0be-056e-43a8-93bc-0dc5e074737d\",\"comm_id\":\"6fd6bb6906a747b19f19d8c3a39bdb12\",\"client_comm_id\":\"fdfa81a990b7470e83fcaf129efbe17b\"}}],\"defs\":[{\"type\":\"model\",\"name\":\"ReactiveHTML1\"},{\"type\":\"model\",\"name\":\"FlexBox1\",\"properties\":[{\"name\":\"align_content\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"align_items\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"flex_direction\",\"kind\":\"Any\",\"default\":\"row\"},{\"name\":\"flex_wrap\",\"kind\":\"Any\",\"default\":\"wrap\"},{\"name\":\"gap\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"justify_content\",\"kind\":\"Any\",\"default\":\"flex-start\"}]},{\"type\":\"model\",\"name\":\"FloatPanel1\",\"properties\":[{\"name\":\"config\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"contained\",\"kind\":\"Any\",\"default\":true},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"right-top\"},{\"name\":\"offsetx\",\"kind\":\"Any\",\"default\":null},{\"name\":\"offsety\",\"kind\":\"Any\",\"default\":null},{\"name\":\"theme\",\"kind\":\"Any\",\"default\":\"primary\"},{\"name\":\"status\",\"kind\":\"Any\",\"default\":\"normalized\"}]},{\"type\":\"model\",\"name\":\"GridStack1\",\"properties\":[{\"name\":\"ncols\",\"kind\":\"Any\",\"default\":null},{\"name\":\"nrows\",\"kind\":\"Any\",\"default\":null},{\"name\":\"allow_resize\",\"kind\":\"Any\",\"default\":true},{\"name\":\"allow_drag\",\"kind\":\"Any\",\"default\":true},{\"name\":\"state\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"drag1\",\"properties\":[{\"name\":\"slider_width\",\"kind\":\"Any\",\"default\":5},{\"name\":\"slider_color\",\"kind\":\"Any\",\"default\":\"black\"},{\"name\":\"value\",\"kind\":\"Any\",\"default\":50}]},{\"type\":\"model\",\"name\":\"click1\",\"properties\":[{\"name\":\"terminal_output\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"debug_name\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"clears\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"FastWrapper1\",\"properties\":[{\"name\":\"object\",\"kind\":\"Any\",\"default\":null},{\"name\":\"style\",\"kind\":\"Any\",\"default\":null}]},{\"type\":\"model\",\"name\":\"NotificationArea1\",\"properties\":[{\"name\":\"js_events\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"max_notifications\",\"kind\":\"Any\",\"default\":5},{\"name\":\"notifications\",\"kind\":\"Any\",\"default\":[]},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"bottom-right\"},{\"name\":\"_clear\",\"kind\":\"Any\",\"default\":0},{\"name\":\"types\",\"kind\":\"Any\",\"default\":[{\"type\":\"map\",\"entries\":[[\"type\",\"warning\"],[\"background\",\"#ffc107\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-exclamation-triangle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]},{\"type\":\"map\",\"entries\":[[\"type\",\"info\"],[\"background\",\"#007bff\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-info-circle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]}]}]},{\"type\":\"model\",\"name\":\"Notification\",\"properties\":[{\"name\":\"background\",\"kind\":\"Any\",\"default\":null},{\"name\":\"duration\",\"kind\":\"Any\",\"default\":3000},{\"name\":\"icon\",\"kind\":\"Any\",\"default\":null},{\"name\":\"message\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"notification_type\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_rendered\",\"kind\":\"Any\",\"default\":false},{\"name\":\"_destroyed\",\"kind\":\"Any\",\"default\":false}]},{\"type\":\"model\",\"name\":\"TemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"BootstrapTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"TemplateEditor1\",\"properties\":[{\"name\":\"layout\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"MaterialTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"ReactiveESM1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"JSComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"ReactComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"AnyWidgetComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"request_value1\",\"properties\":[{\"name\":\"fill\",\"kind\":\"Any\",\"default\":\"none\"},{\"name\":\"_synced\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_request_sync\",\"kind\":\"Any\",\"default\":0}]}]}};\n  var render_items = [{\"docid\":\"28553146-2e72-4f4c-a497-44ecb1114fe8\",\"roots\":{\"701aa0be-056e-43a8-93bc-0dc5e074737d\":\"cbe18ada-1895-4d23-9fc3-3bc28a12bcdd\"},\"root_ids\":[\"701aa0be-056e-43a8-93bc-0dc5e074737d\"]}];\n  var docs = Object.values(docs_json)\n  if (!docs) {\n    return\n  }\n  const py_version = docs[0].version.replace('rc', '-rc.').replace('.dev', '-dev.')\n  async function embed_document(root) {\n    var Bokeh = get_bokeh(root)\n    await Bokeh.embed.embed_items_notebook(docs_json, render_items);\n    for (const render_item of render_items) {\n      for (const root_id of render_item.root_ids) {\n\tconst id_el = document.getElementById(root_id)\n\tif (id_el.children.length && id_el.children[0].hasAttribute('data-root-id')) {\n\t  const root_el = id_el.children[0]\n\t  root_el.id = root_el.id + '-rendered'\n\t  for (const child of root_el.children) {\n            // Ensure JupyterLab does not capture keyboard shortcuts\n            // see: https://jupyterlab.readthedocs.io/en/4.1.x/extension/notebook.html#keyboard-interaction-model\n\t    child.setAttribute('data-lm-suppress-shortcuts', 'true')\n\t  }\n\t}\n      }\n    }\n  }\n  function get_bokeh(root) {\n    if (root.Bokeh === undefined) {\n      return null\n    } else if (root.Bokeh.version !== py_version) {\n      if (root.Bokeh.versions === undefined || !root.Bokeh.versions.has(py_version)) {\n\treturn null\n      }\n      return root.Bokeh.versions.get(py_version);\n    } else if (root.Bokeh.version === py_version) {\n      return root.Bokeh\n    }\n    return null\n  }\n  function is_loaded(root) {\n    var Bokeh = get_bokeh(root)\n    return (Bokeh != null && Bokeh.Panel !== undefined)\n  }\n  if (is_loaded(root)) {\n    embed_document(root);\n  } else {\n    var attempts = 0;\n    var timer = setInterval(function(root) {\n      if (is_loaded(root)) {\n        clearInterval(timer);\n        embed_document(root);\n      } else if (document.readyState == \"complete\") {\n        attempts++;\n        if (attempts > 200) {\n          clearInterval(timer);\n\t  var Bokeh = get_bokeh(root)\n\t  if (Bokeh == null || Bokeh.Panel == null) {\n            console.warn(\"Panel: ERROR: Unable to run Panel code because Bokeh or Panel library is missing\");\n\t  } else {\n\t    console.warn(\"Panel: WARNING: Attempting to render but not all required libraries could be resolved.\")\n\t    embed_document(root)\n\t  }\n        }\n      }\n    }, 25, root)\n  }\n})(window);</script>","content_type":"text/html"}}}],"key":"plXWpxYO9Q"}],"key":"eZMepLN7UC"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create and startup your Dask Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AXxq7Vj5XA"}],"identifier":"create-and-startup-your-dask-cluster","label":"Create and startup your Dask Cluster","html_id":"create-and-startup-your-dask-cluster","implicit":true,"key":"QLtSfLhHCx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create dask cluster as described in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OSLmx4xJ8q"},{"type":"link","url":"/dask101","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"dask 101 guide","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uDydnU50b0"}],"urlSource":"../pangeo101/dask101.ipynb","dataUrl":"/dask101.json","internal":true,"protocol":"file","key":"YrmLQ5omlc"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vPJlFFwLm4"}],"key":"hYdQjaDf3c"}],"key":"rezyXxOBv3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from dask_gateway import Gateway\ngateway = Gateway()","key":"WoT5T1sXQ0"},{"type":"output","id":"bWBgm2QTg2pWSpDBMU0vS","data":[],"key":"RpW5eG5vAa"}],"key":"MHP5c1onun"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cluster_options = gateway.cluster_options()\ncluster_options.profile = 'medium'\ncluster_options","key":"Sw7aCYHBKW"},{"type":"output","id":"2WnsTC9kQ_spvROEL2JAZ","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"ffa53c8ae8644c2d98b7e15b3038054f\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"VBox(children=(HTML(value='<h2>Cluster Options</h2>'), GridBox(children=(HTML(value=\"<p style='font-weight: bo…","content_type":"text/plain"}}}],"key":"mCc63qcFor"}],"key":"xzDhgsvPwk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cluster = gateway.new_cluster(cluster_options=cluster_options)\ncluster.scale(2)\ncluster","key":"Rk46ltZyXe"},{"type":"output","id":"kunhGEctfhQfZyzOfD7NJ","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"b8b8fee1d0dc4c40a3751ce834598574\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"VBox(children=(HTML(value='<h2>GatewayCluster</h2>'), HBox(children=(HTML(value='\\n<div>\\n<style scoped>\\n    …","content_type":"text/plain"}}}],"key":"SqYbm7E6wn"}],"key":"Z1RJPcNiB0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client = cluster.get_client()\nclient","key":"dSS6EUtvkR"},{"type":"output","id":"tDeJRRMimB7HFiT8q8rCY","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/html":{"content":"<div>\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\"> </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px;\">Client</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Client-517a7cd4-9ad9-11f0-83e8-0255ac10005f</p>\n        <table style=\"width: 100%; text-align: left;\">\n\n        <tr>\n        \n            <td style=\"text-align: left;\"><strong>Connection method:</strong> Cluster object</td>\n            <td style=\"text-align: left;\"><strong>Cluster type:</strong> dask_gateway.GatewayCluster</td>\n        \n        </tr>\n\n        \n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard: </strong> <a href=\"https://hub-otc-sc.eox.at/services/eoxhub-gateway/earthcode-bids/traefik-dask-gateway/clusters/earthcode-bids.813dadac246942feb61c49073c8e779b/status\" target=\"_blank\">https://hub-otc-sc.eox.at/services/eoxhub-gateway/earthcode-bids/traefik-dask-gateway/clusters/earthcode-bids.813dadac246942feb61c49073c8e779b/status</a>\n                </td>\n                <td style=\"text-align: left;\"></td>\n            </tr>\n        \n\n        </table>\n\n        \n\n        \n            <details>\n            <summary style=\"margin-bottom: 20px;\"><h3 style=\"display: inline;\">Cluster Info</h3></summary>\n            <div style='background-color: #f2f2f2; display: inline-block; padding: 10px; border: 1px solid #999999;'>\n  <h3>GatewayCluster</h3>\n  <ul>\n    <li><b>Name: </b>earthcode-bids.813dadac246942feb61c49073c8e779b\n    <li><b>Dashboard: </b><a href='https://hub-otc-sc.eox.at/services/eoxhub-gateway/earthcode-bids/traefik-dask-gateway/clusters/earthcode-bids.813dadac246942feb61c49073c8e779b/status' target='_blank'>https://hub-otc-sc.eox.at/services/eoxhub-gateway/earthcode-bids/traefik-dask-gateway/clusters/earthcode-bids.813dadac246942feb61c49073c8e779b/status</a>\n  </ul>\n</div>\n\n            </details>\n        \n\n    </div>\n</div>","content_type":"text/html"},"text/plain":{"content":"<Client: 'tls://172.16.0.88:8786' processes=0 threads=0, memory=0 B>","content_type":"text/plain"}}}],"key":"Ua6ETzEflN"}],"key":"Osrh8D7KuM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# or create a local dask cluster on a local machine.\n\n# from dask.distributed import Client\n# client = Client()   \n# client\n# # client.close()","key":"TYQbBDWvMV"},{"type":"output","id":"hEcUSofBGmPsk2-FKkkpj","data":[],"key":"Vbv8RNtEDR"}],"key":"ce0WsKQyFh"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load the Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Kh8qObhAjB"}],"identifier":"load-the-data","label":"Load the Data","html_id":"load-the-data","implicit":true,"key":"UQmxfaM6Fu"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Lazy load in data in Xarray as described in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bbe1BJEeSo"},{"type":"link","url":"/xarray101","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"xarray 101 guide","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BLiiS8QfTb"}],"urlSource":"../pangeo101/xarray101.ipynb","dataUrl":"/xarray101.json","internal":true,"protocol":"file","key":"avgcHKqHNs"},{"type":"text","value":". Note that the SeasFire data is +100GB and hosted remotely, we are just loading metadata, xarray will load only the chunks (dask data arrays) needed for our computations as discussed in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PluyWpdg83"},{"type":"link","url":"/dask101","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"dask 101 guide","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FJB3Q84w4C"}],"urlSource":"../pangeo101/dask101.ipynb","dataUrl":"/dask101.json","internal":true,"protocol":"file","key":"h9Zoe2TGNP"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PeHLbJEDuZ"}],"key":"lVPxuKftr8"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The SeasFire Cube contains various variables for forecasting seasonal fires across the globe, we will specifically be using it to access historical wildfire data:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hXtg0pGBPk"}],"key":"wyLu50KBf5"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The SeasFire Cube is a scientific datacube for seasonal fire forecasting around the globe. It has been created for the SeasFire project, that adresses ‘Earth System Deep Learning for Seasonal Fire Forecasting’ and is funded by the European Space Agency (ESA)  in the context of ESA Future EO-1 Science for Society Call. It contains almost 20 years of data (2001-2021) in an 8-days time resolution and 0.25 degrees grid resolution. It has a diverse range of seasonal fire drivers. It expands from atmospheric and climatological ones to vegetation variables, socioeconomic and the target variables related to wildfires such as burned areas, fire radiative power, and wildfire-related CO2 emissions.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"z1FWHLs07V"}],"key":"Uxp3KBVg6L"}],"key":"touG7Ve798"}],"key":"bd6ddekODq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"http_url = \"https://s3.waw4-1.cloudferro.com/EarthCODE/OSCAssets/seasfire/seasfire_v0.4.zarr/\"\n\nds = xarray.open_dataset(\n\thttp_url,\n\tengine='zarr',\n    chunks={},\n\tconsolidated=True\n\t# storage_options = {'token': 'anon'}\n)\nds","key":"iC5eJaNEkG"},{"type":"output","id":"qZDm5qptBTzN5z8lqrZ55","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"f421e53f98d2d7a01749d9566bb629cd","path":"/tutorials/build/f421e53f98d2d7a01749d9566bb629cd.html"},"text/plain":{"content":"<xarray.Dataset> Size: 164GB\nDimensions:                         (latitude: 720, longitude: 1440, time: 966)\nCoordinates:\n  * latitude                        (latitude) float64 6kB 89.88 ... -89.88\n  * longitude                       (longitude) float64 12kB -179.9 ... 179.9\n  * time                            (time) datetime64[ns] 8kB 2001-01-01 ... ...\nData variables: (12/59)\n    area                            (latitude, longitude) float32 4MB dask.array<chunksize=(180, 360), meta=np.ndarray>\n    biomes                          (latitude, longitude) float32 4MB dask.array<chunksize=(180, 360), meta=np.ndarray>\n    cams_co2fire                    (time, latitude, longitude) float32 4GB dask.array<chunksize=(966, 180, 360), meta=np.ndarray>\n    cams_frpfire                    (time, latitude, longitude) float32 4GB dask.array<chunksize=(966, 180, 360), meta=np.ndarray>\n    drought_code_max                (time, latitude, longitude) float32 4GB dask.array<chunksize=(966, 180, 360), meta=np.ndarray>\n    drought_code_mean               (time, latitude, longitude) float32 4GB dask.array<chunksize=(966, 180, 360), meta=np.ndarray>\n    ...                              ...\n    t2m_max                         (time, latitude, longitude) float32 4GB dask.array<chunksize=(966, 180, 360), meta=np.ndarray>\n    t2m_mean                        (time, latitude, longitude) float32 4GB dask.array<chunksize=(966, 180, 360), meta=np.ndarray>\n    t2m_min                         (time, latitude, longitude) float32 4GB dask.array<chunksize=(966, 180, 360), meta=np.ndarray>\n    tp                              (time, latitude, longitude) float32 4GB dask.array<chunksize=(966, 180, 360), meta=np.ndarray>\n    vpd                             (time, latitude, longitude) float32 4GB dask.array<chunksize=(966, 180, 360), meta=np.ndarray>\n    ws10                            (time, latitude, longitude) float32 4GB dask.array<chunksize=(966, 180, 360), meta=np.ndarray>\nAttributes:\n    crs:          EPSG:4326\n    description:  The SeasFire Cube is a scientific datacube for seasonal fir...\n    title:        SeasFire Cube: A Global Dataset for Seasonal Fire Modeling ...","content_type":"text/plain"}}}],"key":"v0zlDHISWo"}],"key":"xTnh0w9JIy"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Analyse Wildfires","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MO06GcOsuW"}],"identifier":"analyse-wildfires","label":"Analyse Wildfires","html_id":"analyse-wildfires","implicit":true,"key":"CveLq6sUDQ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Our first task will be to find the date of the largest burnt area over the region we were previously exploring, so that we may analyse it in detail.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"SAdtSTPCs0"}],"key":"TlPegy1qE1"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"One of the data variables from the SeasFire DataCube is the Burned Areas data from Global Wildfire Information System (GWIS). Each entry gives us the hectares (ha) of burnt area in that region. Note that our input resolution is 0.25 degrees (approx. 28x28 km per pixel), spanning 20 years (2001-2021) at an 8 days time resolution.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"svbHH5Tn0Z"}],"key":"xeksDyGgRW"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"First we lazy load just the GWIS dataset in a variable for convenience (note that again, this does not take up a large amount of memory since we’re just working with the metadata at this point)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xxn3SGUJ2Q"}],"key":"JZiAHdhgNq"}],"key":"SCAF22rfn6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"gwis = ds.gwis_ba\ngwis","key":"nLgVLdFtzP"},{"type":"output","id":"qVT73VYJtQ_wAdQIsOFOG","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1f1f1f;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;gwis_ba&#x27; (time: 966, latitude: 720, longitude: 1440)&gt; Size: 4GB\ndask.array&lt;open_dataset-gwis_ba, shape=(966, 720, 1440), dtype=float32, chunksize=(966, 180, 360), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * latitude   (latitude) float64 6kB 89.88 89.62 89.38 ... -89.38 -89.62 -89.88\n  * longitude  (longitude) float64 12kB -179.9 -179.6 -179.4 ... 179.6 179.9\n  * time       (time) datetime64[ns] 8kB 2001-01-01 2001-01-09 ... 2021-12-27\nAttributes:\n    aggregation:      Spatio-Temporal | sum\n    creator_notes:    The missing data for the year 2001 has been filled with...\n    downloaded_from:  https://gwis.jrc.ec.europa.eu/apps/country.profile/down...\n    long_name:        Burned Areas from GWIS\n    provider:         Global Wildfire Information System (GWIS)\n    units:            hectares (ha)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'gwis_ba'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 966</li><li><span class='xr-has-index'>latitude</span>: 720</li><li><span class='xr-has-index'>longitude</span>: 1440</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-973ac46d-a167-4958-874e-730f30ee23b0' class='xr-array-in' type='checkbox' checked><label for='section-973ac46d-a167-4958-874e-730f30ee23b0' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>dask.array&lt;chunksize=(966, 180, 360), meta=np.ndarray&gt;</span></div><div class='xr-array-data'><table>\n    <tr>\n        <td>\n            <table style=\"border-collapse: collapse;\">\n                <thead>\n                    <tr>\n                        <td> </td>\n                        <th> Array </th>\n                        <th> Chunk </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                    <tr>\n                        <th> Bytes </th>\n                        <td> 3.73 GiB </td>\n                        <td> 238.79 MiB </td>\n                    </tr>\n                    \n                    <tr>\n                        <th> Shape </th>\n                        <td> (966, 720, 1440) </td>\n                        <td> (966, 180, 360) </td>\n                    </tr>\n                    <tr>\n                        <th> Dask graph </th>\n                        <td colspan=\"2\"> 16 chunks in 2 graph layers </td>\n                    </tr>\n                    <tr>\n                        <th> Data type </th>\n                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n        <td>\n        <svg width=\"227\" height=\"157\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n\n  <!-- Horizontal lines -->\n  <line x1=\"10\" y1=\"0\" x2=\"57\" y2=\"47\" style=\"stroke-width:2\" />\n  <line x1=\"10\" y1=\"15\" x2=\"57\" y2=\"62\" />\n  <line x1=\"10\" y1=\"30\" x2=\"57\" y2=\"77\" />\n  <line x1=\"10\" y1=\"45\" x2=\"57\" y2=\"92\" />\n  <line x1=\"10\" y1=\"60\" x2=\"57\" y2=\"107\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"60\" style=\"stroke-width:2\" />\n  <line x1=\"57\" y1=\"47\" x2=\"57\" y2=\"107\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"10.0,0.0 57.35294117647059,47.35294117647059 57.35294117647059,107.35294117647058 10.0,60.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Horizontal lines -->\n  <line x1=\"10\" y1=\"0\" x2=\"130\" y2=\"0\" style=\"stroke-width:2\" />\n  <line x1=\"57\" y1=\"47\" x2=\"177\" y2=\"47\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"10\" y1=\"0\" x2=\"57\" y2=\"47\" style=\"stroke-width:2\" />\n  <line x1=\"40\" y1=\"0\" x2=\"87\" y2=\"47\" />\n  <line x1=\"70\" y1=\"0\" x2=\"117\" y2=\"47\" />\n  <line x1=\"100\" y1=\"0\" x2=\"147\" y2=\"47\" />\n  <line x1=\"130\" y1=\"0\" x2=\"177\" y2=\"47\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"10.0,0.0 130.0,0.0 177.35294117647058,47.35294117647059 57.35294117647059,47.35294117647059\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Horizontal lines -->\n  <line x1=\"57\" y1=\"47\" x2=\"177\" y2=\"47\" style=\"stroke-width:2\" />\n  <line x1=\"57\" y1=\"62\" x2=\"177\" y2=\"62\" />\n  <line x1=\"57\" y1=\"77\" x2=\"177\" y2=\"77\" />\n  <line x1=\"57\" y1=\"92\" x2=\"177\" y2=\"92\" />\n  <line x1=\"57\" y1=\"107\" x2=\"177\" y2=\"107\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"57\" y1=\"47\" x2=\"57\" y2=\"107\" style=\"stroke-width:2\" />\n  <line x1=\"87\" y1=\"47\" x2=\"87\" y2=\"107\" />\n  <line x1=\"117\" y1=\"47\" x2=\"117\" y2=\"107\" />\n  <line x1=\"147\" y1=\"47\" x2=\"147\" y2=\"107\" />\n  <line x1=\"177\" y1=\"47\" x2=\"177\" y2=\"107\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"57.35294117647059,47.35294117647059 177.35294117647058,47.35294117647059 177.35294117647058,107.35294117647058 57.35294117647059,107.35294117647058\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Text -->\n  <text x=\"117.352941\" y=\"127.352941\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1440</text>\n  <text x=\"197.352941\" y=\"77.352941\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,197.352941,77.352941)\">720</text>\n  <text x=\"23.676471\" y=\"103.676471\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,23.676471,103.676471)\">966</text>\n</svg>\n        </td>\n    </tr>\n</table></div></div></li><li class='xr-section-item'><input id='section-4e3f1c73-1a19-486a-b987-6829b448c5b9' class='xr-section-summary-in' type='checkbox'  checked><label for='section-4e3f1c73-1a19-486a-b987-6829b448c5b9' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>latitude</span></div><div class='xr-var-dims'>(latitude)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>89.88 89.62 89.38 ... -89.62 -89.88</div><input id='attrs-6fa7ad99-0169-4bb8-b962-c901ea8f312f' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6fa7ad99-0169-4bb8-b962-c901ea8f312f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0eef11fd-eb08-4c68-b81e-14e53e5573b0' class='xr-var-data-in' type='checkbox'><label for='data-0eef11fd-eb08-4c68-b81e-14e53e5573b0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees</dd></dl></div><div class='xr-var-data'><pre>array([ 89.875,  89.625,  89.375, ..., -89.375, -89.625, -89.875], shape=(720,))</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>longitude</span></div><div class='xr-var-dims'>(longitude)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-179.9 -179.6 ... 179.6 179.9</div><input id='attrs-bfe19176-ec5d-4b94-99c4-8ff19810f9fd' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-bfe19176-ec5d-4b94-99c4-8ff19810f9fd' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8ff2cb69-016d-4fd3-8ae3-1abdce6aeeae' class='xr-var-data-in' type='checkbox'><label for='data-8ff2cb69-016d-4fd3-8ae3-1abdce6aeeae' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees</dd></dl></div><div class='xr-var-data'><pre>array([-179.875, -179.625, -179.375, ...,  179.375,  179.625,  179.875],\n      shape=(1440,))</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2001-01-01 ... 2021-12-27</div><input id='attrs-a1ca1e5d-3b96-4f03-b6f7-a4ccdb0815a7' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a1ca1e5d-3b96-4f03-b6f7-a4ccdb0815a7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b36310b3-368f-4eaf-9d06-dd6058e16ccb' class='xr-var-data-in' type='checkbox'><label for='data-b36310b3-368f-4eaf-9d06-dd6058e16ccb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Each datetime initializes the first date of the 8 days time resolution. Ex. the 2001-01-01 has all information until 2001-01-07. It&#x27;s year consists of 46 8-days datetimes, and every year begins from first of January (01-01). The last datetime (number 46) of each year, corresponds to 26 or 27 of December, depending if the year is a leap year or not. This means that it contains information for only 6 or 5 days respectively and not for 8 days as the rest.</dd><dt><span>format :</span></dt><dd>YYYY-MM-DD</dd><dt><span>type :</span></dt><dd>datetime</dd></dl></div><div class='xr-var-data'><pre>array([&#x27;2001-01-01T00:00:00.000000000&#x27;, &#x27;2001-01-09T00:00:00.000000000&#x27;,\n       &#x27;2001-01-17T00:00:00.000000000&#x27;, ..., &#x27;2021-12-11T00:00:00.000000000&#x27;,\n       &#x27;2021-12-19T00:00:00.000000000&#x27;, &#x27;2021-12-27T00:00:00.000000000&#x27;],\n      shape=(966,), dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-b0d55ba0-7430-4713-a5a9-8008aaabb9ef' class='xr-section-summary-in' type='checkbox'  ><label for='section-b0d55ba0-7430-4713-a5a9-8008aaabb9ef' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>latitude</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-fc1b2fad-ad22-4db2-ad98-7360ae84c3d8' class='xr-index-data-in' type='checkbox'/><label for='index-fc1b2fad-ad22-4db2-ad98-7360ae84c3d8' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([ 89.875,  89.625,  89.375,  89.125,  88.875,  88.625,  88.375,  88.125,\n        87.875,  87.625,\n       ...\n       -87.625, -87.875, -88.125, -88.375, -88.625, -88.875, -89.125, -89.375,\n       -89.625, -89.875],\n      dtype=&#x27;float64&#x27;, name=&#x27;latitude&#x27;, length=720))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>longitude</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-ee455593-cc11-4b53-9963-cc69fa18588b' class='xr-index-data-in' type='checkbox'/><label for='index-ee455593-cc11-4b53-9963-cc69fa18588b' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([-179.875, -179.625, -179.375, -179.125, -178.875, -178.625, -178.375,\n       -178.125, -177.875, -177.625,\n       ...\n        177.625,  177.875,  178.125,  178.375,  178.625,  178.875,  179.125,\n        179.375,  179.625,  179.875],\n      dtype=&#x27;float64&#x27;, name=&#x27;longitude&#x27;, length=1440))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-acaca2a7-9f75-4971-866e-653218099082' class='xr-index-data-in' type='checkbox'/><label for='index-acaca2a7-9f75-4971-866e-653218099082' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(DatetimeIndex([&#x27;2001-01-01&#x27;, &#x27;2001-01-09&#x27;, &#x27;2001-01-17&#x27;, &#x27;2001-01-25&#x27;,\n               &#x27;2001-02-02&#x27;, &#x27;2001-02-10&#x27;, &#x27;2001-02-18&#x27;, &#x27;2001-02-26&#x27;,\n               &#x27;2001-03-06&#x27;, &#x27;2001-03-14&#x27;,\n               ...\n               &#x27;2021-10-16&#x27;, &#x27;2021-10-24&#x27;, &#x27;2021-11-01&#x27;, &#x27;2021-11-09&#x27;,\n               &#x27;2021-11-17&#x27;, &#x27;2021-11-25&#x27;, &#x27;2021-12-03&#x27;, &#x27;2021-12-11&#x27;,\n               &#x27;2021-12-19&#x27;, &#x27;2021-12-27&#x27;],\n              dtype=&#x27;datetime64[ns]&#x27;, name=&#x27;time&#x27;, length=966, freq=None))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-ab5749bb-9824-4e6e-a0e6-2561b4a87647' class='xr-section-summary-in' type='checkbox'  checked><label for='section-ab5749bb-9824-4e6e-a0e6-2561b4a87647' class='xr-section-summary' >Attributes: <span>(6)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>aggregation :</span></dt><dd>Spatio-Temporal | sum</dd><dt><span>creator_notes :</span></dt><dd>The missing data for the year 2001 has been filled with NaN values. The dataset is constructed using the ignition dates of the burned areas shapefiles. Each year is divided into 46 periods of 8 days, with the last period in December consisting of either 5 or 6 days, depending on whether it is a leap year.</dd><dt><span>downloaded_from :</span></dt><dd>https://gwis.jrc.ec.europa.eu/apps/country.profile/downloads</dd><dt><span>long_name :</span></dt><dd>Burned Areas from GWIS</dd><dt><span>provider :</span></dt><dd>Global Wildfire Information System (GWIS)</dd><dt><span>units :</span></dt><dd>hectares (ha)</dd></dl></div></li></ul></div></div>","content_type":"text/html"},"text/plain":{"content":"<xarray.DataArray 'gwis_ba' (time: 966, latitude: 720, longitude: 1440)> Size: 4GB\ndask.array<open_dataset-gwis_ba, shape=(966, 720, 1440), dtype=float32, chunksize=(966, 180, 360), chunktype=numpy.ndarray>\nCoordinates:\n  * latitude   (latitude) float64 6kB 89.88 89.62 89.38 ... -89.38 -89.62 -89.88\n  * longitude  (longitude) float64 12kB -179.9 -179.6 -179.4 ... 179.6 179.9\n  * time       (time) datetime64[ns] 8kB 2001-01-01 2001-01-09 ... 2021-12-27\nAttributes:\n    aggregation:      Spatio-Temporal | sum\n    creator_notes:    The missing data for the year 2001 has been filled with...\n    downloaded_from:  https://gwis.jrc.ec.europa.eu/apps/country.profile/down...\n    long_name:        Burned Areas from GWIS\n    provider:         Global Wildfire Information System (GWIS)\n    units:            hectares (ha)","content_type":"text/plain"}}}],"key":"HKrA5JYeFH"}],"key":"ZmZyIuE5jX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Spatial and Temporal Subsetting","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Kp4lVj9vQi"}],"identifier":"spatial-and-temporal-subsetting","label":"Spatial and Temporal Subsetting","html_id":"spatial-and-temporal-subsetting","implicit":true,"key":"AH9nZlONZA"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"It’s best practice to subset only the relevant data before doing computations, to reduce needed computations and data downloads. Especialyl when working with larger datasets. We will select an area of interest (aoi) as below using the polygon we previously downloaded from the xcube viewer.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"LfrGD6m2WI"}],"key":"P48PHyEjR7"}],"key":"dVQxMPxonC"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"# Spatial Slices\nepsg = 4326 # our data's projection\n\ngdf = gpd.read_file(\"../aoi/feature.geojson\")\ngdf = gdf.set_crs(epsg=epsg)\ngdf.explore()","key":"whyhkJmTYg"},{"type":"output","id":"Tzjp_7ivdfeRqD2DBMpaq","data":[{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/html":{"content":"<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    \n    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n    \n        &lt;script&gt;\n            L_NO_TOUCH = false;\n            L_DISABLE_3D = false;\n        &lt;/script&gt;\n    \n    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://code.jquery.com/jquery-3.7.1.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n    \n            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n            &lt;style&gt;\n                #map_f82fec5ec54f7cbd8399f1bd686f1652 {\n                    position: relative;\n                    width: 100.0%;\n                    height: 100.0%;\n                    left: 0.0%;\n                    top: 0.0%;\n                }\n                .leaflet-container { font-size: 1rem; }\n            &lt;/style&gt;\n        \n    \n                    &lt;style&gt;\n                        .foliumtooltip {\n                            \n                        }\n                       .foliumtooltip table{\n                            margin: auto;\n                        }\n                        .foliumtooltip tr{\n                            text-align: left;\n                        }\n                        .foliumtooltip th{\n                            padding: 2px; padding-right: 8px;\n                        }\n                    &lt;/style&gt;\n            \n&lt;/head&gt;\n&lt;body&gt;\n    \n    \n            &lt;div class=&quot;folium-map&quot; id=&quot;map_f82fec5ec54f7cbd8399f1bd686f1652&quot; &gt;&lt;/div&gt;\n        \n&lt;/body&gt;\n&lt;script&gt;\n    \n    \n            var map_f82fec5ec54f7cbd8399f1bd686f1652 = L.map(\n                &quot;map_f82fec5ec54f7cbd8399f1bd686f1652&quot;,\n                {\n                    center: [41.749958454337275, -7.996767585316725],\n                    crs: L.CRS.EPSG3857,\n                    ...{\n  &quot;zoom&quot;: 10,\n  &quot;zoomControl&quot;: true,\n  &quot;preferCanvas&quot;: false,\n}\n\n                }\n            );\n            L.control.scale().addTo(map_f82fec5ec54f7cbd8399f1bd686f1652);\n\n            \n\n        \n    \n            var tile_layer_a67fd9b79270175a590ce41f7a1bf05e = L.tileLayer(\n                &quot;https://tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n                {\n  &quot;minZoom&quot;: 0,\n  &quot;maxZoom&quot;: 19,\n  &quot;maxNativeZoom&quot;: 19,\n  &quot;noWrap&quot;: false,\n  &quot;attribution&quot;: &quot;\\u0026copy; \\u003ca href=\\&quot;https://www.openstreetmap.org/copyright\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e contributors&quot;,\n  &quot;subdomains&quot;: &quot;abc&quot;,\n  &quot;detectRetina&quot;: false,\n  &quot;tms&quot;: false,\n  &quot;opacity&quot;: 1,\n}\n\n            );\n        \n    \n            tile_layer_a67fd9b79270175a590ce41f7a1bf05e.addTo(map_f82fec5ec54f7cbd8399f1bd686f1652);\n        \n    \n            map_f82fec5ec54f7cbd8399f1bd686f1652.fitBounds(\n                [[41.62546618757381, -8.151080551544425], [41.87445072110074, -7.842454619089026]],\n                {}\n            );\n        \n    \n        function geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_styler(feature) {\n            switch(feature.id) {\n                default:\n                    return {&quot;fillOpacity&quot;: 0.5, &quot;weight&quot;: 2};\n            }\n        }\n        function geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_highlighter(feature) {\n            switch(feature.id) {\n                default:\n                    return {&quot;fillOpacity&quot;: 0.75};\n            }\n        }\n        function geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_pointToLayer(feature, latlng) {\n            var opts = {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;#3388ff&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;#3388ff&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 2, &quot;stroke&quot;: true, &quot;weight&quot;: 3};\n            \n            let style = geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_styler(feature)\n            Object.assign(opts, style)\n            \n            return new L.CircleMarker(latlng, opts)\n        }\n\n        function geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_onEachFeature(feature, layer) {\n            layer.on({\n                mouseout: function(e) {\n                    if(typeof e.target.setStyle === &quot;function&quot;){\n                            geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9.resetStyle(e.target);\n                    }\n                },\n                mouseover: function(e) {\n                    if(typeof e.target.setStyle === &quot;function&quot;){\n                        const highlightStyle = geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_highlighter(e.target.feature)\n                        e.target.setStyle(highlightStyle);\n                    }\n                },\n            });\n        };\n        var geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9 = L.geoJson(null, {\n                onEachFeature: geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_onEachFeature,\n            \n                style: geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_styler,\n                pointToLayer: geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_pointToLayer,\n            ...{\n}\n        });\n\n        function geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_add (data) {\n            geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9\n                .addData(data);\n        }\n            geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9_add({&quot;bbox&quot;: [-8.151080551544425, 41.62546618757381, -7.842454619089026, 41.87445072110074], &quot;features&quot;: [{&quot;bbox&quot;: [-8.151080551544425, 41.62546618757381, -7.842454619089026, 41.87445072110074], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.146996977155997, 41.86752176608837], [-8.151080551544425, 41.62546618757381], [-7.842454619089026, 41.63184962633949], [-7.846980686058243, 41.87445072110074], [-8.146996977155997, 41.86752176608837]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;0&quot;, &quot;properties&quot;: {&quot;color&quot;: &quot;red&quot;, &quot;id&quot;: &quot;user-polygon-6c12f10a067368&quot;, &quot;label&quot;: &quot;Polygon 1&quot;}, &quot;type&quot;: &quot;Feature&quot;}], &quot;type&quot;: &quot;FeatureCollection&quot;});\n\n        \n    \n    geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9.bindTooltip(\n    function(layer){\n    let div = L.DomUtil.create(&#x27;div&#x27;);\n    \n    let handleObject = feature=&gt;typeof(feature)==&#x27;object&#x27; ? JSON.stringify(feature) : feature;\n    let fields = [&quot;id&quot;, &quot;label&quot;, &quot;color&quot;];\n    let aliases = [&quot;id&quot;, &quot;label&quot;, &quot;color&quot;];\n    let table = &#x27;&lt;table&gt;&#x27; +\n        String(\n        fields.map(\n        (v,i)=&gt;\n        `&lt;tr&gt;\n            &lt;th&gt;${aliases[i]}&lt;/th&gt;\n            \n            &lt;td&gt;${handleObject(layer.feature.properties[v])}&lt;/td&gt;\n        &lt;/tr&gt;`).join(&#x27;&#x27;))\n    +&#x27;&lt;/table&gt;&#x27;;\n    div.innerHTML=table;\n    \n    return div\n    }\n    ,{\n  &quot;sticky&quot;: true,\n  &quot;className&quot;: &quot;foliumtooltip&quot;,\n});\n                     \n    \n            geo_json_ecb7d76bfe8b6a0d682ac1be6fdeb6b9.addTo(map_f82fec5ec54f7cbd8399f1bd686f1652);\n        \n&lt;/script&gt;\n&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>","content_type":"text/html"},"text/plain":{"content":"<folium.folium.Map at 0x7efba3d20050>","content_type":"text/plain"}}}],"key":"pjSXxwx9fg"}],"key":"hy7HTpYL76"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"\n\nmin_lon, min_lat, max_lon, max_lat = gdf.total_bounds\n\n# find the nearest points on our grid\nlat_start = gwis.latitude.sel(latitude=max_lat, method=\"nearest\").item()\nlat_stop  = gwis.latitude.sel(latitude=min_lat, method=\"nearest\").item()\nlon_start = gwis.longitude.sel(longitude=min_lon, method=\"nearest\").item()\nlon_stop  = gwis.longitude.sel(longitude=max_lon, method=\"nearest\").item()\n\nlat_slice = slice(lat_start, lat_stop)\nlon_slice = slice(lon_start, lon_stop)\n\nlon_start, lat_start, lon_stop, lat_stop","key":"CeE5l3fCVs"},{"type":"output","id":"AcwCdzLOjVhbbRjxEHh3t","data":[{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/plain":{"content":"(-8.125, 41.875, -7.875, 41.625)","content_type":"text/plain"}}}],"key":"mHlL454V5F"}],"key":"QTpbYwn2xW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bbox=[lon_stop , lat_stop , lon_start, lat_start]","key":"NTohyw2IaQ"},{"type":"output","id":"PG5iLRDjS9w1qDlVrNsdK","data":[],"key":"O6PFsjbgXM"}],"key":"AaOJxznJnI"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We additionally will subest our data temporally to fetch only more recent periods from 2018 - 2021.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iaWqiSdXmb"}],"key":"uWKdIyYCd8"}],"key":"Hj8e2lIBdB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"time_slice = slice('2018-01-01','2021-01-01')","key":"pUyDBlyzF0"},{"type":"output","id":"s6vZOdExcsp2xIkeHl0Po","data":[],"key":"PIr8gD3j6E"}],"key":"agKUIfdyez"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We now simply subset the data using the slices we created. Note how the data of our computation has reduced significantly","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yHIytbKw0O"}],"key":"osWjLLD7Jw"}],"key":"as6K7PzUQS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# spatio temporal subset\ngwis_aoi = gwis.sel(time=time_slice, latitude=lat_slice,longitude=lon_slice)\ngwis_aoi","key":"eQkGEaahUV"},{"type":"output","id":"wgUgodHkCTjL53vaHw0ge","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"31f124723c211a0bd2242592e805b0f8","path":"/tutorials/build/31f124723c211a0bd2242592e805b0f8.html"},"text/plain":{"content":"<xarray.DataArray 'gwis_ba' (time: 139, latitude: 2, longitude: 2)> Size: 2kB\ndask.array<getitem, shape=(139, 2, 2), dtype=float32, chunksize=(139, 2, 2), chunktype=numpy.ndarray>\nCoordinates:\n  * latitude   (latitude) float64 16B 41.88 41.62\n  * longitude  (longitude) float64 16B -8.125 -7.875\n  * time       (time) datetime64[ns] 1kB 2018-01-01 2018-01-09 ... 2021-01-01\nAttributes:\n    aggregation:      Spatio-Temporal | sum\n    creator_notes:    The missing data for the year 2001 has been filled with...\n    downloaded_from:  https://gwis.jrc.ec.europa.eu/apps/country.profile/down...\n    long_name:        Burned Areas from GWIS\n    provider:         Global Wildfire Information System (GWIS)\n    units:            hectares (ha)","content_type":"text/plain"}}}],"key":"SOktgXnZOr"}],"key":"n01MXUXjOY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Finding the date with the most burnt area","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FQSqWBq56m"}],"identifier":"finding-the-date-with-the-most-burnt-area","label":"Finding the date with the most burnt area","html_id":"finding-the-date-with-the-most-burnt-area","implicit":true,"key":"RutdPOVc8H"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To find the date with the most burnt area we first do a spatial sum over our data for each period; this will return an dataarray with the total amount of ha of burnt area for each day. We will then fetch the date with the max burned area using idmax.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ObeymBq6LS"}],"key":"EfynBRau4k"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Note idmax is equivalent to doing ds.sel(time=ds.argmax.item(dim=‘time’)) where argmax returns the index of the max item","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EQgEIBcs6q"}],"key":"xybY0jXOQh"}],"key":"ICorOc4tpw"}],"key":"Abwhkv4W1C"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# date where the sum of burnt area is the highest\ndate_max_fire = gwis_aoi.sum(dim={'latitude','longitude'}).idxmax(dim='time')","key":"TucR9lQPJO"},{"type":"output","id":"NL4cqM1j9oJpPowRsvN-D","data":[],"key":"jnAr0WsHlg"}],"key":"C4zRwsdOQO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"By subsetting only to the relevant data, we have reduced our dataset from 3.7 GB to a very small managable chunk of relevant data. Note that up to this point, we have not downloaded any data or done any computations over it. We (via the Dask Client) have just built up in the background the dask task graph.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fMT8BwjLfU"}],"key":"b5InxLvndN"}],"key":"PYXNm6Gzkt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"date_max_fire.data.visualize(optimize_graph=True)","key":"n9mDdkLQtV"},{"type":"output","id":"6qr67Vo9cV0HsRNwm_DdR","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"5067e55b8d0c0cb3d85ac04268ad050a","path":"/tutorials/build/5067e55b8d0c0cb3d85ac04268ad050a.png"},"text/plain":{"content":"<IPython.core.display.Image object>","content_type":"text/plain"}}}],"key":"cRcsjgEyzG"}],"key":"t2uhgZwSv7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s start computing!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"urkTuSkvNZ"}],"identifier":"lets-start-computing","label":"Let’s start computing!","html_id":"lets-start-computing","implicit":true,"key":"Q61CT4y6UJ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s get our date by forcing dask to execute the above task graph using .compute()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EhGmlHpgNu"}],"key":"dV2k53Wxlo"}],"key":"mmyfqAslu2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"date_max_fire = date_max_fire.compute()\ndate_max_fire","key":"Guplf6pYBu"},{"type":"output","id":"v0JXeJy6LIgro8Hcdfal3","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1f1f1f;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;time&#x27; ()&gt; Size: 8B\narray(&#x27;2020-09-13T00:00:00.000000000&#x27;, dtype=&#x27;datetime64[ns]&#x27;)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'time'</div></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-9d0e154f-306b-47ef-8dde-cbc7e748b872' class='xr-array-in' type='checkbox' checked><label for='section-9d0e154f-306b-47ef-8dde-cbc7e748b872' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>2020-09-13</span></div><div class='xr-array-data'><pre>array(&#x27;2020-09-13T00:00:00.000000000&#x27;, dtype=&#x27;datetime64[ns]&#x27;)</pre></div></div></li><li class='xr-section-item'><input id='section-e348f0ae-f78b-415a-8a96-ed354e4869f1' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-e348f0ae-f78b-415a-8a96-ed354e4869f1' class='xr-section-summary'  title='Expand/collapse section'>Coordinates: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-840bbc10-4f3f-4076-bfdb-a5ad2702f1df' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-840bbc10-4f3f-4076-bfdb-a5ad2702f1df' class='xr-section-summary'  title='Expand/collapse section'>Indexes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-32c03cc2-f9cb-4fb2-8334-52a2352b6ccd' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-32c03cc2-f9cb-4fb2-8334-52a2352b6ccd' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"},"text/plain":{"content":"<xarray.DataArray 'time' ()> Size: 8B\narray('2020-09-13T00:00:00.000000000', dtype='datetime64[ns]')","content_type":"text/plain"}}}],"key":"jPG8HUAFgp"}],"key":"mB9A4vkhp2"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exploring the Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lZXb2FPbu1"}],"identifier":"exploring-the-data","label":"Exploring the Data","html_id":"exploring-the-data","implicit":true,"key":"Ou41kMgJsQ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Great, we’ve found the date with the most burnt areas, now let’s explore the data","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vwkgcU6yTe"}],"key":"iJGSrOLcWT"}],"key":"Su0LfzZbWp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"biggest_fire_aoi = gwis_aoi.sel(time=date_max_fire)\nbiggest_fire_aoi","key":"WVog1sZgZt"},{"type":"output","id":"XpK7QBg00glHmC-I30XvI","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1f1f1f;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;gwis_ba&#x27; (latitude: 2, longitude: 2)&gt; Size: 16B\ndask.array&lt;getitem, shape=(2, 2), dtype=float32, chunksize=(2, 2), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * latitude   (latitude) float64 16B 41.88 41.62\n  * longitude  (longitude) float64 16B -8.125 -7.875\n    time       datetime64[ns] 8B 2020-09-13\nAttributes:\n    aggregation:      Spatio-Temporal | sum\n    creator_notes:    The missing data for the year 2001 has been filled with...\n    downloaded_from:  https://gwis.jrc.ec.europa.eu/apps/country.profile/down...\n    long_name:        Burned Areas from GWIS\n    provider:         Global Wildfire Information System (GWIS)\n    units:            hectares (ha)</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'gwis_ba'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>latitude</span>: 2</li><li><span class='xr-has-index'>longitude</span>: 2</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-474dabdf-66ae-4735-bd2b-2c80e13080f7' class='xr-array-in' type='checkbox' checked><label for='section-474dabdf-66ae-4735-bd2b-2c80e13080f7' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>dask.array&lt;chunksize=(2, 2), meta=np.ndarray&gt;</span></div><div class='xr-array-data'><table>\n    <tr>\n        <td>\n            <table style=\"border-collapse: collapse;\">\n                <thead>\n                    <tr>\n                        <td> </td>\n                        <th> Array </th>\n                        <th> Chunk </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                    <tr>\n                        <th> Bytes </th>\n                        <td> 16 B </td>\n                        <td> 16 B </td>\n                    </tr>\n                    \n                    <tr>\n                        <th> Shape </th>\n                        <td> (2, 2) </td>\n                        <td> (2, 2) </td>\n                    </tr>\n                    <tr>\n                        <th> Dask graph </th>\n                        <td colspan=\"2\"> 1 chunks in 4 graph layers </td>\n                    </tr>\n                    <tr>\n                        <th> Data type </th>\n                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n        <td>\n        <svg width=\"170\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n\n  <!-- Horizontal lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n  <line x1=\"0\" y1=\"120\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"120\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"0.0,0.0 120.0,0.0 120.0,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Text -->\n  <text x=\"60.000000\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2</text>\n  <text x=\"140.000000\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,60.000000)\">2</text>\n</svg>\n        </td>\n    </tr>\n</table></div></div></li><li class='xr-section-item'><input id='section-4c2c1f1d-3304-4d65-83a0-f5874ffb645f' class='xr-section-summary-in' type='checkbox'  checked><label for='section-4c2c1f1d-3304-4d65-83a0-f5874ffb645f' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>latitude</span></div><div class='xr-var-dims'>(latitude)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>41.88 41.62</div><input id='attrs-506651f9-cd72-4679-865d-829af428cd26' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-506651f9-cd72-4679-865d-829af428cd26' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-513f4d03-ac18-43a4-bf7f-c5ba3824db11' class='xr-var-data-in' type='checkbox'><label for='data-513f4d03-ac18-43a4-bf7f-c5ba3824db11' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees</dd></dl></div><div class='xr-var-data'><pre>array([41.875, 41.625])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>longitude</span></div><div class='xr-var-dims'>(longitude)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-8.125 -7.875</div><input id='attrs-e01a77a8-1afa-48fa-a8a5-e4e515637223' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e01a77a8-1afa-48fa-a8a5-e4e515637223' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-feacf9aa-e65f-4ea5-b0e8-385225bba191' class='xr-var-data-in' type='checkbox'><label for='data-feacf9aa-e65f-4ea5-b0e8-385225bba191' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees</dd></dl></div><div class='xr-var-data'><pre>array([-8.125, -7.875])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>time</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2020-09-13</div><input id='attrs-ee4ee559-91b2-4cdc-8e7f-ca7ddfc2266b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ee4ee559-91b2-4cdc-8e7f-ca7ddfc2266b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-39c9ad97-3f49-40a6-9e13-50f9b94feab3' class='xr-var-data-in' type='checkbox'><label for='data-39c9ad97-3f49-40a6-9e13-50f9b94feab3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Each datetime initializes the first date of the 8 days time resolution. Ex. the 2001-01-01 has all information until 2001-01-07. It&#x27;s year consists of 46 8-days datetimes, and every year begins from first of January (01-01). The last datetime (number 46) of each year, corresponds to 26 or 27 of December, depending if the year is a leap year or not. This means that it contains information for only 6 or 5 days respectively and not for 8 days as the rest.</dd><dt><span>format :</span></dt><dd>YYYY-MM-DD</dd><dt><span>type :</span></dt><dd>datetime</dd></dl></div><div class='xr-var-data'><pre>array(&#x27;2020-09-13T00:00:00.000000000&#x27;, dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-ef4a0451-9f7b-4070-be90-5d7f65eddc26' class='xr-section-summary-in' type='checkbox'  ><label for='section-ef4a0451-9f7b-4070-be90-5d7f65eddc26' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>latitude</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-276854ac-71f7-46f4-b7e9-8ff0a30e8843' class='xr-index-data-in' type='checkbox'/><label for='index-276854ac-71f7-46f4-b7e9-8ff0a30e8843' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([41.875, 41.625], dtype=&#x27;float64&#x27;, name=&#x27;latitude&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>longitude</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-704a183b-69a3-499d-9297-2e6eef7e79bd' class='xr-index-data-in' type='checkbox'/><label for='index-704a183b-69a3-499d-9297-2e6eef7e79bd' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([-8.125, -7.875], dtype=&#x27;float64&#x27;, name=&#x27;longitude&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-6591c3d1-5961-4aed-9a34-42d728efff53' class='xr-section-summary-in' type='checkbox'  checked><label for='section-6591c3d1-5961-4aed-9a34-42d728efff53' class='xr-section-summary' >Attributes: <span>(6)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>aggregation :</span></dt><dd>Spatio-Temporal | sum</dd><dt><span>creator_notes :</span></dt><dd>The missing data for the year 2001 has been filled with NaN values. The dataset is constructed using the ignition dates of the burned areas shapefiles. Each year is divided into 46 periods of 8 days, with the last period in December consisting of either 5 or 6 days, depending on whether it is a leap year.</dd><dt><span>downloaded_from :</span></dt><dd>https://gwis.jrc.ec.europa.eu/apps/country.profile/downloads</dd><dt><span>long_name :</span></dt><dd>Burned Areas from GWIS</dd><dt><span>provider :</span></dt><dd>Global Wildfire Information System (GWIS)</dd><dt><span>units :</span></dt><dd>hectares (ha)</dd></dl></div></li></ul></div></div>","content_type":"text/html"},"text/plain":{"content":"<xarray.DataArray 'gwis_ba' (latitude: 2, longitude: 2)> Size: 16B\ndask.array<getitem, shape=(2, 2), dtype=float32, chunksize=(2, 2), chunktype=numpy.ndarray>\nCoordinates:\n  * latitude   (latitude) float64 16B 41.88 41.62\n  * longitude  (longitude) float64 16B -8.125 -7.875\n    time       datetime64[ns] 8B 2020-09-13\nAttributes:\n    aggregation:      Spatio-Temporal | sum\n    creator_notes:    The missing data for the year 2001 has been filled with...\n    downloaded_from:  https://gwis.jrc.ec.europa.eu/apps/country.profile/down...\n    long_name:        Burned Areas from GWIS\n    provider:         Global Wildfire Information System (GWIS)\n    units:            hectares (ha)","content_type":"text/plain"}}}],"key":"xKKZQ8JY69"}],"key":"FkLhT9Qpuo"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the forest fire areas to get an idea about our data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eq6M8UNzNO"}],"key":"Y4PJ7jBzY6"}],"key":"W1mZaUGgFy"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s plot our data to explore it a bit further","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KKVpjsZ3tV"}],"key":"xtRPo2Qegx"}],"key":"uMYuLVQxQy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"biggest_fire_aoi.plot()","key":"XigunLPLBu"},{"type":"output","id":"SkvPr_i0GzeDVx_W7xFrO","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"28e7d315ec17a583a470191282e65c1c","path":"/tutorials/build/28e7d315ec17a583a470191282e65c1c.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"iiP0mAVSmU"}],"key":"rCr9WWqP4W"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The image above does not really give us a detailed view of which areas have been burned and to what degree, as the resolution of each pixel is approx 28km. To get some more context of our data we can plot it on a base map.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UMlR2Pcxue"}],"key":"ziwNz6sRqC"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In the Pangeo stack there are visualization tools that can help us easily plot data in a more interactive way, with a simple interface - such as hvplot.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mIBjtMowtk"}],"key":"ixBoRMnkBa"}],"key":"clldQ85Wsv"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot it interactively, with some context\nbiggest_fire_aoi.hvplot(\n    x='longitude',\n    y='latitude',\n    cmap='viridis',\n    colorbar=True,\n    frame_width=600,\n    frame_height=400,\n    geo=True,\n    tiles='OSM',\n    alpha=0.5\n)\n","key":"rwXHDlpvIg"},{"type":"output","id":"250YPBMVPp6fKdabrCZMX","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":19,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"125f3484-ea15-4fc9-b1f4-c1de42eeabec"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content":"<div id='125f3484-ea15-4fc9-b1f4-c1de42eeabec'>\n  <div id=\"c6a7520a-3aec-459f-b0e6-dcb62c7379c0\" data-root-id=\"125f3484-ea15-4fc9-b1f4-c1de42eeabec\" style=\"display: contents;\"></div>\n</div>\n<script type=\"application/javascript\">(function(root) {\n  var docs_json = {\"36fbad59-5097-4c5b-b01c-3ea279e47b05\":{\"version\":\"3.7.2\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"Row\",\"id\":\"125f3484-ea15-4fc9-b1f4-c1de42eeabec\",\"attributes\":{\"name\":\"Row00375\",\"tags\":[\"embedded\"],\"stylesheets\":[\"\\n:host(.pn-loading):before, .pn-loading:before {\\n  background-color: #c3c3c3;\\n  mask-size: auto calc(min(50%, 400px));\\n  -webkit-mask-size: auto calc(min(50%, 400px));\\n}\",{\"type\":\"object\",\"name\":\"ImportedStyleSheet\",\"id\":\"b2cc6384-ff99-48bc-8a86-e5aca7e3cd50\",\"attributes\":{\"url\":\"https://cdn.holoviz.org/panel/1.6.3/dist/css/loading.css\"}},{\"type\":\"object\",\"name\":\"ImportedStyleSheet\",\"id\":\"6598038f-27ec-4d33-8a37-faf209dc78a5\",\"attributes\":{\"url\":\"https://cdn.holoviz.org/panel/1.6.3/dist/css/listpanel.css\"}},{\"type\":\"object\",\"name\":\"ImportedStyleSheet\",\"id\":\"5072dc66-469d-445d-86f5-db28d0db7882\",\"attributes\":{\"url\":\"https://cdn.holoviz.org/panel/1.6.3/dist/bundled/theme/default.css\"}},{\"type\":\"object\",\"name\":\"ImportedStyleSheet\",\"id\":\"eae94d15-b635-4d49-8d6f-664839602275\",\"attributes\":{\"url\":\"https://cdn.holoviz.org/panel/1.6.3/dist/bundled/theme/native.css\"}}],\"margin\":0,\"sizing_mode\":\"stretch_width\",\"align\":\"start\",\"children\":[{\"type\":\"object\",\"name\":\"Spacer\",\"id\":\"ed3e3db8-3986-436f-89b4-60e34dd26588\",\"attributes\":{\"name\":\"HSpacer00379\",\"stylesheets\":[\"\\n:host(.pn-loading):before, .pn-loading:before {\\n  background-color: #c3c3c3;\\n  mask-size: auto calc(min(50%, 400px));\\n  -webkit-mask-size: auto calc(min(50%, 400px));\\n}\",{\"id\":\"b2cc6384-ff99-48bc-8a86-e5aca7e3cd50\"},{\"id\":\"5072dc66-469d-445d-86f5-db28d0db7882\"},{\"id\":\"eae94d15-b635-4d49-8d6f-664839602275\"}],\"margin\":0,\"sizing_mode\":\"stretch_width\",\"align\":\"start\"}},{\"type\":\"object\",\"name\":\"Figure\",\"id\":\"92ac76c7-14bc-4597-9c10-a785c266bcf9\",\"attributes\":{\"width\":null,\"height\":null,\"margin\":[5,10],\"sizing_mode\":\"fixed\",\"align\":\"start\",\"x_range\":{\"type\":\"object\",\"name\":\"Range1d\",\"id\":\"5bc9874c-c937-4567-936e-252b6bd37e01\",\"attributes\":{\"name\":\"Longitude\",\"tags\":[[[\"Longitude\",null]],[]],\"start\":-957700.8730470914,\"end\":-823410.9796452926,\"reset_start\":-957700.8730470914,\"reset_end\":-823410.9796452926,\"min_interval\":5}},\"y_range\":{\"type\":\"object\",\"name\":\"Range1d\",\"id\":\"6fe935bb-52a0-4fd4-9281-b5098151745f\",\"attributes\":{\"name\":\"Latitude\",\"tags\":[[[\"Latitude\",null]],{\"type\":\"map\",\"entries\":[[\"invert_yaxis\",false],[\"autorange\",false]]}],\"start\":5078913.248286891,\"end\":5168439.84388809,\"reset_start\":5078913.248286891,\"reset_end\":5168439.84388809,\"min_interval\":5}},\"x_scale\":{\"type\":\"object\",\"name\":\"LinearScale\",\"id\":\"13e91205-a812-4ef0-a17d-bec05bbcaef1\"},\"y_scale\":{\"type\":\"object\",\"name\":\"LinearScale\",\"id\":\"d56ec068-4424-478a-b33e-b59e46cdf7d0\"},\"title\":{\"type\":\"object\",\"name\":\"Title\",\"id\":\"66ff0d80-0656-44a5-9191-84867a4c77ca\",\"attributes\":{\"text\":\"time = 2020-09-13\",\"text_color\":\"black\",\"text_font_size\":\"12pt\"}},\"renderers\":[{\"type\":\"object\",\"name\":\"TileRenderer\",\"id\":\"6178fe8f-f44a-4583-8e29-231913a1e8e3\",\"attributes\":{\"level\":\"underlay\",\"tile_source\":{\"type\":\"object\",\"name\":\"WMTSTileSource\",\"id\":\"6be801b6-f6f2-4f37-85e6-bf709c6463de\",\"attributes\":{\"url\":\"https://c.tile.openstreetmap.org/{Z}/{X}/{Y}.png\",\"attribution\":\"&copy; <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"021efe7b-0eb7-4dc6-91d2-02bae8405586\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"33e25552-5530-472b-8dfd-59b4c7e5055a\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"7f8bb4b6-bbc7-474e-b9df-860315d37264\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"db1779d9-da49-427f-924c-5febb0d668e0\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",[-918385.6877249428]],[\"y\",[5086373.79792065]],[\"dw\",[55659.522757501574]],[\"dh\",[74605.49633368105]],[\"image\",[{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"VPirQQAAAABwDAlFAAAAAA==\"},\"shape\":[2,2],\"dtype\":\"float32\",\"order\":\"little\"}]]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"7ad04b44-f701-4485-89c5-d04141f8108d\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"bb1d8339-27a2-4c46-8a77-88f988987583\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Image\",\"id\":\"72f13524-00ad-4b26-b763-5b8c6ab8bb06\",\"attributes\":{\"tags\":[\"apply_ranges\"],\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"dw\":{\"type\":\"field\",\"field\":\"dw\"},\"dh\":{\"type\":\"field\",\"field\":\"dh\"},\"global_alpha\":{\"type\":\"value\",\"value\":0.5},\"image\":{\"type\":\"field\",\"field\":\"image\"},\"color_mapper\":{\"type\":\"object\",\"name\":\"LinearColorMapper\",\"id\":\"c8aa17cc-6b70-4e99-8a34-d209fc22f5e1\",\"attributes\":{\"palette\":[\"#440154\",\"#440255\",\"#440357\",\"#450558\",\"#45065a\",\"#45085b\",\"#46095c\",\"#460b5e\",\"#460c5f\",\"#460e61\",\"#470f62\",\"#471163\",\"#471265\",\"#471466\",\"#471567\",\"#471669\",\"#47186a\",\"#48196b\",\"#481a6c\",\"#481c6e\",\"#481d6f\",\"#481e70\",\"#482071\",\"#482172\",\"#482273\",\"#482374\",\"#472575\",\"#472676\",\"#472777\",\"#472878\",\"#472a79\",\"#472b7a\",\"#472c7b\",\"#462d7c\",\"#462f7c\",\"#46307d\",\"#46317e\",\"#45327f\",\"#45347f\",\"#453580\",\"#453681\",\"#443781\",\"#443982\",\"#433a83\",\"#433b83\",\"#433c84\",\"#423d84\",\"#423e85\",\"#424085\",\"#414186\",\"#414286\",\"#404387\",\"#404487\",\"#3f4587\",\"#3f4788\",\"#3e4888\",\"#3e4989\",\"#3d4a89\",\"#3d4b89\",\"#3d4c89\",\"#3c4d8a\",\"#3c4e8a\",\"#3b508a\",\"#3b518a\",\"#3a528b\",\"#3a538b\",\"#39548b\",\"#39558b\",\"#38568b\",\"#38578c\",\"#37588c\",\"#37598c\",\"#365a8c\",\"#365b8c\",\"#355c8c\",\"#355d8c\",\"#345e8d\",\"#345f8d\",\"#33608d\",\"#33618d\",\"#32628d\",\"#32638d\",\"#31648d\",\"#31658d\",\"#31668d\",\"#30678d\",\"#30688d\",\"#2f698d\",\"#2f6a8d\",\"#2e6b8e\",\"#2e6c8e\",\"#2e6d8e\",\"#2d6e8e\",\"#2d6f8e\",\"#2c708e\",\"#2c718e\",\"#2c728e\",\"#2b738e\",\"#2b748e\",\"#2a758e\",\"#2a768e\",\"#2a778e\",\"#29788e\",\"#29798e\",\"#287a8e\",\"#287a8e\",\"#287b8e\",\"#277c8e\",\"#277d8e\",\"#277e8e\",\"#267f8e\",\"#26808e\",\"#26818e\",\"#25828e\",\"#25838d\",\"#24848d\",\"#24858d\",\"#24868d\",\"#23878d\",\"#23888d\",\"#23898d\",\"#22898d\",\"#228a8d\",\"#228b8d\",\"#218c8d\",\"#218d8c\",\"#218e8c\",\"#208f8c\",\"#20908c\",\"#20918c\",\"#1f928c\",\"#1f938b\",\"#1f948b\",\"#1f958b\",\"#1f968b\",\"#1e978a\",\"#1e988a\",\"#1e998a\",\"#1e998a\",\"#1e9a89\",\"#1e9b89\",\"#1e9c89\",\"#1e9d88\",\"#1e9e88\",\"#1e9f88\",\"#1ea087\",\"#1fa187\",\"#1fa286\",\"#1fa386\",\"#20a485\",\"#20a585\",\"#21a685\",\"#21a784\",\"#22a784\",\"#23a883\",\"#23a982\",\"#24aa82\",\"#25ab81\",\"#26ac81\",\"#27ad80\",\"#28ae7f\",\"#29af7f\",\"#2ab07e\",\"#2bb17d\",\"#2cb17d\",\"#2eb27c\",\"#2fb37b\",\"#30b47a\",\"#32b57a\",\"#33b679\",\"#35b778\",\"#36b877\",\"#38b976\",\"#39b976\",\"#3bba75\",\"#3dbb74\",\"#3ebc73\",\"#40bd72\",\"#42be71\",\"#44be70\",\"#45bf6f\",\"#47c06e\",\"#49c16d\",\"#4bc26c\",\"#4dc26b\",\"#4fc369\",\"#51c468\",\"#53c567\",\"#55c666\",\"#57c665\",\"#59c764\",\"#5bc862\",\"#5ec961\",\"#60c960\",\"#62ca5f\",\"#64cb5d\",\"#67cc5c\",\"#69cc5b\",\"#6bcd59\",\"#6dce58\",\"#70ce56\",\"#72cf55\",\"#74d054\",\"#77d052\",\"#79d151\",\"#7cd24f\",\"#7ed24e\",\"#81d34c\",\"#83d34b\",\"#86d449\",\"#88d547\",\"#8bd546\",\"#8dd644\",\"#90d643\",\"#92d741\",\"#95d73f\",\"#97d83e\",\"#9ad83c\",\"#9dd93a\",\"#9fd938\",\"#a2da37\",\"#a5da35\",\"#a7db33\",\"#aadb32\",\"#addc30\",\"#afdc2e\",\"#b2dd2c\",\"#b5dd2b\",\"#b7dd29\",\"#bade27\",\"#bdde26\",\"#bfdf24\",\"#c2df22\",\"#c5df21\",\"#c7e01f\",\"#cae01e\",\"#cde01d\",\"#cfe11c\",\"#d2e11b\",\"#d4e11a\",\"#d7e219\",\"#dae218\",\"#dce218\",\"#dfe318\",\"#e1e318\",\"#e4e318\",\"#e7e419\",\"#e9e419\",\"#ece41a\",\"#eee51b\",\"#f1e51c\",\"#f3e51e\",\"#f6e61f\",\"#f8e621\",\"#fae622\",\"#fde724\"],\"nan_color\":\"rgba(0, 0, 0, 0)\",\"low\":0.0,\"high\":2192.77734375}}}},\"selection_glyph\":{\"type\":\"object\",\"name\":\"Image\",\"id\":\"4957736e-703f-40fb-801f-c9e8075d768a\",\"attributes\":{\"tags\":[\"apply_ranges\"],\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"dw\":{\"type\":\"field\",\"field\":\"dw\"},\"dh\":{\"type\":\"field\",\"field\":\"dh\"},\"global_alpha\":{\"type\":\"value\",\"value\":0.5},\"image\":{\"type\":\"field\",\"field\":\"image\"},\"color_mapper\":{\"id\":\"c8aa17cc-6b70-4e99-8a34-d209fc22f5e1\"}}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Image\",\"id\":\"9c50c4fe-edcf-4eb4-8c6d-d46fd3b68b91\",\"attributes\":{\"tags\":[\"apply_ranges\"],\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"dw\":{\"type\":\"field\",\"field\":\"dw\"},\"dh\":{\"type\":\"field\",\"field\":\"dh\"},\"global_alpha\":{\"type\":\"value\",\"value\":0.5},\"image\":{\"type\":\"field\",\"field\":\"image\"},\"color_mapper\":{\"id\":\"c8aa17cc-6b70-4e99-8a34-d209fc22f5e1\"}}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Image\",\"id\":\"f8106456-9e0e-4d00-8167-98620c1ff29c\",\"attributes\":{\"tags\":[\"apply_ranges\"],\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"dw\":{\"type\":\"field\",\"field\":\"dw\"},\"dh\":{\"type\":\"field\",\"field\":\"dh\"},\"global_alpha\":{\"type\":\"value\",\"value\":0.5},\"image\":{\"type\":\"field\",\"field\":\"image\"},\"color_mapper\":{\"id\":\"c8aa17cc-6b70-4e99-8a34-d209fc22f5e1\"}}}}}],\"toolbar\":{\"type\":\"object\",\"name\":\"Toolbar\",\"id\":\"5a7c945f-5013-437c-8da1-b7390325bc11\",\"attributes\":{\"tools\":[{\"type\":\"object\",\"name\":\"WheelZoomTool\",\"id\":\"7fd9274e-0739-4088-83cc-4efc1d3b648e\",\"attributes\":{\"renderers\":\"auto\",\"zoom_on_axis\":false}},{\"type\":\"object\",\"name\":\"BoxZoomTool\",\"id\":\"d065861f-3beb-44c9-939d-416c4ffa19f0\",\"attributes\":{\"overlay\":{\"type\":\"object\",\"name\":\"BoxAnnotation\",\"id\":\"2db07eb4-c6fa-43dc-9655-13d195006779\",\"attributes\":{\"syncable\":false,\"line_color\":\"black\",\"line_alpha\":1.0,\"line_width\":2,\"line_dash\":[4,4],\"fill_color\":\"lightgrey\",\"fill_alpha\":0.5,\"level\":\"overlay\",\"visible\":false,\"left\":{\"type\":\"number\",\"value\":\"nan\"},\"right\":{\"type\":\"number\",\"value\":\"nan\"},\"top\":{\"type\":\"number\",\"value\":\"nan\"},\"bottom\":{\"type\":\"number\",\"value\":\"nan\"},\"left_units\":\"canvas\",\"right_units\":\"canvas\",\"top_units\":\"canvas\",\"bottom_units\":\"canvas\",\"handles\":{\"type\":\"object\",\"name\":\"BoxInteractionHandles\",\"id\":\"818ca4d0-9e1f-442a-8152-8b73397ab5d5\",\"attributes\":{\"all\":{\"type\":\"object\",\"name\":\"AreaVisuals\",\"id\":\"54105c0a-ae65-4762-b0a6-2ea3db746221\",\"attributes\":{\"fill_color\":\"white\",\"hover_fill_color\":\"lightgray\"}}}}}},\"match_aspect\":true}},{\"type\":\"object\",\"name\":\"HoverTool\",\"id\":\"32a3c13d-579d-4cd9-8169-1563ee9c3628\",\"attributes\":{\"tags\":[\"hv_created\"],\"renderers\":[{\"id\":\"021efe7b-0eb7-4dc6-91d2-02bae8405586\"}],\"tooltips\":[[\"longitude (degrees)\",\"$x{custom}\"],[\"latitude (degrees)\",\"$y{custom}\"],[\"Burned Areas from GWIS (hectares (ha))\",\"@image\"]],\"formatters\":{\"type\":\"map\",\"entries\":[[\"$x\",{\"type\":\"object\",\"name\":\"CustomJSHover\",\"id\":\"2d06a8e2-4881-4bcb-9b7e-39009e1fb1e8\",\"attributes\":{\"code\":\"\\n        const projections = Bokeh.require(\\\"core/util/projections\\\");\\n        const {snap_x, snap_y} = special_vars\\n        const coords = projections.wgs84_mercator.invert(snap_x, snap_y)\\n        return \\\"\\\" + (coords[0]).toFixed(4)\\n    \"}}],[\"$y\",{\"type\":\"object\",\"name\":\"CustomJSHover\",\"id\":\"6104f2f3-7526-4f8b-9556-80f5153a889a\",\"attributes\":{\"code\":\"\\n        const projections = Bokeh.require(\\\"core/util/projections\\\");\\n        const {snap_x, snap_y} = special_vars\\n        const coords = projections.wgs84_mercator.invert(snap_x, snap_y)\\n        return \\\"\\\" + (coords[1]).toFixed(4)\\n    \"}}]]}}},{\"type\":\"object\",\"name\":\"PanTool\",\"id\":\"2f9a1749-cdd6-4ce9-bbff-7f286f9dbc52\"},{\"type\":\"object\",\"name\":\"ResetTool\",\"id\":\"4f691ec8-8a53-4bf3-b02d-5c2b490adc69\"}],\"active_drag\":{\"id\":\"2f9a1749-cdd6-4ce9-bbff-7f286f9dbc52\"}}},\"left\":[{\"type\":\"object\",\"name\":\"LinearAxis\",\"id\":\"64c4d2d2-9a3b-4b39-af42-aae79c459c84\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"MercatorTicker\",\"id\":\"85a041d7-32ae-4f9a-b532-fdb3ef84f09f\",\"attributes\":{\"mantissas\":[1,2,5],\"dimension\":\"lat\"}},\"formatter\":{\"type\":\"object\",\"name\":\"MercatorTickFormatter\",\"id\":\"72e8f6c7-2b9a-4a14-be53-75fff17ae936\",\"attributes\":{\"dimension\":\"lat\"}},\"axis_label\":\"Latitude\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"e9e77081-79c6-4f5e-b70d-455598abca40\"}}}],\"right\":[{\"type\":\"object\",\"name\":\"ColorBar\",\"id\":\"9caedc88-169e-45f3-b661-90fdf38a12a7\",\"attributes\":{\"location\":[0,0],\"ticker\":{\"type\":\"object\",\"name\":\"BasicTicker\",\"id\":\"730c13bc-6a18-4e4f-bd97-398a225231cc\",\"attributes\":{\"mantissas\":[1,2,5]}},\"major_label_policy\":{\"type\":\"object\",\"name\":\"NoOverlap\",\"id\":\"c4fe3082-8ae2-41d5-a5ae-cb0c4ac92ccb\"},\"label_standoff\":8,\"major_tick_line_color\":\"black\",\"bar_line_color\":\"black\",\"color_mapper\":{\"id\":\"c8aa17cc-6b70-4e99-8a34-d209fc22f5e1\"}}}],\"below\":[{\"type\":\"object\",\"name\":\"LinearAxis\",\"id\":\"00666fd4-7aed-4430-a835-f8512433af2e\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"MercatorTicker\",\"id\":\"74cb5ee2-c740-42e4-ba07-27d32e75c3bc\",\"attributes\":{\"mantissas\":[1,2,5],\"dimension\":\"lon\"}},\"formatter\":{\"type\":\"object\",\"name\":\"MercatorTickFormatter\",\"id\":\"91d425aa-829b-4149-b0c6-3e47a6ae0e4d\",\"attributes\":{\"dimension\":\"lon\"}},\"axis_label\":\"Longitude\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"13a0a836-4fac-4dcb-8f49-1d44af645194\"}}}],\"center\":[{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"63956c90-623e-46e2-a0fe-88cc15087a9b\",\"attributes\":{\"axis\":{\"id\":\"00666fd4-7aed-4430-a835-f8512433af2e\"},\"grid_line_color\":null}},{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"f0be8082-e446-4ecb-aac0-e0847f0b4ea8\",\"attributes\":{\"dimension\":1,\"axis\":{\"id\":\"64c4d2d2-9a3b-4b39-af42-aae79c459c84\"},\"grid_line_color\":null}}],\"frame_width\":600,\"frame_height\":400,\"min_border_top\":10,\"min_border_bottom\":10,\"min_border_left\":10,\"min_border_right\":10,\"output_backend\":\"webgl\",\"match_aspect\":true}},{\"type\":\"object\",\"name\":\"Spacer\",\"id\":\"53178ccc-56e6-4f1a-b43c-ee7779b09ad8\",\"attributes\":{\"name\":\"HSpacer00380\",\"stylesheets\":[\"\\n:host(.pn-loading):before, .pn-loading:before {\\n  background-color: #c3c3c3;\\n  mask-size: auto calc(min(50%, 400px));\\n  -webkit-mask-size: auto calc(min(50%, 400px));\\n}\",{\"id\":\"b2cc6384-ff99-48bc-8a86-e5aca7e3cd50\"},{\"id\":\"5072dc66-469d-445d-86f5-db28d0db7882\"},{\"id\":\"eae94d15-b635-4d49-8d6f-664839602275\"}],\"margin\":0,\"sizing_mode\":\"stretch_width\",\"align\":\"start\"}}]}}],\"defs\":[{\"type\":\"model\",\"name\":\"ReactiveHTML1\"},{\"type\":\"model\",\"name\":\"FlexBox1\",\"properties\":[{\"name\":\"align_content\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"align_items\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"flex_direction\",\"kind\":\"Any\",\"default\":\"row\"},{\"name\":\"flex_wrap\",\"kind\":\"Any\",\"default\":\"wrap\"},{\"name\":\"gap\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"justify_content\",\"kind\":\"Any\",\"default\":\"flex-start\"}]},{\"type\":\"model\",\"name\":\"FloatPanel1\",\"properties\":[{\"name\":\"config\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"contained\",\"kind\":\"Any\",\"default\":true},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"right-top\"},{\"name\":\"offsetx\",\"kind\":\"Any\",\"default\":null},{\"name\":\"offsety\",\"kind\":\"Any\",\"default\":null},{\"name\":\"theme\",\"kind\":\"Any\",\"default\":\"primary\"},{\"name\":\"status\",\"kind\":\"Any\",\"default\":\"normalized\"}]},{\"type\":\"model\",\"name\":\"GridStack1\",\"properties\":[{\"name\":\"ncols\",\"kind\":\"Any\",\"default\":null},{\"name\":\"nrows\",\"kind\":\"Any\",\"default\":null},{\"name\":\"allow_resize\",\"kind\":\"Any\",\"default\":true},{\"name\":\"allow_drag\",\"kind\":\"Any\",\"default\":true},{\"name\":\"state\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"drag1\",\"properties\":[{\"name\":\"slider_width\",\"kind\":\"Any\",\"default\":5},{\"name\":\"slider_color\",\"kind\":\"Any\",\"default\":\"black\"},{\"name\":\"value\",\"kind\":\"Any\",\"default\":50}]},{\"type\":\"model\",\"name\":\"click1\",\"properties\":[{\"name\":\"terminal_output\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"debug_name\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"clears\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"FastWrapper1\",\"properties\":[{\"name\":\"object\",\"kind\":\"Any\",\"default\":null},{\"name\":\"style\",\"kind\":\"Any\",\"default\":null}]},{\"type\":\"model\",\"name\":\"NotificationArea1\",\"properties\":[{\"name\":\"js_events\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"max_notifications\",\"kind\":\"Any\",\"default\":5},{\"name\":\"notifications\",\"kind\":\"Any\",\"default\":[]},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"bottom-right\"},{\"name\":\"_clear\",\"kind\":\"Any\",\"default\":0},{\"name\":\"types\",\"kind\":\"Any\",\"default\":[{\"type\":\"map\",\"entries\":[[\"type\",\"warning\"],[\"background\",\"#ffc107\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-exclamation-triangle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]},{\"type\":\"map\",\"entries\":[[\"type\",\"info\"],[\"background\",\"#007bff\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-info-circle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]}]}]},{\"type\":\"model\",\"name\":\"Notification\",\"properties\":[{\"name\":\"background\",\"kind\":\"Any\",\"default\":null},{\"name\":\"duration\",\"kind\":\"Any\",\"default\":3000},{\"name\":\"icon\",\"kind\":\"Any\",\"default\":null},{\"name\":\"message\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"notification_type\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_rendered\",\"kind\":\"Any\",\"default\":false},{\"name\":\"_destroyed\",\"kind\":\"Any\",\"default\":false}]},{\"type\":\"model\",\"name\":\"TemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"BootstrapTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"TemplateEditor1\",\"properties\":[{\"name\":\"layout\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"MaterialTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"ReactiveESM1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"JSComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"ReactComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"AnyWidgetComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"request_value1\",\"properties\":[{\"name\":\"fill\",\"kind\":\"Any\",\"default\":\"none\"},{\"name\":\"_synced\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_request_sync\",\"kind\":\"Any\",\"default\":0}]}]}};\n  var render_items = [{\"docid\":\"36fbad59-5097-4c5b-b01c-3ea279e47b05\",\"roots\":{\"125f3484-ea15-4fc9-b1f4-c1de42eeabec\":\"c6a7520a-3aec-459f-b0e6-dcb62c7379c0\"},\"root_ids\":[\"125f3484-ea15-4fc9-b1f4-c1de42eeabec\"]}];\n  var docs = Object.values(docs_json)\n  if (!docs) {\n    return\n  }\n  const py_version = docs[0].version.replace('rc', '-rc.').replace('.dev', '-dev.')\n  async function embed_document(root) {\n    var Bokeh = get_bokeh(root)\n    await Bokeh.embed.embed_items_notebook(docs_json, render_items);\n    for (const render_item of render_items) {\n      for (const root_id of render_item.root_ids) {\n\tconst id_el = document.getElementById(root_id)\n\tif (id_el.children.length && id_el.children[0].hasAttribute('data-root-id')) {\n\t  const root_el = id_el.children[0]\n\t  root_el.id = root_el.id + '-rendered'\n\t  for (const child of root_el.children) {\n            // Ensure JupyterLab does not capture keyboard shortcuts\n            // see: https://jupyterlab.readthedocs.io/en/4.1.x/extension/notebook.html#keyboard-interaction-model\n\t    child.setAttribute('data-lm-suppress-shortcuts', 'true')\n\t  }\n\t}\n      }\n    }\n  }\n  function get_bokeh(root) {\n    if (root.Bokeh === undefined) {\n      return null\n    } else if (root.Bokeh.version !== py_version) {\n      if (root.Bokeh.versions === undefined || !root.Bokeh.versions.has(py_version)) {\n\treturn null\n      }\n      return root.Bokeh.versions.get(py_version);\n    } else if (root.Bokeh.version === py_version) {\n      return root.Bokeh\n    }\n    return null\n  }\n  function is_loaded(root) {\n    var Bokeh = get_bokeh(root)\n    return (Bokeh != null && Bokeh.Panel !== undefined)\n  }\n  if (is_loaded(root)) {\n    embed_document(root);\n  } else {\n    var attempts = 0;\n    var timer = setInterval(function(root) {\n      if (is_loaded(root)) {\n        clearInterval(timer);\n        embed_document(root);\n      } else if (document.readyState == \"complete\") {\n        attempts++;\n        if (attempts > 200) {\n          clearInterval(timer);\n\t  var Bokeh = get_bokeh(root)\n\t  if (Bokeh == null || Bokeh.Panel == null) {\n            console.warn(\"Panel: ERROR: Unable to run Panel code because Bokeh or Panel library is missing\");\n\t  } else {\n\t    console.warn(\"Panel: WARNING: Attempting to render but not all required libraries could be resolved.\")\n\t    embed_document(root)\n\t  }\n        }\n      }\n    }, 25, root)\n  }\n})(window);</script>","content_type":"text/html"},"text/plain":{"content":":Overlay\n   .WMTS.I  :WMTS   [Longitude,Latitude]\n   .Image.I :Image   [longitude,latitude]   (Burned Areas from GWIS)","content_type":"text/plain"}}}],"key":"j7nc7MPMiv"}],"key":"Tgx417Wqsd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Analysing in Detail","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qnFF21GbvT"}],"identifier":"analysing-in-detail","label":"Analysing in Detail","html_id":"analysing-in-detail","implicit":true,"key":"qEPdPzltek"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now that we have an idea of a potential wildfire event, we can explore in a bit more detail to see what areas where affected most.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UuAQbqXRwW"}],"key":"NGSmDpcjpC"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We will use higher resolution sentinel-2-l2a data to compute the Normalised Burn Ratio (NBR) index to highlight burned areas. The NBR index uses near-infrared (NIR) and shortwave-infrared (SWIR) wavelengths. We will use a STAC API ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"IpKrVC4AC7"},{"type":"link","url":"https://element84.com/earth-search/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"element84’s STAC API","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"NuyGNHsUHm"}],"urlSource":"https://element84.com/earth-search/","key":"nbaHRbjc1K"},{"type":"text","value":" endpoint to search for the data and load only the relevant, cloud-free data.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"WnnF3nNF83"}],"key":"bvxlnUL3D4"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"To estimate the amount of burnt area we will compute the difference between the NBR from period before the fire date and the NBR from the period after. The first step is to select the week before and the week after the wildfire","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"aoitB2tN5G"}],"key":"X4TT6XRlKr"}],"key":"USYPxMawXW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fire_date_t = pd.to_datetime(date_max_fire.values.item()) # get the date of the forest fire and a the dates before and after it\nweek_before = (fire_date_t - timedelta(days=7))\nweek_after = (fire_date_t + timedelta(days=7))","key":"NqA6ucdTvy"},{"type":"output","id":"lfbPFWHneTExDa1o0Patd","data":[],"key":"MJa2hPKXoc"}],"key":"eevxR9VUpO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(week_before.date(), \"---\" , week_after.date())","key":"OWoLZ1wN73"},{"type":"output","id":"tEq_YHh3ZASehG649hs9S","data":[{"name":"stdout","output_type":"stream","text":"2020-09-06 --- 2020-09-20\n"}],"key":"tMalm3Qfaj"}],"key":"qde3zcpDhU"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Fetching the data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D4f7acQSbh"}],"identifier":"fetching-the-data","label":"Fetching the data","html_id":"fetching-the-data","implicit":true,"key":"jt51e4SEmC"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We will now fetch the data using pystac to search through the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bqknIpIgVS"},{"type":"link","url":"http://earth-search.aws.element84.com/v1","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"earth​-search​.aws​.element84​.com​/v1","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"kCxqN8Apzd"}],"urlSource":"http://earth-search.aws.element84.com/v1","key":"wnhrzYh2WV"},{"type":"text","value":" STAC API endpoint. As mentioned in the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mW6lDrK3f1"},{"type":"link","url":"/stac-and-data-access","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"STAC and Data Access guide","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qUZgWAnmzk"}],"urlSource":"../earthcode101/stac_and_data_access.ipynb","dataUrl":"/stac-and-data-access.json","internal":true,"protocol":"file","key":"bqVJ3l3pcA"},{"type":"text","value":", the STAC API provides us with endpoints to query STAC collections.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Vy4CUAxBU9"}],"key":"ZpHuhMLhsK"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"There is an ecosystem of libraries that implement STAC standards (pystac, odc-stac, stackstac, etc..) that allow us to analyse, load and use data described in STAC. We will briefly explore in the following cells below.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"KYmYYWEuwE"}],"key":"VoEwxlPuCu"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"As a first step, we will open a catalog with the pystac library: ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"k2sU0F2TVp"},{"type":"link","url":"https://earth-search.aws.element84.com/v1","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"https://​earth​-search​.aws​.element84​.com​/v1","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"cZZvc9un0p"}],"urlSource":"https://earth-search.aws.element84.com/v1","key":"TllPxhvvAm"},{"type":"text","value":" This catalog contains STAC collections of various datasets (such as sentinel-1 and sentinel-2 data) in cloud optimised formats (COGs in this case) - see ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"U489jrU0Cl"},{"type":"link","url":"https://earth-search.aws.element84.com","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"https://​earth​-search​.aws​.element84​.com","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"XWmTKUamnq"}],"urlSource":"https://earth-search.aws.element84.com","key":"H1ReBbC9u1"},{"type":"text","value":". for more details. With these formats we are able to use the assets using cloud-native access patterns (see ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"pSPBAdbHUT"},{"type":"link","url":"https://guide.cloudnativegeo.org/cookbooks/","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"https://​guide​.cloudnativegeo​.org​/cookbooks/","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"zYnaq8mHvu"}],"urlSource":"https://guide.cloudnativegeo.org/cookbooks/","key":"pdRcGqyxnp"},{"type":"text","value":" for more details).","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"zYGsNgMW1M"}],"key":"bu8y6lUWwo"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Note that a STAC endpoint like the one below, only returns STAC items and not the actual data. The STAC items returned have Assets defined which link to the actual data (and provide metadata).","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"YxGQr9FwKr"}],"key":"CSyrrSgdvy"}],"key":"UrtVGm2I5L"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"catalog = pystac_client.open(\"https://earth-search.aws.element84.com/v1\")\nchunk={} # <-- use dask\nres=10 # 10m resolution","key":"xI1xGPefsI"},{"type":"output","id":"UujlcBT0c_IN-6NRfMt-d","data":[],"key":"vLQ6upXTIH"}],"key":"LoF2yZl2BY"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"In the next step we will do two things:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uWhQ6clOjx"}],"key":"OFBxBX2gQR"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"1.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Z8lqCgt1Wm"}],"key":"JYwamkmLST"},{"type":"text","value":" Search for multiple cloudless sentinel-2 satellite images within a month of our pre-fire (week_before) date. The STAC API allows us to do a couple of things in a simple API call:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"emHEaA230M"}],"key":"gWAy2ixw8U"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We can define an arrea of interest (bbox) and search for items that cover this region","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"eEtwegpHeY"}],"key":"fcQVuT4yEh"}],"key":"MTloASvcNU"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We can subset for the time of interest as well (datetime)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BJDU56Y90L"}],"key":"tCkpE279LY"}],"key":"YydJxkau7b"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We can define custom querries over implemented STAC extensions. For example, the Sentinel STAC collection we are querrying implements the eo STAC extension, and defines cloud_cover - this allows us to search for quality assets with minimal cloudy pixels","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HKfSunhOOf"}],"key":"ExfFHKP99b"}],"key":"Sy8otJHFHY"}],"key":"YgrTBu0pZ9"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"This will return the relevant STAC items - which contain assets that point to our data of interest. We now need to load this data into a dataarray to start analysing it.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Ngda3h9c5S"}],"key":"AapWBFfr5q"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"2.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"jyh44r4zfE"}],"key":"d4fmTLXfVt"},{"type":"text","value":" Note that in the above step, we only have items that point to some data - this data can be tiff, zarr, netcdf, COG, or other SpatioTemporal asset data. In our case, the element84 endpoint points to the data collection of  ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"OylvCNsZMT"},{"type":"emphasis","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"link","url":"https://registry.opendata.aws/sentinel-2-l2a-cogs/","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"https://​registry​.opendata​.aws​/sentinel​-2​-l2a​-cogs/","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"sIZEp1XYCt"}],"urlSource":"https://registry.opendata.aws/sentinel-2-l2a-cogs/","key":"Rvf9ekH1sl"}],"key":"fXWgBKAt0y"},{"type":"text","value":" - the format of our data is cloud-optimized GeoTiff. A cloud-friendly format such as this enables us cloud-native access patterns, such as easily fetching only our area of interest (as opposed to several tiff files and manually subsetting them after downloading).","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"QgVLwWwN4v"}],"key":"ldyrf3wKfW"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Libraries such as odc-stac integrate with STAC standards and allow us to load data as well as leveraging the cloud-optimised formats. For example, in the cell below we define how we want to transform/load our data by:","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"gwnMRXz8z6"}],"key":"e0YtzUrjO9"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Passing the STAC item (or multiple items) we want to load","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"xi9lGlIq6h"}],"key":"cY7SLIoxWt"}],"key":"XpE4PMNJL4"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"defining a particular chunk size (the passed {} asks for the data to be automatically chunked as it is originally);","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"cy7IeheqWK"}],"key":"HvAi8Ibkt0"}],"key":"qpzHm8ktmN"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We can request only the spectral bands of interest, in this case nir and swir22, to reduce the amount of data that we fetch.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"QcxSL9BQbR"}],"key":"jMj53j9mM6"}],"key":"YYeMgqBk8a"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"We can define a resolution to retrieve the data at, note that this will also resample automatically. For example the nir band data has a 10m resolution, but the swir22 - 20m resolution.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"zUPsbvJOU9"}],"key":"JeQetNRQHu"}],"key":"yCQmWO5kqI"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"There are multiple other options as well, such as defining in which projection we want our data in. More information can be found at: ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"C5dc2denU7"},{"type":"link","url":"https://odc-stac.readthedocs.io/en/latest/_api/odc.stac.load.html","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"https://​odc​-stac​.readthedocs​.io​/en​/latest​/​_api​/odc​.stac​.load​.html","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"RpNaWGWy0m"}],"urlSource":"https://odc-stac.readthedocs.io/en/latest/_api/odc.stac.load.html","key":"rDiWfOvXcr"}],"key":"o3Kh2x7vF5"}],"key":"sgcM7YTAS9"}],"key":"qVBjEAQ4pP"}],"key":"iblfPSgBPW"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"# STAC search for relevant items\nweek_before_start = (week_before - timedelta(days=30))\ntime_range_start = str(week_before_start.date()) + \"/\" + str(week_before.date())\n\nquery1 = catalog.search(\n    collections=[\"sentinel-2-l2a\"], datetime=time_range_start, limit=100,\n    bbox=bbox, query={\"eo:cloud_cover\": {\"lt\": 20}}\n)\n\nitems = list(query1.items())\nprint(f\"Found: {len(items):d} datasets\")","key":"VQxtv1aniZ"},{"type":"output","id":"v0Vq5hjGxUZyZYjkcvZSf","data":[{"name":"stdout","output_type":"stream","text":"Found: 13 datasets\n"}],"key":"KUAsbIyUQ9"}],"key":"qvoUTZuXw5"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"# plot all the STAC assets\npoly_pre = gpd.GeoSeries([shapely.Polygon(item.geometry['coordinates'][0]) for item in items], name='geometry', crs='epsg:4236')\npoly_pre.explore()","key":"es9g2a2czB"},{"type":"output","id":"B4ayTCLxVSCgVkvajBe4-","data":[{"output_type":"execute_result","execution_count":24,"metadata":{},"data":{"text/html":{"content":"<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    \n    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n    \n        &lt;script&gt;\n            L_NO_TOUCH = false;\n            L_DISABLE_3D = false;\n        &lt;/script&gt;\n    \n    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://code.jquery.com/jquery-3.7.1.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n    \n            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n            &lt;style&gt;\n                #map_f769c741a5faca23c0656095d5aa31e4 {\n                    position: relative;\n                    width: 100.0%;\n                    height: 100.0%;\n                    left: 0.0%;\n                    top: 0.0%;\n                }\n                .leaflet-container { font-size: 1rem; }\n            &lt;/style&gt;\n        \n    \n                    &lt;style&gt;\n                        .foliumtooltip {\n                            \n                        }\n                       .foliumtooltip table{\n                            margin: auto;\n                        }\n                        .foliumtooltip tr{\n                            text-align: left;\n                        }\n                        .foliumtooltip th{\n                            padding: 2px; padding-right: 8px;\n                        }\n                    &lt;/style&gt;\n            \n&lt;/head&gt;\n&lt;body&gt;\n    \n    \n            &lt;div class=&quot;folium-map&quot; id=&quot;map_f769c741a5faca23c0656095d5aa31e4&quot; &gt;&lt;/div&gt;\n        \n&lt;/body&gt;\n&lt;script&gt;\n    \n    \n            var map_f769c741a5faca23c0656095d5aa31e4 = L.map(\n                &quot;map_f769c741a5faca23c0656095d5aa31e4&quot;,\n                {\n                    center: [41.955603034783074, -8.340401116075991],\n                    crs: L.CRS.EPSG3857,\n                    ...{\n  &quot;zoom&quot;: 10,\n  &quot;zoomControl&quot;: true,\n  &quot;preferCanvas&quot;: false,\n}\n\n                }\n            );\n            L.control.scale().addTo(map_f769c741a5faca23c0656095d5aa31e4);\n\n            \n\n        \n    \n            var tile_layer_63fc237b215c73aca5a463ac1b127408 = L.tileLayer(\n                &quot;https://tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n                {\n  &quot;minZoom&quot;: 0,\n  &quot;maxZoom&quot;: 19,\n  &quot;maxNativeZoom&quot;: 19,\n  &quot;noWrap&quot;: false,\n  &quot;attribution&quot;: &quot;\\u0026copy; \\u003ca href=\\&quot;https://www.openstreetmap.org/copyright\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e contributors&quot;,\n  &quot;subdomains&quot;: &quot;abc&quot;,\n  &quot;detectRetina&quot;: false,\n  &quot;tms&quot;: false,\n  &quot;opacity&quot;: 1,\n}\n\n            );\n        \n    \n            tile_layer_63fc237b215c73aca5a463ac1b127408.addTo(map_f769c741a5faca23c0656095d5aa31e4);\n        \n    \n            map_f769c741a5faca23c0656095d5aa31e4.fitBounds(\n                [[41.457390342414385, -9.008034722874328], [42.45381572715176, -7.672767509277656]],\n                {}\n            );\n        \n    \n        function geo_json_82ed1537cb8019c8419199373a9885f3_styler(feature) {\n            switch(feature.id) {\n                default:\n                    return {&quot;fillOpacity&quot;: 0.5, &quot;weight&quot;: 2};\n            }\n        }\n        function geo_json_82ed1537cb8019c8419199373a9885f3_highlighter(feature) {\n            switch(feature.id) {\n                default:\n                    return {&quot;fillOpacity&quot;: 0.75};\n            }\n        }\n        function geo_json_82ed1537cb8019c8419199373a9885f3_pointToLayer(feature, latlng) {\n            var opts = {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;#3388ff&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;#3388ff&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 2, &quot;stroke&quot;: true, &quot;weight&quot;: 3};\n            \n            let style = geo_json_82ed1537cb8019c8419199373a9885f3_styler(feature)\n            Object.assign(opts, style)\n            \n            return new L.CircleMarker(latlng, opts)\n        }\n\n        function geo_json_82ed1537cb8019c8419199373a9885f3_onEachFeature(feature, layer) {\n            layer.on({\n                mouseout: function(e) {\n                    if(typeof e.target.setStyle === &quot;function&quot;){\n                            geo_json_82ed1537cb8019c8419199373a9885f3.resetStyle(e.target);\n                    }\n                },\n                mouseover: function(e) {\n                    if(typeof e.target.setStyle === &quot;function&quot;){\n                        const highlightStyle = geo_json_82ed1537cb8019c8419199373a9885f3_highlighter(e.target.feature)\n                        e.target.setStyle(highlightStyle);\n                    }\n                },\n            });\n        };\n        var geo_json_82ed1537cb8019c8419199373a9885f3 = L.geoJson(null, {\n                onEachFeature: geo_json_82ed1537cb8019c8419199373a9885f3_onEachFeature,\n            \n                style: geo_json_82ed1537cb8019c8419199373a9885f3_styler,\n                pointToLayer: geo_json_82ed1537cb8019c8419199373a9885f3_pointToLayer,\n            ...{\n}\n        });\n\n        function geo_json_82ed1537cb8019c8419199373a9885f3_add (data) {\n            geo_json_82ed1537cb8019c8419199373a9885f3\n                .addData(data);\n        }\n            geo_json_82ed1537cb8019c8419199373a9885f3_add({&quot;bbox&quot;: [-9.008034722874328, 41.457390342414385, -7.672767509277656, 42.45381572715176], &quot;features&quot;: [{&quot;bbox&quot;: [-9.007971347318742, 41.457390342414385, -7.672767509277656, 42.45371580096661], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.848429640572792, 42.45371580096661], [-9.007971347318742, 41.95162022122697], [-9.007911439563484, 41.46481385761268], [-7.6931255155496325, 41.457390342414385], [-7.672767509277656, 42.446131748610206], [-8.848429640572792, 42.45371580096661]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;0&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.007971929597284, 41.457390342414385, -7.672767509277656, 42.45371835784616], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.8503758474949, 42.45371835784616], [-7.672767509277656, 42.446131748610206], [-7.6931255155496325, 41.457390342414385], [-9.007911439563484, 41.46481385761268], [-9.007971929597284, 41.956293214572526], [-8.8503758474949, 42.45371835784616]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;1&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.008034722874328, 41.46222433903367, -7.67398436979216, 42.45381572715176], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-9.008034722874328, 42.45381572715176], [-9.007911549061879, 41.465714688769545], [-8.03721094414078, 41.46222433903367], [-7.892452825648411, 41.85730762039245], [-7.705837283602346, 42.34976042962237], [-7.675408059810284, 42.42442740739732], [-7.67398436979216, 42.44614583373892], [-9.008034722874328, 42.45381572715176]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;2&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.008034722874328, 41.460760347623555, -7.672767509277656, 42.45381572715176], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-9.008034722874328, 42.45381572715176], [-7.672767509277656, 42.446131748610206], [-7.673248814351127, 42.423321410513594], [-7.892862941303598, 41.84749381882769], [-8.034264023566807, 41.460760347623555], [-9.007911439563484, 41.46481385761268], [-9.008034722874328, 42.45381572715176]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;3&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.007966906180748, 41.457390342414385, -7.672767509277656, 42.45370080451193], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.837483414863499, 42.45370080451193], [-9.007966906180748, 41.91594192486677], [-9.007911439563484, 41.46481385761268], [-7.6931255155496325, 41.457390342414385], [-7.672767509277656, 42.446131748610206], [-8.837483414863499, 42.45370080451193]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;4&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.007969371083034, 41.457390342414385, -7.672767509277656, 42.45370992808618], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.844051346493304, 42.45370992808618], [-7.672767509277656, 42.446131748610206], [-7.6931255155496325, 41.457390342414385], [-9.007911439563484, 41.46481385761268], [-9.007969371083034, 41.935751938922834], [-8.844051346493304, 42.45370992808618]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;5&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.008034722874328, 41.462272567133745, -7.674029069881448, 42.45381572715176], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-9.008034722874328, 42.45381572715176], [-9.007911549061888, 41.46571468882794], [-8.042839409661264, 41.462272567133745], [-7.674029069881448, 42.446146350895184], [-9.008034722874328, 42.45381572715176]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;6&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.008034722874328, 41.460832407495396, -7.674007881311744, 42.45381572715176], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-9.008034722874328, 42.45381572715176], [-7.674007881311744, 42.44614610575688], [-7.68025397288179, 42.42384154040992], [-7.69414547884759, 42.39232890972557], [-7.89690993774274, 41.85735103796311], [-8.042885618462385, 41.460832407495396], [-9.007911439563484, 41.46481385761268], [-9.008034722874328, 42.45381572715176]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;7&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.008034722874328, 41.46176519978156, -7.6739835860103875, 42.45381572715176], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-9.008034722874328, 42.45381572715176], [-9.007911549061173, 41.46571468299448], [-8.035939806892104, 41.46176519978156], [-7.891002701432991, 41.857563428882315], [-7.689827457311242, 42.38966563987588], [-7.674856349646238, 42.424095078039834], [-7.6739835860103875, 42.44614582467083], [-9.008034722874328, 42.45381572715176]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;8&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.008034722874328, 41.4607482756861, -7.672767509277656, 42.45381572715176], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-9.008034722874328, 42.45381572715176], [-7.672767509277656, 42.446131748610206], [-7.673288449147963, 42.421441826548666], [-7.88876355520845, 41.8546598111059], [-8.032827195246382, 41.4607482756861], [-9.007911439563484, 41.46481385761268], [-9.008034722874328, 42.45381572715176]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;9&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.007968675075809, 41.457390342414385, -7.672767509277656, 42.453707933341995], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.842591947961074, 42.453707933341995], [-7.672767509277656, 42.446131748610206], [-7.6931255155496325, 41.457390342414385], [-9.007911439563484, 41.46481385761268], [-9.007968675075809, 41.93016026456433], [-8.842591947961074, 42.453707933341995]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;10&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.00796979614377, 41.457390342414385, -7.672767509277656, 42.45371190460562], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.84551100891782, 42.45371190460562], [-9.00796979614377, 41.93916606602867], [-9.007911439563484, 41.46481385761268], [-7.6931255155496325, 41.457390342414385], [-7.672767509277656, 42.446131748610206], [-8.84551100891782, 42.45371190460562]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;11&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.007970469879538, 41.457390342414385, -7.672767509277656, 42.453713862213625], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.846970428402166, 42.453713862213625], [-7.672767509277656, 42.446131748610206], [-7.6931255155496325, 41.457390342414385], [-9.007911439563484, 41.46481385761268], [-9.007970469879538, 41.94457636009475], [-8.846970428402166, 42.453713862213625]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;12&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}], &quot;type&quot;: &quot;FeatureCollection&quot;});\n\n        \n    \n    geo_json_82ed1537cb8019c8419199373a9885f3.bindTooltip(\n    function(layer){\n    let div = L.DomUtil.create(&#x27;div&#x27;);\n    \n    return div\n    }\n    ,{\n  &quot;sticky&quot;: true,\n  &quot;className&quot;: &quot;foliumtooltip&quot;,\n});\n                     \n    \n            geo_json_82ed1537cb8019c8419199373a9885f3.addTo(map_f769c741a5faca23c0656095d5aa31e4);\n        \n&lt;/script&gt;\n&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>","content_type":"text/html"},"text/plain":{"content":"<folium.folium.Map at 0x7efb98784690>","content_type":"text/plain"}}}],"key":"d4uKqYVis8"}],"key":"fjjPuIVu6M"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"prefire_ds = stac_load(\n    items,\n    bands=(\"nir\", \"swir22\"),\n    chunks=chunk,  # <-- use Dask\n    resolution=res,\n    crs=\"EPSG:32629\",\n    groupby=\"datetime\",\n    bbox=bbox,\n)\nprefire_ds = prefire_ds.mean(dim=\"time\")\nprefire_ds","key":"Kv6TeDO1rK"},{"type":"output","id":"MJguWmND9w57aMwestYtK","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"f853d26314708ffb9f1d423a90056abe","path":"/tutorials/build/f853d26314708ffb9f1d423a90056abe.html"},"text/plain":{"content":"<xarray.Dataset> Size: 95MB\nDimensions:      (y: 2800, x: 2112)\nCoordinates:\n  * y            (y) float64 22kB 4.637e+06 4.636e+06 ... 4.609e+06 4.609e+06\n  * x            (x) float64 17kB 5.726e+05 5.726e+05 ... 5.937e+05 5.937e+05\n    spatial_ref  int32 4B 32629\nData variables:\n    nir          (y, x) float64 47MB dask.array<chunksize=(2800, 2112), meta=np.ndarray>\n    swir22       (y, x) float64 47MB dask.array<chunksize=(2800, 2112), meta=np.ndarray>","content_type":"text/plain"}}}],"key":"z4MPAqFUYf"}],"key":"Jm0UtbsenD"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We now do the same for the month after..","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nZg0LPMl9j"}],"key":"HOmXoggatk"}],"key":"KV2ibnhHud"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"week_after_end = (week_after + timedelta(days=30))\ntime_range_end = str(week_after.date()) + \"/\" + str(week_after_end.date())\n\nquery2 = catalog.search(\n    collections=[\"sentinel-2-l2a\"], datetime=time_range_end, limit=100,\n    bbox=bbox, query={\"eo:cloud_cover\": {\"lt\": 20}}\n)\n\nitems = list(query2.items())\nprint(f\"Found: {len(items):d} datasets\")","key":"QbDWEQ3uLo"},{"type":"output","id":"YccqSNM79QFFwEyfbeHol","data":[{"name":"stdout","output_type":"stream","text":"Found: 8 datasets\n"}],"key":"kzmoJSS9KO"}],"key":"gXUb1UoA83"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"poly_post = gpd.GeoSeries([shapely.Polygon(item.geometry['coordinates'][0]) for item in items], name='geometry', crs='epsg:4236')\npoly_post.explore()","key":"TwUs7lETMy"},{"type":"output","id":"nHO6-ZyFHhwM3kwSHYIXG","data":[{"output_type":"execute_result","execution_count":27,"metadata":{},"data":{"text/html":{"content":"<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    \n    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n    \n        &lt;script&gt;\n            L_NO_TOUCH = false;\n            L_DISABLE_3D = false;\n        &lt;/script&gt;\n    \n    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://code.jquery.com/jquery-3.7.1.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n    \n            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n            &lt;style&gt;\n                #map_47d4641655dcf16d1393e293282f6f47 {\n                    position: relative;\n                    width: 100.0%;\n                    height: 100.0%;\n                    left: 0.0%;\n                    top: 0.0%;\n                }\n                .leaflet-container { font-size: 1rem; }\n            &lt;/style&gt;\n        \n    \n                    &lt;style&gt;\n                        .foliumtooltip {\n                            \n                        }\n                       .foliumtooltip table{\n                            margin: auto;\n                        }\n                        .foliumtooltip tr{\n                            text-align: left;\n                        }\n                        .foliumtooltip th{\n                            padding: 2px; padding-right: 8px;\n                        }\n                    &lt;/style&gt;\n            \n&lt;/head&gt;\n&lt;body&gt;\n    \n    \n            &lt;div class=&quot;folium-map&quot; id=&quot;map_47d4641655dcf16d1393e293282f6f47&quot; &gt;&lt;/div&gt;\n        \n&lt;/body&gt;\n&lt;script&gt;\n    \n    \n            var map_47d4641655dcf16d1393e293282f6f47 = L.map(\n                &quot;map_47d4641655dcf16d1393e293282f6f47&quot;,\n                {\n                    center: [41.955603034783074, -8.340401116075991],\n                    crs: L.CRS.EPSG3857,\n                    ...{\n  &quot;zoom&quot;: 10,\n  &quot;zoomControl&quot;: true,\n  &quot;preferCanvas&quot;: false,\n}\n\n                }\n            );\n            L.control.scale().addTo(map_47d4641655dcf16d1393e293282f6f47);\n\n            \n\n        \n    \n            var tile_layer_c781eb7640da667a1020a284aaf1a1c9 = L.tileLayer(\n                &quot;https://tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n                {\n  &quot;minZoom&quot;: 0,\n  &quot;maxZoom&quot;: 19,\n  &quot;maxNativeZoom&quot;: 19,\n  &quot;noWrap&quot;: false,\n  &quot;attribution&quot;: &quot;\\u0026copy; \\u003ca href=\\&quot;https://www.openstreetmap.org/copyright\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e contributors&quot;,\n  &quot;subdomains&quot;: &quot;abc&quot;,\n  &quot;detectRetina&quot;: false,\n  &quot;tms&quot;: false,\n  &quot;opacity&quot;: 1,\n}\n\n            );\n        \n    \n            tile_layer_c781eb7640da667a1020a284aaf1a1c9.addTo(map_47d4641655dcf16d1393e293282f6f47);\n        \n    \n            map_47d4641655dcf16d1393e293282f6f47.fitBounds(\n                [[41.457390342414385, -9.008034722874328], [42.45381572715176, -7.672767509277656]],\n                {}\n            );\n        \n    \n        function geo_json_d0214dcd43b552cf599045c378df761a_styler(feature) {\n            switch(feature.id) {\n                default:\n                    return {&quot;fillOpacity&quot;: 0.5, &quot;weight&quot;: 2};\n            }\n        }\n        function geo_json_d0214dcd43b552cf599045c378df761a_highlighter(feature) {\n            switch(feature.id) {\n                default:\n                    return {&quot;fillOpacity&quot;: 0.75};\n            }\n        }\n        function geo_json_d0214dcd43b552cf599045c378df761a_pointToLayer(feature, latlng) {\n            var opts = {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;#3388ff&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;#3388ff&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 2, &quot;stroke&quot;: true, &quot;weight&quot;: 3};\n            \n            let style = geo_json_d0214dcd43b552cf599045c378df761a_styler(feature)\n            Object.assign(opts, style)\n            \n            return new L.CircleMarker(latlng, opts)\n        }\n\n        function geo_json_d0214dcd43b552cf599045c378df761a_onEachFeature(feature, layer) {\n            layer.on({\n                mouseout: function(e) {\n                    if(typeof e.target.setStyle === &quot;function&quot;){\n                            geo_json_d0214dcd43b552cf599045c378df761a.resetStyle(e.target);\n                    }\n                },\n                mouseover: function(e) {\n                    if(typeof e.target.setStyle === &quot;function&quot;){\n                        const highlightStyle = geo_json_d0214dcd43b552cf599045c378df761a_highlighter(e.target.feature)\n                        e.target.setStyle(highlightStyle);\n                    }\n                },\n            });\n        };\n        var geo_json_d0214dcd43b552cf599045c378df761a = L.geoJson(null, {\n                onEachFeature: geo_json_d0214dcd43b552cf599045c378df761a_onEachFeature,\n            \n                style: geo_json_d0214dcd43b552cf599045c378df761a_styler,\n                pointToLayer: geo_json_d0214dcd43b552cf599045c378df761a_pointToLayer,\n            ...{\n}\n        });\n\n        function geo_json_d0214dcd43b552cf599045c378df761a_add (data) {\n            geo_json_d0214dcd43b552cf599045c378df761a\n                .addData(data);\n        }\n            geo_json_d0214dcd43b552cf599045c378df761a_add({&quot;bbox&quot;: [-9.008034722874328, 41.457390342414385, -7.672767509277656, 42.45381572715176], &quot;features&quot;: [{&quot;bbox&quot;: [-9.00797080467442, 41.457390342414385, -7.672767509277656, 42.45371580168436], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.848430183404766, 42.45371580168436], [-9.00797080467442, 41.947264306814205], [-9.007911439563484, 41.46481385761268], [-7.6931255155496325, 41.457390342414385], [-7.672767509277656, 42.446131748610206], [-8.848430183404766, 42.45371580168436]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;0&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.007971365615608, 41.457390342414385, -7.672767509277656, 42.45371772227471], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.849889716247207, 42.45371772227471], [-7.672767509277656, 42.446131748610206], [-7.6931255155496325, 41.457390342414385], [-9.007911439563484, 41.46481385761268], [-9.007971365615608, 41.9517670770204], [-8.849889716247207, 42.45371772227471]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;1&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.007967511401409, 41.457390342414385, -7.672767509277656, 42.45370286441643], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.838942899391162, 42.45370286441643], [-9.007967511401409, 41.92080783200299], [-9.007911439563484, 41.46481385761268], [-7.6931255155496325, 41.457390342414385], [-7.672767509277656, 42.446131748610206], [-8.838942899391162, 42.45370286441643]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;2&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.007969933120693, 41.457390342414385, -7.672767509277656, 42.45371124746058], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.845024180762797, 42.45371124746058], [-7.672767509277656, 42.446131748610206], [-7.6931255155496325, 41.457390342414385], [-9.007911439563484, 41.46481385761268], [-9.007969933120693, 41.940266151070205], [-8.845024180762797, 42.45371124746058]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;3&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.008034722874328, 41.4608373743939, -7.674758785682374, 42.45381572715176], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-9.008034722874328, 42.45381572715176], [-9.007911439563484, 41.46481385761268], [-8.043482745698709, 41.4608373743939], [-7.992593492065499, 41.60241000875172], [-7.674758785682374, 42.446154790853136], [-9.008034722874328, 42.45381572715176]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;4&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.008034722874328, 41.46083542576438, -7.674029403641829, 42.45381572715176], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-9.008034722874328, 42.45381572715176], [-7.674029403641829, 42.44614635475656], [-7.992236784466666, 41.602311735287145], [-8.01897814644205, 41.52435779682527], [-8.043248434399132, 41.46083542576438], [-9.007911439563484, 41.46481385761268], [-9.008034722874328, 42.45381572715176]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;5&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.008034722874328, 41.46225189811899, -7.673996326491502, 42.45381572715176], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-9.008034722874328, 42.45381572715176], [-9.007911549061882, 41.4657146888119], [-8.04033513384876, 41.46225189811899], [-7.990947204800816, 41.60023375083485], [-7.6777545896326185, 42.427865623600724], [-7.673996326491502, 42.44614597207328], [-9.008034722874328, 42.45381572715176]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;6&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}, {&quot;bbox&quot;: [-9.008034722874328, 41.4608154385007, -7.673984932883632, 42.45381572715176], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-9.008034722874328, 42.45381572715176], [-7.673984932883632, 42.4461458402537], [-7.674970381774725, 42.43360580605155], [-7.990827054014512, 41.60023312871964], [-8.04084838797365, 41.4608154385007], [-9.007911439563484, 41.46481385761268], [-9.008034722874328, 42.45381572715176]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;7&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}], &quot;type&quot;: &quot;FeatureCollection&quot;});\n\n        \n    \n    geo_json_d0214dcd43b552cf599045c378df761a.bindTooltip(\n    function(layer){\n    let div = L.DomUtil.create(&#x27;div&#x27;);\n    \n    return div\n    }\n    ,{\n  &quot;sticky&quot;: true,\n  &quot;className&quot;: &quot;foliumtooltip&quot;,\n});\n                     \n    \n            geo_json_d0214dcd43b552cf599045c378df761a.addTo(map_47d4641655dcf16d1393e293282f6f47);\n        \n&lt;/script&gt;\n&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>","content_type":"text/html"},"text/plain":{"content":"<folium.folium.Map at 0x7efb987865d0>","content_type":"text/plain"}}}],"key":"zQgjx6Bp6g"}],"key":"Dm95X7qhI4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"postfire_ds = stac_load(\n    items,\n    bands=(\"nir\", \"swir22\"),\n    chunks=chunk,  # <-- use Dask\n    resolution=res,\n    crs=\"EPSG:32629\",\n    groupby=\"datetime\",\n    bbox=bbox,\n)\npostfire_ds = postfire_ds.mean(dim=\"time\")\npostfire_ds","key":"eJV9nQhZfg"},{"type":"output","id":"3Fd6fOzqwg6v8Ksd6_fGf","data":[{"output_type":"execute_result","execution_count":28,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"1ebcf43266c28047eaa973567af29a18","path":"/tutorials/build/1ebcf43266c28047eaa973567af29a18.html"},"text/plain":{"content":"<xarray.Dataset> Size: 95MB\nDimensions:      (y: 2800, x: 2112)\nCoordinates:\n  * y            (y) float64 22kB 4.637e+06 4.636e+06 ... 4.609e+06 4.609e+06\n  * x            (x) float64 17kB 5.726e+05 5.726e+05 ... 5.937e+05 5.937e+05\n    spatial_ref  int32 4B 32629\nData variables:\n    nir          (y, x) float64 47MB dask.array<chunksize=(2800, 2112), meta=np.ndarray>\n    swir22       (y, x) float64 47MB dask.array<chunksize=(2800, 2112), meta=np.ndarray>","content_type":"text/plain"}}}],"key":"awnFulKBYu"}],"key":"AtAY0d1i9e"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"max_poly_pre = poly_pre[[poly_pre.to_crs(epsg=3035).area.argmax()]]\nmax_poly_post = poly_post[[poly_post.to_crs(epsg=3035).area.argmax()]]","key":"N82UMBCcY0"},{"type":"output","id":"32vGfiU4lkC0iCl5BKIRA","data":[],"key":"cACRkX1GiG"}],"key":"EobDEFCLyV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# note we're reprojecting to calculate area, as Geometry is in a geographic CRS. Results from 'area' are incorrect since geopandas doesn't calc spherical geometry!\npoly_pre.area","key":"Yp5A4p3Gzk"},{"type":"output","id":"2bvhHAnoeGnGHA8n64IBT","data":[{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_124/4246389161.py:2: UserWarning: Geometry is in a geographic CRS. Results from 'area' are likely incorrect. Use 'GeoSeries.to_crs()' to re-project geometries to a projected CRS before this operation.\n\n  poly_pre.area\n"},{"output_type":"execute_result","execution_count":30,"metadata":{},"data":{"text/plain":{"content":"0     1.270576\n1     1.271427\n2     1.137933\n3     1.142630\n4     1.264818\n5     1.268189\n6     1.134230\n7     1.134522\n8     1.139294\n9     1.143787\n10    1.267352\n11    1.268840\n12    1.269646\ndtype: float64","content_type":"text/plain"}}}],"key":"cvurxiH1Hf"}],"key":"CumGifb8mH"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"m = max_poly_pre.explore( )\nm = max_poly_post.explore(m=m, color='r')\nm","key":"wT1x0ErF9S"},{"type":"output","id":"I5gknp9od_LnYlIVxkNgD","data":[{"output_type":"execute_result","execution_count":31,"metadata":{},"data":{"text/html":{"content":"<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    \n    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n    \n        &lt;script&gt;\n            L_NO_TOUCH = false;\n            L_DISABLE_3D = false;\n        &lt;/script&gt;\n    \n    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://code.jquery.com/jquery-3.7.1.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n    \n            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n            &lt;style&gt;\n                #map_4fefe0ae2e3eef9cce054614eceb9c3c {\n                    position: relative;\n                    width: 100.0%;\n                    height: 100.0%;\n                    left: 0.0%;\n                    top: 0.0%;\n                }\n                .leaflet-container { font-size: 1rem; }\n            &lt;/style&gt;\n        \n    \n                    &lt;style&gt;\n                        .foliumtooltip {\n                            \n                        }\n                       .foliumtooltip table{\n                            margin: auto;\n                        }\n                        .foliumtooltip tr{\n                            text-align: left;\n                        }\n                        .foliumtooltip th{\n                            padding: 2px; padding-right: 8px;\n                        }\n                    &lt;/style&gt;\n            \n    \n                    &lt;style&gt;\n                        .foliumtooltip {\n                            \n                        }\n                       .foliumtooltip table{\n                            margin: auto;\n                        }\n                        .foliumtooltip tr{\n                            text-align: left;\n                        }\n                        .foliumtooltip th{\n                            padding: 2px; padding-right: 8px;\n                        }\n                    &lt;/style&gt;\n            \n&lt;/head&gt;\n&lt;body&gt;\n    \n    \n            &lt;div class=&quot;folium-map&quot; id=&quot;map_4fefe0ae2e3eef9cce054614eceb9c3c&quot; &gt;&lt;/div&gt;\n        \n&lt;/body&gt;\n&lt;script&gt;\n    \n    \n            var map_4fefe0ae2e3eef9cce054614eceb9c3c = L.map(\n                &quot;map_4fefe0ae2e3eef9cce054614eceb9c3c&quot;,\n                {\n                    center: [41.95555435013027, -8.34036971943747],\n                    crs: L.CRS.EPSG3857,\n                    ...{\n  &quot;zoom&quot;: 10,\n  &quot;zoomControl&quot;: true,\n  &quot;preferCanvas&quot;: false,\n}\n\n                }\n            );\n            L.control.scale().addTo(map_4fefe0ae2e3eef9cce054614eceb9c3c);\n\n            \n\n        \n    \n            var tile_layer_d4369dc8692fa1c5e05efccd1ce048fb = L.tileLayer(\n                &quot;https://tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n                {\n  &quot;minZoom&quot;: 0,\n  &quot;maxZoom&quot;: 19,\n  &quot;maxNativeZoom&quot;: 19,\n  &quot;noWrap&quot;: false,\n  &quot;attribution&quot;: &quot;\\u0026copy; \\u003ca href=\\&quot;https://www.openstreetmap.org/copyright\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e contributors&quot;,\n  &quot;subdomains&quot;: &quot;abc&quot;,\n  &quot;detectRetina&quot;: false,\n  &quot;tms&quot;: false,\n  &quot;opacity&quot;: 1,\n}\n\n            );\n        \n    \n            tile_layer_d4369dc8692fa1c5e05efccd1ce048fb.addTo(map_4fefe0ae2e3eef9cce054614eceb9c3c);\n        \n    \n            map_4fefe0ae2e3eef9cce054614eceb9c3c.fitBounds(\n                [[41.457390342414385, -9.007971929597284], [42.45371835784616, -7.672767509277656]],\n                {}\n            );\n        \n    \n        function geo_json_bd9a251ffef23fd7211db6e56b32639d_styler(feature) {\n            switch(feature.id) {\n                default:\n                    return {&quot;fillOpacity&quot;: 0.5, &quot;weight&quot;: 2};\n            }\n        }\n        function geo_json_bd9a251ffef23fd7211db6e56b32639d_highlighter(feature) {\n            switch(feature.id) {\n                default:\n                    return {&quot;fillOpacity&quot;: 0.75};\n            }\n        }\n        function geo_json_bd9a251ffef23fd7211db6e56b32639d_pointToLayer(feature, latlng) {\n            var opts = {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;#3388ff&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;#3388ff&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 2, &quot;stroke&quot;: true, &quot;weight&quot;: 3};\n            \n            let style = geo_json_bd9a251ffef23fd7211db6e56b32639d_styler(feature)\n            Object.assign(opts, style)\n            \n            return new L.CircleMarker(latlng, opts)\n        }\n\n        function geo_json_bd9a251ffef23fd7211db6e56b32639d_onEachFeature(feature, layer) {\n            layer.on({\n                mouseout: function(e) {\n                    if(typeof e.target.setStyle === &quot;function&quot;){\n                            geo_json_bd9a251ffef23fd7211db6e56b32639d.resetStyle(e.target);\n                    }\n                },\n                mouseover: function(e) {\n                    if(typeof e.target.setStyle === &quot;function&quot;){\n                        const highlightStyle = geo_json_bd9a251ffef23fd7211db6e56b32639d_highlighter(e.target.feature)\n                        e.target.setStyle(highlightStyle);\n                    }\n                },\n            });\n        };\n        var geo_json_bd9a251ffef23fd7211db6e56b32639d = L.geoJson(null, {\n                onEachFeature: geo_json_bd9a251ffef23fd7211db6e56b32639d_onEachFeature,\n            \n                style: geo_json_bd9a251ffef23fd7211db6e56b32639d_styler,\n                pointToLayer: geo_json_bd9a251ffef23fd7211db6e56b32639d_pointToLayer,\n            ...{\n}\n        });\n\n        function geo_json_bd9a251ffef23fd7211db6e56b32639d_add (data) {\n            geo_json_bd9a251ffef23fd7211db6e56b32639d\n                .addData(data);\n        }\n            geo_json_bd9a251ffef23fd7211db6e56b32639d_add({&quot;bbox&quot;: [-9.007971929597284, 41.457390342414385, -7.672767509277656, 42.45371835784616], &quot;features&quot;: [{&quot;bbox&quot;: [-9.007971929597284, 41.457390342414385, -7.672767509277656, 42.45371835784616], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.8503758474949, 42.45371835784616], [-7.672767509277656, 42.446131748610206], [-7.6931255155496325, 41.457390342414385], [-9.007911439563484, 41.46481385761268], [-9.007971929597284, 41.956293214572526], [-8.8503758474949, 42.45371835784616]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;1&quot;, &quot;properties&quot;: {}, &quot;type&quot;: &quot;Feature&quot;}], &quot;type&quot;: &quot;FeatureCollection&quot;});\n\n        \n    \n    geo_json_bd9a251ffef23fd7211db6e56b32639d.bindTooltip(\n    function(layer){\n    let div = L.DomUtil.create(&#x27;div&#x27;);\n    \n    return div\n    }\n    ,{\n  &quot;sticky&quot;: true,\n  &quot;className&quot;: &quot;foliumtooltip&quot;,\n});\n                     \n    \n            geo_json_bd9a251ffef23fd7211db6e56b32639d.addTo(map_4fefe0ae2e3eef9cce054614eceb9c3c);\n        \n    \n        function geo_json_131beffdb63935eb628398fd486317a9_styler(feature) {\n            switch(feature.id) {\n                default:\n                    return {&quot;color&quot;: &quot;r&quot;, &quot;fillColor&quot;: &quot;r&quot;, &quot;fillOpacity&quot;: 0.5, &quot;weight&quot;: 2};\n            }\n        }\n        function geo_json_131beffdb63935eb628398fd486317a9_highlighter(feature) {\n            switch(feature.id) {\n                default:\n                    return {&quot;fillOpacity&quot;: 0.75};\n            }\n        }\n        function geo_json_131beffdb63935eb628398fd486317a9_pointToLayer(feature, latlng) {\n            var opts = {&quot;bubblingMouseEvents&quot;: true, &quot;color&quot;: &quot;#3388ff&quot;, &quot;dashArray&quot;: null, &quot;dashOffset&quot;: null, &quot;fill&quot;: true, &quot;fillColor&quot;: &quot;#3388ff&quot;, &quot;fillOpacity&quot;: 0.2, &quot;fillRule&quot;: &quot;evenodd&quot;, &quot;lineCap&quot;: &quot;round&quot;, &quot;lineJoin&quot;: &quot;round&quot;, &quot;opacity&quot;: 1.0, &quot;radius&quot;: 2, &quot;stroke&quot;: true, &quot;weight&quot;: 3};\n            \n            let style = geo_json_131beffdb63935eb628398fd486317a9_styler(feature)\n            Object.assign(opts, style)\n            \n            return new L.CircleMarker(latlng, opts)\n        }\n\n        function geo_json_131beffdb63935eb628398fd486317a9_onEachFeature(feature, layer) {\n            layer.on({\n                mouseout: function(e) {\n                    if(typeof e.target.setStyle === &quot;function&quot;){\n                            geo_json_131beffdb63935eb628398fd486317a9.resetStyle(e.target);\n                    }\n                },\n                mouseover: function(e) {\n                    if(typeof e.target.setStyle === &quot;function&quot;){\n                        const highlightStyle = geo_json_131beffdb63935eb628398fd486317a9_highlighter(e.target.feature)\n                        e.target.setStyle(highlightStyle);\n                    }\n                },\n            });\n        };\n        var geo_json_131beffdb63935eb628398fd486317a9 = L.geoJson(null, {\n                onEachFeature: geo_json_131beffdb63935eb628398fd486317a9_onEachFeature,\n            \n                style: geo_json_131beffdb63935eb628398fd486317a9_styler,\n                pointToLayer: geo_json_131beffdb63935eb628398fd486317a9_pointToLayer,\n            ...{\n}\n        });\n\n        function geo_json_131beffdb63935eb628398fd486317a9_add (data) {\n            geo_json_131beffdb63935eb628398fd486317a9\n                .addData(data);\n        }\n            geo_json_131beffdb63935eb628398fd486317a9_add({&quot;bbox&quot;: [-9.007971365615608, 41.457390342414385, -7.672767509277656, 42.45371772227471], &quot;features&quot;: [{&quot;bbox&quot;: [-9.007971365615608, 41.457390342414385, -7.672767509277656, 42.45371772227471], &quot;geometry&quot;: {&quot;coordinates&quot;: [[[-8.849889716247207, 42.45371772227471], [-7.672767509277656, 42.446131748610206], [-7.6931255155496325, 41.457390342414385], [-9.007911439563484, 41.46481385761268], [-9.007971365615608, 41.9517670770204], [-8.849889716247207, 42.45371772227471]]], &quot;type&quot;: &quot;Polygon&quot;}, &quot;id&quot;: &quot;1&quot;, &quot;properties&quot;: {&quot;__folium_color&quot;: &quot;r&quot;}, &quot;type&quot;: &quot;Feature&quot;}], &quot;type&quot;: &quot;FeatureCollection&quot;});\n\n        \n    \n    geo_json_131beffdb63935eb628398fd486317a9.bindTooltip(\n    function(layer){\n    let div = L.DomUtil.create(&#x27;div&#x27;);\n    \n    return div\n    }\n    ,{\n  &quot;sticky&quot;: true,\n  &quot;className&quot;: &quot;foliumtooltip&quot;,\n});\n                     \n    \n            geo_json_131beffdb63935eb628398fd486317a9.addTo(map_4fefe0ae2e3eef9cce054614eceb9c3c);\n        \n&lt;/script&gt;\n&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>","content_type":"text/html"},"text/plain":{"content":"<folium.folium.Map at 0x7efb9890eb10>","content_type":"text/plain"}}}],"key":"nfe7T3ZbEE"}],"key":"Vwp0Hd1yqV"},{"type":"block","kind":"notebook-content","children":[{"type":"blockquote","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"y5Tvoo2toW"}],"key":"aYyjWDM6W4"},{"type":"text","value":" The above STAC API query might return assets that intersect the region but do not fully cover it. I.e. if we fetched only one asset for each period with the above query they could potentially point to different regions (as there would be data missing). Although not relevant in this example, as all assets from both pre and after overlap, this will be a problem if not checked (as you’d be analysing different regions). In this example we visually inspect the overlap between assets and further take the mean of all the assets to get better quality pixels across time. Rerun the same example with cloud_cover = 0.2 to see where you might get some problem code!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"j3ACKrAafo"}],"key":"gaNP5E314o"}],"key":"OeqCgqLPfY"}],"key":"cAv7Mj7hLH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculating the NBR index","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rm78jqscIj"}],"identifier":"calculating-the-nbr-index","label":"Calculating the NBR index","html_id":"calculating-the-nbr-index","implicit":true,"key":"KRK3llX3ut"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In the next step we will calculate our index, using simple band math as explained in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eM8qpFcFoE"},{"type":"link","url":"/xarray101","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"xarray 101 guide","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DZH2gi6SFV"}],"urlSource":"../pangeo101/xarray101.ipynb","dataUrl":"/xarray101.json","internal":true,"protocol":"file","key":"QcPu8qFBSu"},{"type":"text","value":". We first define a function that calculates our index given a dataset with nir/swir22 band data and then add the additional variable to our pre-fire/post-fire datasets","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QYwHMaWXEC"}],"key":"aoSFX1JAzK"}],"key":"mgzZb601Zp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"index_name = 'NBR'\n\n# Normalised Burn Ratio, Lopez Garcia 1991\ndef calc_nbr(ds):\n    return (ds.nir - ds.swir22) / (ds.nir + ds.swir22)\n\nindex_dict = {'NBR': calc_nbr}\nindex_dict","key":"PwyDZHgyza"},{"type":"output","id":"weB0ErGhvoSjkilYVYwDT","data":[{"output_type":"execute_result","execution_count":32,"metadata":{},"data":{"text/plain":{"content":"{'NBR': <function __main__.calc_nbr(ds)>}","content_type":"text/plain"}}}],"key":"bGBkzFpcBE"}],"key":"xZGf49IWxC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# prefire - calls the calc_nbr function with our dataset as input to create a new NBR index (dict) and assigns it as the NBR index \n# note that we have to apply scaling (1000) and offset (0) to our band data - as defined in the dataset collection\nprefire_ds[index_name] = index_dict[index_name](prefire_ds / 10000.0) \n\n# postfire - calls the calc_nbr function with our dataset as input to create a new NBR index (dict) and assigns it as the NBR index \n# note that we have to apply scaling (1000) and offset (0) to our band data - as defined in the dataset collection\npostfire_ds[index_name] = index_dict[index_name](postfire_ds / 10000.0)","key":"wyNkuaiRoj"},{"type":"output","id":"_81IxwWs9bhPRWzL2IKQp","data":[],"key":"e8cUZtpVfZ"}],"key":"vzl6LzI6DD"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now that we have the indecies calculated we can calculate the difference in burnt area between the two periods to analyse which regions have been burnt.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xu3IKBKcbb"}],"key":"KwezYh9Gzv"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Note that at this point we haven’t actually loaded the data or done the calculations, we’ve just defined a task graph for dask to execute. When we call persist() the graph up to that point will be executed and the data saved for in the distributed memory of our workers. We do this at this stage to avoid fetching the data multiple times in future computations.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"q8mHcIrPCi"}],"key":"bfg8Ci5XvY"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We then save our result (which is a dataarray) in a new dataset: dnbr_dataset.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"KQge97rBY1"}],"key":"c4ORKhJtM7"}],"key":"sEcw7XDf4E"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# calculate delta NBR\nprefire_burnratio = prefire_ds.NBR.persist() # <--- load and keep data into your workers\npostfire_burnratio = postfire_ds.NBR.persist() # <--- load and keep data into your workers\n\ndelta_NBR = prefire_burnratio - postfire_burnratio\n\ndnbr_dataset = delta_NBR.to_dataset(name='delta_NBR').persist()","key":"wqCs64t2WA"},{"type":"output","id":"lBogCsnPlqYzsZJpgpQCZ","data":[],"key":"UM07TW2vyd"}],"key":"koKluzHyTu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dnbr_dataset\ndelta_NBR","key":"KW2RYlSsBq"},{"type":"output","id":"FLaklb96QszZKw2vckxDj","data":[{"output_type":"execute_result","execution_count":35,"metadata":{},"data":{"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1f1f1f;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;NBR&#x27; (y: 2800, x: 2112)&gt; Size: 47MB\ndask.array&lt;sub, shape=(2800, 2112), dtype=float64, chunksize=(2800, 2112), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * y            (y) float64 22kB 4.637e+06 4.636e+06 ... 4.609e+06 4.609e+06\n  * x            (x) float64 17kB 5.726e+05 5.726e+05 ... 5.937e+05 5.937e+05\n    spatial_ref  int32 4B 32629</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'NBR'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>y</span>: 2800</li><li><span class='xr-has-index'>x</span>: 2112</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-63eb855c-4e2d-442b-ad01-121ba37a8234' class='xr-array-in' type='checkbox' checked><label for='section-63eb855c-4e2d-442b-ad01-121ba37a8234' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>dask.array&lt;chunksize=(2800, 2112), meta=np.ndarray&gt;</span></div><div class='xr-array-data'><table>\n    <tr>\n        <td>\n            <table style=\"border-collapse: collapse;\">\n                <thead>\n                    <tr>\n                        <td> </td>\n                        <th> Array </th>\n                        <th> Chunk </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                    <tr>\n                        <th> Bytes </th>\n                        <td> 45.12 MiB </td>\n                        <td> 45.12 MiB </td>\n                    </tr>\n                    \n                    <tr>\n                        <th> Shape </th>\n                        <td> (2800, 2112) </td>\n                        <td> (2800, 2112) </td>\n                    </tr>\n                    <tr>\n                        <th> Dask graph </th>\n                        <td colspan=\"2\"> 1 chunks in 3 graph layers </td>\n                    </tr>\n                    <tr>\n                        <th> Data type </th>\n                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n        <td>\n        <svg width=\"140\" height=\"170\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n\n  <!-- Horizontal lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"90\" y2=\"0\" style=\"stroke-width:2\" />\n  <line x1=\"0\" y1=\"120\" x2=\"90\" y2=\"120\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"120\" style=\"stroke-width:2\" />\n  <line x1=\"90\" y1=\"0\" x2=\"90\" y2=\"120\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"0.0,0.0 90.51428571428572,0.0 90.51428571428572,120.0 0.0,120.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Text -->\n  <text x=\"45.257143\" y=\"140.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >2112</text>\n  <text x=\"110.514286\" y=\"60.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,110.514286,60.000000)\">2800</text>\n</svg>\n        </td>\n    </tr>\n</table></div></div></li><li class='xr-section-item'><input id='section-f1b586a8-63ef-40dd-8bd4-ac6e2680b206' class='xr-section-summary-in' type='checkbox'  checked><label for='section-f1b586a8-63ef-40dd-8bd4-ac6e2680b206' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>4.637e+06 4.636e+06 ... 4.609e+06</div><input id='attrs-325f8153-1a67-449c-9f80-5aa2c49e5a33' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-325f8153-1a67-449c-9f80-5aa2c49e5a33' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-339b34df-7fb2-4134-825e-ced5d1131868' class='xr-var-data-in' type='checkbox'><label for='data-339b34df-7fb2-4134-825e-ced5d1131868' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>metre</dd><dt><span>resolution :</span></dt><dd>-10.0</dd><dt><span>crs :</span></dt><dd>EPSG:32629</dd></dl></div><div class='xr-var-data'><pre>array([4636505., 4636495., 4636485., ..., 4608535., 4608525., 4608515.],\n      shape=(2800,))</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.726e+05 5.726e+05 ... 5.937e+05</div><input id='attrs-0c0d58e7-91d8-4ada-916b-6d2e12602bef' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-0c0d58e7-91d8-4ada-916b-6d2e12602bef' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7e5f7955-3d9f-4658-b8dd-8b8d3d7506a6' class='xr-var-data-in' type='checkbox'><label for='data-7e5f7955-3d9f-4658-b8dd-8b8d3d7506a6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>metre</dd><dt><span>resolution :</span></dt><dd>10.0</dd><dt><span>crs :</span></dt><dd>EPSG:32629</dd></dl></div><div class='xr-var-data'><pre>array([572605., 572615., 572625., ..., 593695., 593705., 593715.],\n      shape=(2112,))</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>spatial_ref</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int32</div><div class='xr-var-preview xr-preview'>32629</div><input id='attrs-8606b087-3a78-48ca-a868-722643444bec' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-8606b087-3a78-48ca-a868-722643444bec' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-19e677dd-4898-4f9a-9fb2-3b565ac5371d' class='xr-var-data-in' type='checkbox'><label for='data-19e677dd-4898-4f9a-9fb2-3b565ac5371d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>spatial_ref :</span></dt><dd>PROJCRS[&quot;WGS 84 / UTM zone 29N&quot;,BASEGEOGCRS[&quot;WGS 84&quot;,ENSEMBLE[&quot;World Geodetic System 1984 ensemble&quot;,MEMBER[&quot;World Geodetic System 1984 (Transit)&quot;],MEMBER[&quot;World Geodetic System 1984 (G730)&quot;],MEMBER[&quot;World Geodetic System 1984 (G873)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1150)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1674)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1762)&quot;],MEMBER[&quot;World Geodetic System 1984 (G2139)&quot;],MEMBER[&quot;World Geodetic System 1984 (G2296)&quot;],ELLIPSOID[&quot;WGS 84&quot;,6378137,298.257223563,LENGTHUNIT[&quot;metre&quot;,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[&quot;Greenwich&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433]],ID[&quot;EPSG&quot;,4326]],CONVERSION[&quot;UTM zone 29N&quot;,METHOD[&quot;Transverse Mercator&quot;,ID[&quot;EPSG&quot;,9807]],PARAMETER[&quot;Latitude of natural origin&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8801]],PARAMETER[&quot;Longitude of natural origin&quot;,-9,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8802]],PARAMETER[&quot;Scale factor at natural origin&quot;,0.9996,SCALEUNIT[&quot;unity&quot;,1],ID[&quot;EPSG&quot;,8805]],PARAMETER[&quot;False easting&quot;,500000,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8806]],PARAMETER[&quot;False northing&quot;,0,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8807]]],CS[Cartesian,2],AXIS[&quot;(E)&quot;,east,ORDER[1],LENGTHUNIT[&quot;metre&quot;,1]],AXIS[&quot;(N)&quot;,north,ORDER[2],LENGTHUNIT[&quot;metre&quot;,1]],USAGE[SCOPE[&quot;Navigation and medium accuracy spatial referencing.&quot;],AREA[&quot;Between 12°W and 6°W, northern hemisphere between equator and 84°N, onshore and offshore. Algeria. Côte D&#x27;Ivoire (Ivory Coast). Faroe Islands. Guinea. Ireland. Jan Mayen. Liberia, Mali. Mauritania. Morocco. Portugal. Sierra Leone. Spain. United Kingdom (UK). Western Sahara.&quot;],BBOX[0,-12.01,84.01,-6]],ID[&quot;EPSG&quot;,32629]]</dd><dt><span>crs_wkt :</span></dt><dd>PROJCRS[&quot;WGS 84 / UTM zone 29N&quot;,BASEGEOGCRS[&quot;WGS 84&quot;,ENSEMBLE[&quot;World Geodetic System 1984 ensemble&quot;,MEMBER[&quot;World Geodetic System 1984 (Transit)&quot;],MEMBER[&quot;World Geodetic System 1984 (G730)&quot;],MEMBER[&quot;World Geodetic System 1984 (G873)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1150)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1674)&quot;],MEMBER[&quot;World Geodetic System 1984 (G1762)&quot;],MEMBER[&quot;World Geodetic System 1984 (G2139)&quot;],MEMBER[&quot;World Geodetic System 1984 (G2296)&quot;],ELLIPSOID[&quot;WGS 84&quot;,6378137,298.257223563,LENGTHUNIT[&quot;metre&quot;,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[&quot;Greenwich&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433]],ID[&quot;EPSG&quot;,4326]],CONVERSION[&quot;UTM zone 29N&quot;,METHOD[&quot;Transverse Mercator&quot;,ID[&quot;EPSG&quot;,9807]],PARAMETER[&quot;Latitude of natural origin&quot;,0,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8801]],PARAMETER[&quot;Longitude of natural origin&quot;,-9,ANGLEUNIT[&quot;degree&quot;,0.0174532925199433],ID[&quot;EPSG&quot;,8802]],PARAMETER[&quot;Scale factor at natural origin&quot;,0.9996,SCALEUNIT[&quot;unity&quot;,1],ID[&quot;EPSG&quot;,8805]],PARAMETER[&quot;False easting&quot;,500000,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8806]],PARAMETER[&quot;False northing&quot;,0,LENGTHUNIT[&quot;metre&quot;,1],ID[&quot;EPSG&quot;,8807]]],CS[Cartesian,2],AXIS[&quot;(E)&quot;,east,ORDER[1],LENGTHUNIT[&quot;metre&quot;,1]],AXIS[&quot;(N)&quot;,north,ORDER[2],LENGTHUNIT[&quot;metre&quot;,1]],USAGE[SCOPE[&quot;Navigation and medium accuracy spatial referencing.&quot;],AREA[&quot;Between 12°W and 6°W, northern hemisphere between equator and 84°N, onshore and offshore. Algeria. Côte D&#x27;Ivoire (Ivory Coast). Faroe Islands. Guinea. Ireland. Jan Mayen. Liberia, Mali. Mauritania. Morocco. Portugal. Sierra Leone. Spain. United Kingdom (UK). Western Sahara.&quot;],BBOX[0,-12.01,84.01,-6]],ID[&quot;EPSG&quot;,32629]]</dd><dt><span>semi_major_axis :</span></dt><dd>6378137.0</dd><dt><span>semi_minor_axis :</span></dt><dd>6356752.314245179</dd><dt><span>inverse_flattening :</span></dt><dd>298.257223563</dd><dt><span>reference_ellipsoid_name :</span></dt><dd>WGS 84</dd><dt><span>longitude_of_prime_meridian :</span></dt><dd>0.0</dd><dt><span>prime_meridian_name :</span></dt><dd>Greenwich</dd><dt><span>geographic_crs_name :</span></dt><dd>WGS 84</dd><dt><span>horizontal_datum_name :</span></dt><dd>World Geodetic System 1984 ensemble</dd><dt><span>projected_crs_name :</span></dt><dd>WGS 84 / UTM zone 29N</dd><dt><span>grid_mapping_name :</span></dt><dd>transverse_mercator</dd><dt><span>latitude_of_projection_origin :</span></dt><dd>0.0</dd><dt><span>longitude_of_central_meridian :</span></dt><dd>-9.0</dd><dt><span>false_easting :</span></dt><dd>500000.0</dd><dt><span>false_northing :</span></dt><dd>0.0</dd><dt><span>scale_factor_at_central_meridian :</span></dt><dd>0.9996</dd><dt><span>GeoTransform :</span></dt><dd>572600 10 0 4636510 0 -10</dd></dl></div><div class='xr-var-data'><pre>array(32629, dtype=int32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-4c7f12bb-8c4b-48b8-99d7-82b4e5460c64' class='xr-section-summary-in' type='checkbox'  ><label for='section-4c7f12bb-8c4b-48b8-99d7-82b4e5460c64' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-71448c8d-7767-4083-a517-4cb75d3562b2' class='xr-index-data-in' type='checkbox'/><label for='index-71448c8d-7767-4083-a517-4cb75d3562b2' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([4636505.0, 4636495.0, 4636485.0, 4636475.0, 4636465.0, 4636455.0,\n       4636445.0, 4636435.0, 4636425.0, 4636415.0,\n       ...\n       4608605.0, 4608595.0, 4608585.0, 4608575.0, 4608565.0, 4608555.0,\n       4608545.0, 4608535.0, 4608525.0, 4608515.0],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=2800))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-de6ecaff-c04a-43e4-ad29-979f7f3cab8a' class='xr-index-data-in' type='checkbox'/><label for='index-de6ecaff-c04a-43e4-ad29-979f7f3cab8a' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([572605.0, 572615.0, 572625.0, 572635.0, 572645.0, 572655.0, 572665.0,\n       572675.0, 572685.0, 572695.0,\n       ...\n       593625.0, 593635.0, 593645.0, 593655.0, 593665.0, 593675.0, 593685.0,\n       593695.0, 593705.0, 593715.0],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=2112))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-74f9b154-a133-47e1-b62a-20b9bfc1ac0a' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-74f9b154-a133-47e1-b62a-20b9bfc1ac0a' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"},"text/plain":{"content":"<xarray.DataArray 'NBR' (y: 2800, x: 2112)> Size: 47MB\ndask.array<sub, shape=(2800, 2112), dtype=float64, chunksize=(2800, 2112), chunktype=numpy.ndarray>\nCoordinates:\n  * y            (y) float64 22kB 4.637e+06 4.636e+06 ... 4.609e+06 4.609e+06\n  * x            (x) float64 17kB 5.726e+05 5.726e+05 ... 5.937e+05 5.937e+05\n    spatial_ref  int32 4B 32629","content_type":"text/plain"}}}],"key":"qEHAbAiDoD"}],"key":"Lxy4xlkd7A"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting and visualization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KawoYKNtSE"}],"identifier":"plotting-and-visualization","label":"Plotting and visualization","html_id":"plotting-and-visualization","implicit":true,"key":"DHrWVjEYo7"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We will now plot our data from before, after and the delta of our wildfire event to further analyse. Note that, this will trigger the execution of our dask task graph. The Pangeo stack offers many tools for visualization! In the example below we will showcase plotting with Cartopy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"peCQX8KTGU"}],"key":"bCZTZPbDSC"}],"key":"ZGrr7PM4jz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting Before","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JXs2HueIg1"}],"identifier":"plotting-before","label":"Plotting Before","html_id":"plotting-before","implicit":true,"key":"wZPaDj7Nnc"}],"key":"vThDkkS8R0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(1, figsize=[7, 10])\n\n# We're using cartopy and are plotting in PlateCarree projection \n# (see documentation on cartopy)\nax = plt.subplot(1, 1, 1, projection=ccrs.PlateCarree())\nax.coastlines(resolution='10m')\nax.gridlines(draw_labels=True)\n\n# We need to project our data to the new Orthographic projection and for this we use `transform`.\n# we set the original data projection in transform (here Mercator)\nprefire_burnratio.plot(ax=ax, transform=ccrs.epsg(prefire_burnratio.spatial_ref.values), cmap='RdBu_r',\n                       cbar_kwargs={'orientation':'horizontal','shrink':0.95})\n\n# One way to customize your title\nplt.title(\"Pre-Fire: \" + time_range_start, fontsize=18)","key":"jHxTmfWAs7"},{"type":"output","id":"IEHug4MDgg1YxKdgR_hRa","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"7be30b4d4e73df3c30aa947c787be71c","path":"/tutorials/build/7be30b4d4e73df3c30aa947c787be71c.png"},"text/plain":{"content":"<Figure size 700x1000 with 2 Axes>","content_type":"text/plain"}}}],"key":"Pr7kD4nruK"}],"key":"nfmW9f5dR5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting After","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Pw0n1ifgNH"}],"identifier":"plotting-after","label":"Plotting After","html_id":"plotting-after","implicit":true,"key":"yrAUwmxcg4"}],"key":"gLahlyjqHD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(1, figsize=[7, 9])\n\n# We're using cartopy and are plotting in PlateCarree projection \n# (see documentation on cartopy)\nax = plt.subplot(1, 1, 1, projection=ccrs.PlateCarree())\nax.coastlines(resolution='10m')\nax.gridlines(draw_labels=True)\n\n# We need to project our data to the new Orthographic projection and for this we use `transform`.\n# we set the original data projection in transform (here Mercator)\npostfire_burnratio.plot(ax=ax, transform=ccrs.epsg(postfire_burnratio.spatial_ref.values), cmap='RdBu_r',\n                        cbar_kwargs={'orientation':'horizontal','shrink':0.95})\n\n# One way to customize your title\nplt.title(\"Post-Fire: \" + time_range_end, fontsize=18)","key":"r8GjITinb7"},{"type":"output","id":"b9fxXvM7BpJ9sjhFLKk1u","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"53f6593692fa13250ccdbfa9408e7ea7","path":"/tutorials/build/53f6593692fa13250ccdbfa9408e7ea7.png"},"text/plain":{"content":"<Figure size 700x900 with 2 Axes>","content_type":"text/plain"}}}],"key":"KeS1vshkwm"}],"key":"TiRHyb71tz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting Delta","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nLtN06PDfV"}],"identifier":"plotting-delta","label":"Plotting Delta","html_id":"plotting-delta","implicit":true,"key":"uUWeCAOkje"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The plot below highligths the burnt regions","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wDEE3L9YHr"}],"key":"YE7M3khMoy"}],"key":"b3z2pu8JB3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(1, figsize=[7, 10])\n\n# We're using cartopy and are plotting in PlateCarree projection \n# (see documentation on cartopy)\nax = plt.subplot(1, 1, 1, projection=ccrs.PlateCarree())\nax.coastlines(resolution='10m')\nax.gridlines(draw_labels=True)\n\n# We need to project our data to the new Orthographic projection and for this we use `transform`.\n# we set the original data projection in transform (here Mercator)\ndnbr_dataset.delta_NBR.plot(ax=ax, transform=ccrs.epsg(dnbr_dataset.delta_NBR.spatial_ref.values), cmap='RdBu_r',\n                            cbar_kwargs={'orientation':'horizontal','shrink':0.95})\n\n# One way to customize your title\nplt.title( \"Delta NBR\", fontsize=18)","key":"FEjprrUZXJ"},{"type":"output","id":"pDPhy_dmfO2DbeiLxJ0LF","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d2632a904bbe679e2b1a95ff65cedb2f","path":"/tutorials/build/d2632a904bbe679e2b1a95ff65cedb2f.png"},"text/plain":{"content":"<Figure size 700x1000 with 2 Axes>","content_type":"text/plain"}}}],"key":"jYnO1KjWXL"}],"key":"xov5LocAiz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Analysing Burnt Areas","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gu9BEwlgNC"}],"identifier":"analysing-burnt-areas","label":"Analysing Burnt Areas","html_id":"analysing-burnt-areas","implicit":true,"key":"Gj7bohi2WK"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Great, now that we’ve calculated the delta NBR (dNBR), we can estimate the amount of area that was burned. First we need to classify which pixels are actually burned and then calculate the area that was burned.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JZyapvVrvL"}],"key":"VqZSYohvJi"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To classify burned area we can use the dNBR reference ratio ratios described in: ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pQFOoxnjm3"},{"type":"link","url":"https://un-spider.org/advisory-support/recommended-practices/recommended-practice-burn-severity/in-detail/normalized-burn-ratio","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"https://​un​-spider​.org​/advisory​-support​/recommended​-practices​/recommended​-practice​-burn​-severity​/in​-detail​/normalized​-burn​-ratio","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AOnyA9q30C"}],"urlSource":"https://un-spider.org/advisory-support/recommended-practices/recommended-practice-burn-severity/in-detail/normalized-burn-ratio","key":"m9GTtNlPxx"},{"type":"text","value":" - and estimate the low to severe burnt areas. ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mFDIistCZl"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"i.e. the areas with a dNBR of above 0.270","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kqWyL9LwMG"}],"key":"OcXciJ7Vcx"}],"key":"hdYqARV30A"},{"type":"image","url":"/tutorials/build/2abbd18d64e70642d7c0e83666723e68.png","alt":"img","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"j4JKZAPWOA","urlSource":"https://un-spider.org/sites/default/files/table+legend.PNG"}],"key":"WcKSaFpvwH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"BURN_THRESH = 0.270\nburn_mask = dnbr_dataset.delta_NBR > BURN_THRESH           # True/False mask, same shape as raster\nburn_mask.plot()\n\n# save the burn_mask to our dataset\ndnbr_dataset['burned_ha_mask'] = burn_mask","key":"lTPnEVss9O"},{"type":"output","id":"0RKQNIB3JG-DZj6ukdXmh","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"05e486b3a121a09ae774eedfbb4b2d3a","path":"/tutorials/build/05e486b3a121a09ae774eedfbb4b2d3a.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"h4NXtK709T"}],"key":"dyMFehJgSl"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Simple Validation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yerie59RsE"}],"identifier":"simple-validation","label":"Simple Validation","html_id":"simple-validation","implicit":true,"key":"DO0isb91Vs"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now with the above a data mask where all pixels classified as burnt are 1 and the non burnt ones are 0. To calculate burnt area, we simply sum all pixels and multiply them by the area which a pixel covers (i.e. the resolution, which in our case is 10m/p).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Qs83m1NkrW"}],"key":"wQKG39w7oV"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"At the same step we will convert our metric to hectares (ha) so that we can compare and validate our findings against the original GWIS data.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BlCH3cP0xE"}],"key":"zDGp5Xi7vE"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Note that in an actual study, the ground truth data and validation would involve field studies and more precise validation, but we simplify the example for the training.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"lD2ZYQJqcP"}],"key":"Q4GVNjIW1E"}],"key":"cHm8HQhEk4"}],"key":"cyys9gndnW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"","key":"X4Z5eah5h4"},{"type":"output","id":"9LLfntIcypqTwIe2XRhMu","data":[],"key":"fEjW9Di4ik"}],"key":"ftlA1PxfKn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dx, dy = dnbr_dataset.delta_NBR.rio.resolution()\npixel_area_ha = abs(dx * dy) / 1e4       # 10m × 10m = 0.01 ha\n\npixels_burned   = burn_mask.sum().compute().item()   # integer number of burned pixels\nburned_area_ha  = pixels_burned * pixel_area_ha\n\nprint(f\"Burned area   : {burned_area_ha:,.2f} ha\")\nprint(f\"Actual Burned Area : {biggest_fire_aoi.sum().compute():,.2f}, ha\")","key":"ygKeYizKo1"},{"type":"output","id":"XxrZepNIeLC0pviIFiduv","data":[{"name":"stdout","output_type":"stream","text":"Burned area   : 2,373.14 ha\nActual Burned Area : 2,214.27, ha\n"}],"key":"CPMY0Xf3Rs"}],"key":"DWMrmSl4yI"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"There’s only a difference of about 100 ha, which, given our simple analysis, is actually quite accurate!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"afOeFLMuAY"}],"key":"ErD168mrQ3"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"note this is based on the geojson feature in the github repo","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ak7IM2uVBp"}],"key":"B5LCVsIufF"},{"type":"text","value":" with the following result:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CG57GJ5HIE"}],"key":"P7s5TyaCLw"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Burned area   : 2,373.14 ha","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RWCBYdduBL"}],"key":"tIevsEifXj"}],"key":"IV15sPfdpr"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Actual Burned Area : 2,214.27, ha","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QRHhbVnKnb"}],"key":"k5Lz8iSiW4"}],"key":"BVoiJJogJf"}],"key":"yfhQDktHcp"},{"type":"heading","depth":3,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Plotting and Analysing Final Results","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"h5ZTiHxeSi"}],"identifier":"plotting-and-analysing-final-results","label":"Plotting and Analysing Final Results","html_id":"plotting-and-analysing-final-results","implicit":true,"key":"RJZJD1GKdA"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"We can visually inspect our plot to see if our data follows the same trends as our ground truth GWIS dataset.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"jtEouHwbTK"}],"key":"ElXgQhshfC"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"To achieve this though, we need to reproject our data, since the sentinel-2 data we are using is in a different projection with a higher resolution (10m/pixel) and the SeasFire GWIS ground truth data has a resolution of 0.25 degrees (approx 28km x 28 km).","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"sRotGs3Kkc"}],"key":"vIEk5ZBnbe"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"We will do this using the ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"vPIXnNF0Wf"},{"type":"emphasis","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"rioxarray library","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"IA0rRfCXdc"}],"key":"wEL6lYuGCI"},{"type":"text","value":", which offers convenient methods such as reproject_match, which takes in as an argument a dataarray to which to match the original dataset. It essentially reprojects and matches the grid of a datarray to match the grid/projection of another and upsamples (or downsamples) the data to match resolutions, as well as subsetting the data to match.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"vyRpEJ724v"}],"key":"t2OGyNkaZS"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Learn more about how it works at: ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"mKZjBeTMHi"},{"type":"link","url":"https://corteva.github.io/rioxarray/stable/examples/reproject_match.html","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"https://​corteva​.github​.io​/rioxarray​/stable​/examples​/reproject​_match​.html","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"shzW8ZkSwu"}],"urlSource":"https://corteva.github.io/rioxarray/stable/examples/reproject_match.html","key":"wrj06iafVv"}],"key":"mfEhtCMqLJ"}],"key":"LAuhqvdVKw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# ensure that our dataarray has metadata about its projection - this is used by rioxarray.\nbiggest_fire_aoi = biggest_fire_aoi.rio.write_crs(ds.rio.crs)\n\nbiggest_fire_aoi_reprojected = biggest_fire_aoi.rio.reproject_match(dnbr_dataset.burned_ha_mask)\n\n\nburned_ha_mask_plot = dnbr_dataset.burned_ha_mask.hvplot(\n    width=700,\n    height=700,\n    title='dNBR (10 m) with GWIS overlay',\n    alpha=1.0\n)\n\n# Plot the reprojected coarse dataset as transparent overlay\ngwis_plot = biggest_fire_aoi_reprojected.hvplot(\n    cmap='Reds',\n    alpha=0.3,\n    clim=(0, biggest_fire_aoi.max().compute().item())\n)\n\n# Combine them interactively\ncombined_plot = burned_ha_mask_plot * gwis_plot\n\ncombined_plot\n","key":"gnux6G2WPt"},{"type":"output","id":"AoXPq8GfM5LhjQh1a78jV","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":49,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"1ed303ef-518c-46bb-ba5a-bd1fbeceb53b"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"},"text/html":{"content_type":"text/html","hash":"bef4340dd62d97b27fddc2a9523885b7","path":"/tutorials/build/bef4340dd62d97b27fddc2a9523885b7.html"},"text/plain":{"content":":Overlay\n   .Image.I  :Image   [x,y]   (burned_ha_mask)\n   .Image.II :Image   [x,y]   (Burned Areas from GWIS)","content_type":"text/plain"}}}],"key":"gMjfyslpd6"}],"key":"i6sHUJUved"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Great! Our plot generally follows the same trends as our burn analysis, the north-eastern and north-eastern regions seemed to be mainly burnt with two separately affected regions.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qLPCyhX5M2"}],"key":"UXwRClDjN2"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Our plot and values are quite a bit off though if you try to sum them - why is that?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GjrNw3EqS3"}],"key":"lyAkLzszGr"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Homework: Fix it and add it as a variable!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"XHHF4NMdWe"}],"key":"Gs8duF3jVN"}],"key":"Dx2c2wYkHI"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"hint: ha","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Iap5wRs4IX"}],"key":"ryLDhFZyeX"}],"key":"BsgvbucpJV"}],"key":"vo6nBF41BE"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Saving Your Work","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xeotrak9Df"}],"identifier":"saving-your-work","label":"Saving Your Work","html_id":"saving-your-work","implicit":true,"key":"pgdxNQ7FRR"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now let’s save our work! For intraoperability, we will save our data as a valid data cube in Zarr.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"e5e3tUmUQq"}],"key":"uWY8u6EkZa"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Keep in mind that EarthCODE provides different tooling that makes it easy to publish our data to the wider EO community on the EarthCODE Open Science Catalog (such as deep-code for publishing data cubes, we will see in the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"TXl4XIfziL"},{"type":"link","url":"https://esa-earthcode.github.io/tutorials/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"publishing guide","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VbYBwxcsDg"}],"key":"FOuH9TcqN8"}],"urlSource":"https://esa-earthcode.github.io/tutorials/","key":"tC2BkQBfKs"},{"type":"text","value":") by following common standards and using common file formats we ensure that there will be a tool to help us!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NSG7SY78yW"}],"key":"dqIJG9px8k"},{"type":"heading","depth":3,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Linting","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"vRAMScGQZV"}],"identifier":"linting","label":"Linting","html_id":"linting","implicit":true,"key":"TIYoHKOfTb"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"There are also tools to ensure the quality of our data/metadata. Two very useful tools are ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"tnDRjMEmHF"},{"type":"inlineCode","value":"xrlint","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"cXXyqwP1To"},{"type":"text","value":" which check our datarray against common expected standards and advise corrections (such as missing attributes which should be filled in). It’s basically a linter for xarray - xarray + linter.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"lSczFp6Fri"}],"key":"TIGBta4jjw"}],"key":"Yf1MpcbO29"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"linter = xrl.new_linter(\"recommended\")\nlinter.validate(dnbr_dataset)\n","key":"i9lQsjMF1R"},{"type":"output","id":"sF8h9nD-D8JO_vRrJKBLz","data":[{"output_type":"execute_result","execution_count":42,"metadata":{},"data":{"text/html":{"content":"<div style=\"padding-bottom: 5px\">\n<p><span style=\"font-family:monospace;font-weight:bold\">&lt;dataset&gt;</span> - <span>20 warnings</span></p>\n<hr/>\n<table>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'title'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#content-desc\">content-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'history'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#content-desc\">content-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['delta_NBR']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'institution'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#content-desc\">content-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['delta_NBR']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'source'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#content-desc\">content-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['delta_NBR']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'references'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#content-desc\">content-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['delta_NBR']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'comment'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#content-desc\">content-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['burned_ha_mask']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'institution'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#content-desc\">content-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['burned_ha_mask']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'source'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#content-desc\">content-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['burned_ha_mask']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'references'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#content-desc\">content-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['burned_ha_mask']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'comment'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#content-desc\">content-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'Conventions'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#conventions\">conventions</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.attrs</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing metadata, attributes are empty.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#no-empty-attrs\">no-empty-attrs</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['delta_NBR'].attrs</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing metadata, attributes are empty.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#no-empty-attrs\">no-empty-attrs</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['burned_ha_mask'].attrs</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing metadata, attributes are empty.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#no-empty-attrs\">no-empty-attrs</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['delta_NBR']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'standard_name'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#var-desc\">var-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['delta_NBR']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'long_name'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#var-desc\">var-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['burned_ha_mask']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'standard_name'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#var-desc\">var-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['burned_ha_mask']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'long_name'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#var-desc\">var-desc</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['delta_NBR']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'units'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#var-units\">var-units</a></td>\n  </tr>\n  <tr>\n    <td  style=\"text-align:left\"><span style=\"font-family:monospace;font-size:0.7em\">ds.data_vars['burned_ha_mask']</span></td>\n    <td  style=\"text-align:left\"><span style=\"color:blue\">warn</span></td>\n    <td  style=\"text-align:left\">Missing attribute 'units'.</td>\n    <td  style=\"text-align:left\"><a href=\"https://bcdev.github.io/xrlint/rule-ref#var-units\">var-units</a></td>\n  </tr>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"Result(file_path='<dataset>', config_object=ConfigObject(name=None, files=None, ignores=None, linter_options=None, opener_options=None, processor=None, plugins={'__core__': Plugin(meta=PluginMeta(name='__core__', version='0.5.1', ref='xrlint.plugins.core:export_plugin', docs_url='https://bcdev.github.io/xrlint/rule-ref'), rules={'coords-for-dims': Rule(meta=RuleMeta(name='coords-for-dims', version='1.0.0', description='Dimensions of data variables should have corresponding coordinates.', schema=None, ref=None, docs_url=None, type='problem'), op_class=<class 'xrlint.plugins.core.rules.coords_for_dims.CoordsForDims'>), 'var-units': Rule(meta=RuleMeta(name='var-units', version='1.0.0', description='Every variable should provide a description of its units.', schema=None, ref=None, docs_url='https://cfconventions.org/cf-conventions/cf-conventions.html#units', type='suggestion'), op_class=<class 'xrlint.plugins.core.rules.var_units.VarUnits'>), 'var-flags': Rule(meta=RuleMeta(name='var-flags', version='1.0.0', description=\"Validate attributes 'flag_values', 'flag_masks' and 'flag_meanings' that make variables that contain flag values self describing. \", schema=None, ref=None, docs_url='https://cfconventions.org/cf-conventions/cf-conventions.html#flags', type='suggestion'), op_class=<class 'xrlint.plugins.core.rules.var_flags.VarFlags'>), 'conventions': Rule(meta=RuleMeta(name='conventions', version='1.0.0', description='Datasets should identify the applicable conventions using the `Conventions` attribute.\\n The rule has an optional configuration parameter `match` which is a regex pattern that the value of the `Conventions` attribute must match, if any. If not provided, the rule just verifies that the attribute exists and whether it is a character string.', schema={'type': 'object', 'properties': {'match': {'type': 'string', 'title': 'Regex pattern'}}}, ref=None, docs_url='https://cfconventions.org/cf-conventions/cf-conventions.html#identification-of-conventions', type='suggestion'), op_class=<class 'xrlint.plugins.core.rules.conventions.Conventions'>), 'var-missing-data': Rule(meta=RuleMeta(name='var-missing-data', version='1.0.0', description='Checks the recommended use of missing data, i.e., coordinate variables should not define missing data, but packed data should. Notifies about the use of valid ranges to indicate missing data, which is currently not supported by xarray.', schema=None, ref=None, docs_url='https://cfconventions.org/cf-conventions/cf-conventions.html#units', type='suggestion'), op_class=<class 'xrlint.plugins.core.rules.var_missing_data.VarMissingData'>), 'content-desc': Rule(meta=RuleMeta(name='content-desc', version='1.0.0', description=\"A dataset should provide information about where the data came from and what has been done to it. This information is mainly for the benefit of human readers. The rule accepts the following configuration parameters:\\n\\n- `globals`: list of names of required global attributes. Defaults to `['title', 'history']`.\\n- `commons`: list of names of required variable attributes that can also be defined globally. Defaults to `['institution', 'source', 'references', 'comment']`.\\n- `no_vars`: do not check variables at all. Defaults to `False`.\\n- `ignored_vars`: list of ignored variables (regex patterns). Defaults to `['crs', 'spatial_ref']`.\\n\", schema={'type': 'object', 'properties': {'globals': {'type': 'array', 'default': ['title', 'history'], 'items': {'type': 'string'}, 'title': 'Global attribute names'}, 'commons': {'type': 'array', 'default': ['institution', 'source', 'references', 'comment'], 'items': {'type': 'string'}, 'title': 'Common attribute names'}, 'skip_vars': {'type': 'boolean', 'default': False, 'title': 'Do not check variables'}, 'ignored_vars': {'type': 'array', 'default': ['crs', 'spatial_ref'], 'items': {'type': 'string'}, 'title': 'Ignored variables (regex name patterns)'}}}, ref=None, docs_url='https://cfconventions.org/cf-conventions/cf-conventions.html#description-of-file-contents', type='suggestion'), op_class=<class 'xrlint.plugins.core.rules.content_desc.ContentDesc'>), 'no-empty-attrs': Rule(meta=RuleMeta(name='no-empty-attrs', version='1.0.0', description='Every dataset element should have metadata that describes it.', schema=None, ref=None, docs_url=None, type='suggestion'), op_class=<class 'xrlint.plugins.core.rules.no_empty_attrs.NoEmptyAttrs'>), 'no-empty-chunks': Rule(meta=RuleMeta(name='no-empty-chunks', version='1.0.0', description='Empty chunks should not be encoded and written. The rule currently applies to Zarr format only.', schema=None, ref=None, docs_url='https://docs.xarray.dev/en/stable/generated/xarray.Dataset.to_zarr.html#xarray-dataset-to-zarr', type='suggestion'), op_class=<class 'xrlint.plugins.core.rules.no_empty_chunks.NoEmptyChunks'>), 'lat-coordinate': Rule(meta=RuleMeta(name='lat-coordinate', version='1.0.0', description='Latitude coordinate should have standard units and standard names.', schema=None, ref=None, docs_url='https://cfconventions.org/cf-conventions/cf-conventions.html#latitude-coordinate', type='problem'), op_class=<class 'xrlint.plugins.core.rules.lat_lon_coordinate.LatCoordinate'>), 'lon-coordinate': Rule(meta=RuleMeta(name='lon-coordinate', version='1.0.0', description='Longitude coordinate should have standard units and standard names.', schema=None, ref=None, docs_url='https://cfconventions.org/cf-conventions/cf-conventions.html#longitude-coordinate', type='problem'), op_class=<class 'xrlint.plugins.core.rules.lat_lon_coordinate.LonCoordinate'>), 'grid-mappings': Rule(meta=RuleMeta(name='grid-mappings', version='1.0.0', description='Grid mappings, if any, shall have valid grid mapping coordinate variables.', schema=None, ref=None, docs_url='https://cfconventions.org/cf-conventions/cf-conventions.html#grid-mappings-and-projections', type='problem'), op_class=<class 'xrlint.plugins.core.rules.grid_mappings.GridMappings'>), 'time-coordinate': Rule(meta=RuleMeta(name='time-coordinate', version='1.0.0', description='Time coordinates should have valid and unambiguous time units encoding.', schema=None, ref=None, docs_url='https://cfconventions.org/cf-conventions/cf-conventions.html#time-coordinate', type='problem'), op_class=<class 'xrlint.plugins.core.rules.time_coordinate.TimeCoordinate'>), 'var-desc': Rule(meta=RuleMeta(name='var-desc', version='1.0.0', description=\"Check that each data variable provides an identification and description of the content. The rule can be configured by parameter `attrs` which is a list of names of attributes that provides descriptive information. It defaults to `['standard_name', 'long_name']`.\", schema={'type': 'object', 'properties': {'attrs': {'type': 'array', 'default': ['standard_name', 'long_name'], 'items': {'type': 'string'}, 'title': 'Attribute names to check'}}}, ref=None, docs_url='https://cfconventions.org/cf-conventions/cf-conventions.html#standard-name', type='suggestion'), op_class=<class 'xrlint.plugins.core.rules.var_desc.VarDesc'>), 'access-latency': Rule(meta=RuleMeta(name='access-latency', version='1.0.0', description='Ensure that the time it takes to open a dataset from its source does a exceed a given `threshold` in seconds. The default threshold is `2.5`.', schema={'type': 'object', 'properties': {'threshold': {'type': 'number', 'default': 2.5, 'exclusiveMinimum': 0, 'title': 'Threshold time in seconds'}}}, ref=None, docs_url=None, type='problem'), op_class=<class 'xrlint.plugins.core.rules.access_latency.AccessLatency'>)}, processors={}, configs={'recommended': [ConfigObject(name='recommended', files=None, ignores=None, linter_options=None, opener_options=None, processor=None, plugins=None, rules={'access-latency': RuleConfig(severity=1, args=(), kwargs={}), 'content-desc': RuleConfig(severity=1, args=(), kwargs={}), 'conventions': RuleConfig(severity=1, args=(), kwargs={}), 'coords-for-dims': RuleConfig(severity=2, args=(), kwargs={}), 'grid-mappings': RuleConfig(severity=2, args=(), kwargs={}), 'lat-coordinate': RuleConfig(severity=2, args=(), kwargs={}), 'lon-coordinate': RuleConfig(severity=2, args=(), kwargs={}), 'no-empty-attrs': RuleConfig(severity=1, args=(), kwargs={}), 'no-empty-chunks': RuleConfig(severity=0, args=(), kwargs={}), 'time-coordinate': RuleConfig(severity=2, args=(), kwargs={}), 'var-desc': RuleConfig(severity=1, args=(), kwargs={}), 'var-flags': RuleConfig(severity=2, args=(), kwargs={}), 'var-missing-data': RuleConfig(severity=1, args=(), kwargs={}), 'var-units': RuleConfig(severity=1, args=(), kwargs={})}, settings=None)], 'all': [ConfigObject(name='all', files=None, ignores=None, linter_options=None, opener_options=None, processor=None, plugins=None, rules={'coords-for-dims': RuleConfig(severity=2, args=(), kwargs={}), 'var-units': RuleConfig(severity=2, args=(), kwargs={}), 'var-flags': RuleConfig(severity=2, args=(), kwargs={}), 'conventions': RuleConfig(severity=2, args=(), kwargs={}), 'var-missing-data': RuleConfig(severity=2, args=(), kwargs={}), 'content-desc': RuleConfig(severity=2, args=(), kwargs={}), 'no-empty-attrs': RuleConfig(severity=2, args=(), kwargs={}), 'no-empty-chunks': RuleConfig(severity=2, args=(), kwargs={}), 'lat-coordinate': RuleConfig(severity=2, args=(), kwargs={}), 'lon-coordinate': RuleConfig(severity=2, args=(), kwargs={}), 'grid-mappings': RuleConfig(severity=2, args=(), kwargs={}), 'time-coordinate': RuleConfig(severity=2, args=(), kwargs={}), 'var-desc': RuleConfig(severity=2, args=(), kwargs={}), 'access-latency': RuleConfig(severity=2, args=(), kwargs={})}, settings=None)]})}, rules={'access-latency': RuleConfig(severity=1, args=(), kwargs={}), 'content-desc': RuleConfig(severity=1, args=(), kwargs={}), 'conventions': RuleConfig(severity=1, args=(), kwargs={}), 'coords-for-dims': RuleConfig(severity=2, args=(), kwargs={}), 'grid-mappings': RuleConfig(severity=2, args=(), kwargs={}), 'lat-coordinate': RuleConfig(severity=2, args=(), kwargs={}), 'lon-coordinate': RuleConfig(severity=2, args=(), kwargs={}), 'no-empty-attrs': RuleConfig(severity=1, args=(), kwargs={}), 'no-empty-chunks': RuleConfig(severity=0, args=(), kwargs={}), 'time-coordinate': RuleConfig(severity=2, args=(), kwargs={}), 'var-desc': RuleConfig(severity=1, args=(), kwargs={}), 'var-flags': RuleConfig(severity=2, args=(), kwargs={}), 'var-missing-data': RuleConfig(severity=1, args=(), kwargs={}), 'var-units': RuleConfig(severity=1, args=(), kwargs={})}, settings=None), messages=[Message(message=\"Missing attribute 'title'.\", node_path='ds', rule_id='content-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'history'.\", node_path='ds', rule_id='content-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'institution'.\", node_path=\"ds.data_vars['delta_NBR']\", rule_id='content-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'source'.\", node_path=\"ds.data_vars['delta_NBR']\", rule_id='content-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'references'.\", node_path=\"ds.data_vars['delta_NBR']\", rule_id='content-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'comment'.\", node_path=\"ds.data_vars['delta_NBR']\", rule_id='content-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'institution'.\", node_path=\"ds.data_vars['burned_ha_mask']\", rule_id='content-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'source'.\", node_path=\"ds.data_vars['burned_ha_mask']\", rule_id='content-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'references'.\", node_path=\"ds.data_vars['burned_ha_mask']\", rule_id='content-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'comment'.\", node_path=\"ds.data_vars['burned_ha_mask']\", rule_id='content-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'Conventions'.\", node_path='ds', rule_id='conventions', severity=1, fatal=None, fix=None, suggestions=None), Message(message='Missing metadata, attributes are empty.', node_path='ds.attrs', rule_id='no-empty-attrs', severity=1, fatal=None, fix=None, suggestions=[Suggestion(desc='Make sure to add appropriate metadata attributes to dataset elements.', data=None, fix=None)]), Message(message='Missing metadata, attributes are empty.', node_path=\"ds.data_vars['delta_NBR'].attrs\", rule_id='no-empty-attrs', severity=1, fatal=None, fix=None, suggestions=[Suggestion(desc='Make sure to add appropriate metadata attributes to dataset elements.', data=None, fix=None)]), Message(message='Missing metadata, attributes are empty.', node_path=\"ds.data_vars['burned_ha_mask'].attrs\", rule_id='no-empty-attrs', severity=1, fatal=None, fix=None, suggestions=[Suggestion(desc='Make sure to add appropriate metadata attributes to dataset elements.', data=None, fix=None)]), Message(message=\"Missing attribute 'standard_name'.\", node_path=\"ds.data_vars['delta_NBR']\", rule_id='var-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'long_name'.\", node_path=\"ds.data_vars['delta_NBR']\", rule_id='var-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'standard_name'.\", node_path=\"ds.data_vars['burned_ha_mask']\", rule_id='var-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'long_name'.\", node_path=\"ds.data_vars['burned_ha_mask']\", rule_id='var-desc', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'units'.\", node_path=\"ds.data_vars['delta_NBR']\", rule_id='var-units', severity=1, fatal=None, fix=None, suggestions=None), Message(message=\"Missing attribute 'units'.\", node_path=\"ds.data_vars['burned_ha_mask']\", rule_id='var-units', severity=1, fatal=None, fix=None, suggestions=None)])","content_type":"text/plain"}}}],"key":"GZT8jFZOhZ"}],"key":"LT8AWyEI6Q"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Add metadata descriptions to our data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"geoFs5iSZx"}],"identifier":"add-metadata-descriptions-to-our-data","label":"Add metadata descriptions to our data","html_id":"add-metadata-descriptions-to-our-data","implicit":true,"key":"M4Vzr7N8Sx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"As we see, there is quite a few attributes missing from our data cube. As a best practices, it’s recommended to have it very well described, to ensure FAIR-ness and, specifically, intraoperability.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nQf6fpuUqk"}],"key":"hrsHkDdw0l"}],"key":"BSfktMGDb8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Assign dataset-level attributes\ndnbr_dataset.attrs.update({\n    'title': 'Delta NBR and Burned Area Mask Dataset',\n    'history': 'Created by reprojecting and aligning datasets for fire severity analysis',\n    'Conventions': 'CF-1.7'\n})\n\n\n# Assign variable-level attributes for delta_NBR\ndnbr_dataset.delta_NBR.attrs.update({\n    'institution': 'Lampata',\n    'source': 'Sentinel-2 imagery; processed with open-source dNBR code, element84...',\n    'references': 'https://registry.opendata.aws/sentinel-2-l2a-cogs/',\n    'comment': 'dNBR values represent change in vegetation severity post-fire',\n    'standard_name': 'difference_normalized_burn_ratio',\n    'long_name': 'Differenced Normalized Burn Ratio (dNBR)',\n    'units': 'm'\n})\n\n# Example for burned_ha_mask data variable\ndnbr_dataset.burned_ha_mask.attrs.update({\n    'standard_name': 'burned_area_mask',\n    'long_name': 'Burned Area Mask in Hectares',\n    'units': 'hectares',\n    'institution': 'Your Institution Name',\n    'source': 'Derived from wildfire impact analysis',\n    'references': 'https://example.com/ref',\n    'comment': 'Burned area mask showing presence of burned areas'\n})\n","key":"Db3Junuo5p"},{"type":"output","id":"l8yRBOdxJEkV28RQ0y0c4","data":[],"key":"EmoIq95Iox"}],"key":"NieE4eqCLF"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Great! Let’s re-run the linter and see if we’re missing anything.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZAgZgYoZf3"}],"key":"z7gLiU4qjl"},{"type":"heading","depth":3,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Data Cube Validation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"R6mI24B1FM"}],"identifier":"data-cube-validation","label":"Data Cube Validation","html_id":"data-cube-validation","implicit":true,"key":"QXAla0Xj6x"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Another useful tool is xcube’s assert cube method which validates our data cube (e.g. dimensions, chunks, grids between dataarray’s match and other checks - see more information at ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JoUawS3RLo"},{"type":"link","url":"https://xcube.readthedocs.io/en/latest/cubespec.html#xcube-dataset-convention","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"https://​xcube​.readthedocs​.io​/en​/latest​/cubespec​.html​#xcube​-dataset​-convention","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uIiE8S8JzX"}],"urlSource":"https://xcube.readthedocs.io/en/latest/cubespec.html#xcube-dataset-convention","key":"jRqFvjrF8H"},{"type":"text","value":"). Making sure we validate our data before saving or sharing will ensure that our data can be exploited by different, common EO libraries.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ntooSuaagU"}],"key":"aYV3fwVi6J"}],"key":"uGslmcs9FW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"assert_cube(dnbr_dataset)  # raises ValueError if it's not xcube-valid","key":"BBR0jTiSlm"},{"type":"output","id":"dONRVuI6FlogBu05hIdfQ","data":[{"ename":"ValueError","evalue":"Dataset is not a valid xcube dataset, because:\n- missing time coordinate variable.","output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)\nCell \u001b[0;32mIn[44], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43massert_cube\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdnbr_dataset\u001b[49m\u001b[43m)\u001b[49m  \u001b[38;5;66;03m# raises ValueError if it's not xcube-valid\u001b[39;00m\n\nFile \u001b[0;32m/home/conda/edc-lps25/44910d9e-1749897073-16-edc_pangeo_env/lib/python3.13/site-packages/xcube/core/verify.py:29\u001b[0m, in \u001b[0;36massert_cube\u001b[0;34m(dataset, name)\u001b[0m\n\u001b[1;32m     27\u001b[0m     message \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mis not a valid xcube dataset, because:\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m     28\u001b[0m     message \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m- \u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m+\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m;\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m- \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m.\u001b[39mjoin(report) \u001b[38;5;241m+\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m---> 29\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(message)\n\u001b[1;32m     31\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m dataset\n\n\u001b[0;31mValueError\u001b[0m: Dataset is not a valid xcube dataset, because:\n- missing time coordinate variable."}],"key":"MyJNXzS2EJ"}],"key":"CHVfyWwHgD"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"It seems like our data is not actually valid, as we missed timestamping our data burnt area final dataset! There’s not really any information in the data to tell us when this wildfire event actually happened as well. Since deltaNBR highlights the burnt area after a fire, we will add the date of the postfire_ds to the dataset.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VBpa9HBkC2"}],"key":"ZW22357he0"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Simple checks like this help us avoid making simple mistakes, and catching/correcting these errors early on is  much easier than at a later stage.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rrR49NsDW1"}],"key":"iq6IfWygCa"}],"key":"uio0R0QDjz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\n\ntimestamp = np.datetime64(items[-1].properties['created'])","key":"vCQzBGkjmP"},{"type":"output","id":"l__ARBKfdwaySMV4kw_um","data":[{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_637/786310608.py:3: UserWarning: no explicit representation of timezones available for np.datetime64\n  timestamp = np.datetime64(items[-1].properties['created'])\n"}],"key":"PfrnqjMI2R"}],"key":"EAy4Tw2Bdn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# add time\ndnbr_dataset = dnbr_dataset.expand_dims(time=[timestamp])","key":"c9WRmzf3x6"},{"type":"output","id":"ppf_3hI1UDRVrm7NqYspY","data":[],"key":"qBZ0vFZ2Ue"}],"key":"prMLd0Epa2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dnbr_dataset","key":"vjxcu8Nfgw"},{"type":"output","id":"NfHKbxlVzTtNpZjms9J8o","data":[{"output_type":"execute_result","execution_count":47,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"8ae92ea012d2e1c0ea5ba3a263eef38d","path":"/tutorials/build/8ae92ea012d2e1c0ea5ba3a263eef38d.html"},"text/plain":{"content":"<xarray.Dataset> Size: 106MB\nDimensions:         (time: 1, y: 2818, x: 4186)\nCoordinates:\n  * time            (time) datetime64[ms] 8B 2022-11-06T15:01:05.105000\n  * y               (y) float64 23kB 4.637e+06 4.636e+06 ... 4.608e+06 4.608e+06\n  * x               (x) float64 33kB 5.519e+05 5.519e+05 ... 5.937e+05 5.937e+05\n    spatial_ref     int32 4B 32629\nData variables:\n    delta_NBR       (time, y, x) float64 94MB dask.array<chunksize=(1, 2818, 4186), meta=np.ndarray>\n    burned_ha_mask  (time, y, x) bool 12MB dask.array<chunksize=(1, 2818, 4186), meta=np.ndarray>\nAttributes:\n    title:        Delta NBR and Burned Area Mask Dataset\n    history:      Created by reprojecting and aligning datasets for fire seve...\n    Conventions:  CF-1.7","content_type":"text/plain"}}}],"key":"aXZ5rKbqFL"}],"key":"shIw6Yn52s"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Why is this important?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mVMabPaq8x"}],"identifier":"why-is-this-important","label":"Why is this important?","html_id":"why-is-this-important","implicit":true,"key":"SdYtYFqOfP"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"By ensuring your data follows common standards and FAIR principles, firstly and most importantly you enable make it usable by others and therefore increase its impact!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HNW7GeA4kc"}],"key":"zs6VJ6D5PI"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"You also enable libraries that implement the common standards you follow to use your data. For example, for our dataset above, if we do not apply the corrections (for time specifically) any future applications using xcube won’t be able to open up our dataset. Applications or users trying to understand how we derived our data will not have information, and etc...","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VAY5csuJlx"}],"key":"YSfv3aLhan"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The tools and standards help us along on the way to FAIR-ness!","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"IpPdwzVutT"}],"key":"mttE0XskNb"}],"key":"BbSSNvVDGa"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Saving and Chunking","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AUOjTA7cIM"}],"identifier":"saving-and-chunking","label":"Saving and Chunking","html_id":"saving-and-chunking","implicit":true,"key":"VkZDUPu2Ci"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To make our data easier to use for future users we will chunk it the recommended chunk sizes.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dewYBO37aV"}],"key":"soQPeZ6MbE"}],"key":"S0uH6Buz4F"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dnbr_dataset = dnbr_dataset.chunk({\"time\": 1, \"y\": 1000, \"x\": 1000}).load()\nprint(type(dnbr_dataset.burned_ha_mask.data)) # check data format ","key":"aM4E9hkCYV"},{"type":"output","id":"BXOIu6Z_R7nPEUTke2qtY","data":[{"name":"stdout","output_type":"stream","text":"<class 'numpy.ndarray'>\n"}],"key":"BGPGnB30TO"}],"key":"DJkvWSiY1z"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Finally we create our local zarr store with .to_zarr. This will save the dataset locally.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NHg9ssLjI0"}],"key":"Z4TAkD6cJe"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Note: You can easily store it on cloud storge such as s3 with some slight edits to the code below.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LeJeZSGEBQ"}],"key":"ToovOjXOg3"}],"key":"hdXsPW0tHf"}],"key":"XdNokG9EGZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"save_at_folder = '../wildfires'\nif not os.path.exists(save_at_folder):\n    os.makedirs(save_at_folder)\n\n# Define the output path within your notebook folder\noutput_path = os.path.join(save_at_folder, \"dnbr_dataset.zarr\")\n\n# save\ndnbr_dataset.to_zarr(output_path, mode=\"w\")","key":"faitM6YM1j"},{"type":"output","id":"LRskse3TsfQkbI7lDMWci","data":[{"output_type":"execute_result","execution_count":49,"metadata":{},"data":{"text/plain":{"content":"<xarray.backends.zarr.ZarrStore at 0x7f28d0a7b640>","content_type":"text/plain"}}}],"key":"vuecNfYpEX"}],"key":"YdkRGFgZOx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Conclusion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xKV6dr2GWl"}],"identifier":"conclusion","label":"Conclusion","html_id":"conclusion","implicit":true,"key":"VsvvGYmZBs"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Congratulations! You’ve gotten to the end of this notebook. We explored a simple workflow with the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sCjDUer5xX"},{"type":"link","url":"https://pangeo.io/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Pangeo","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wOCYy6Xt6n"}],"urlSource":"https://pangeo.io/","key":"goVc0BNTVs"},{"type":"text","value":" open-source software stack, demonstrated how to fetch and access EarthCODE published data and publically available Sentinel-2 data to generate burn severity maps for the assessment of the areas affected by wildfires. Finally, we saved our work and learned about why FAIRness matters.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aweFixIZu5"}],"key":"QfyjzP1Jn6"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"As next steps we recommend reading through the documentation pages of each of the libraries, and going through the example in your own time in more detail!","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"imduCiNuJm"}],"key":"RhAyjdvFwv"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"exploring the EarthCODE catalog","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dAM1QhBmaz"}],"key":"uFBjrR5YUF"}],"key":"jBpBX5MGl3"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Links and Refernces","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rdkj0Dgq0F"}],"identifier":"links-and-refernces","label":"Links and Refernces","html_id":"links-and-refernces","implicit":true,"key":"UMtZP0qINs"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://earthcode.esa.int/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"https://​earthcode​.esa​.int/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nwA20LCmv9"}],"urlSource":"https://earthcode.esa.int/","key":"yJ304xXRiS"}],"key":"ACNLHBEYRB"}],"key":"mevab6myl6"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://opensciencedata.esa.int/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"https://​opensciencedata​.esa​.int/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ZnscK70rML"}],"urlSource":"https://opensciencedata.esa.int/","key":"HUjnbz40Dx"}],"key":"qZWoDpgXmg"}],"key":"Cs7RZSoXiv"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://www.sciencedirect.com/science/article/pii/S1470160X22004708#f0035","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"https://​www​.sciencedirect​.com​/science​/article​/pii​/S1470160X22004708​#f0035","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"g5X7w5F0tL"}],"urlSource":"https://www.sciencedirect.com/science/article/pii/S1470160X22004708#f0035","key":"Wy1QaZYaoM"}],"key":"VGLtqhyIQk"}],"key":"iBczN1FoA4"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://github.com/yobimania/dea-notebooks/blob/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"https://github.com/yobimania/dea-notebooks/blob/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire Analysis Compiled Scripts (Gadi)/dNBR_full.py","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"tRpVCcHxdw"}],"urlSource":"https://github.com/yobimania/dea-notebooks/blob/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py","data":{"kind":"file","org":"yobimania","repo":"dea-notebooks","reference":"e0ca59f437395f7c9becca74badcf8c49da6ee90","file":"Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py","raw":"https://raw.githubusercontent.com/yobimania/dea-notebooks/e0ca59f437395f7c9becca74badcf8c49da6ee90/Fire%20Analysis%20Compiled%20Scripts%20(Gadi)/dNBR_full.py"},"internal":false,"protocol":"github","key":"On3gwP65Xl"}],"key":"MGSNXRwNGl"}],"key":"XCEGun1JNw"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"emphasis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Alonso, Lazaro, Gans, Fabian, Karasante, Ilektra, Ahuja, Akanksha, Prapas, Ioannis, Kondylatos, Spyros, Papoutsis, Ioannis, Panagiotou, Eleannna, Michail, Dimitrios, Cremer, Felix, Weber, Ulrich, & Carvalhais, Nuno. (2022). SeasFire Cube: A Global Dataset for Seasonal Fire Modeling in the Earth System (0.4) [Data set]. Zenodo. ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"feCQ86AOIL"},{"type":"cite","identifier":"alonso-2024","label":"alonso-2024","kind":"narrative","position":{"start":{"line":7,"column":331},"end":{"line":7,"column":343}},"children":[{"type":"text","value":"Alonso ","key":"yV4STD6cRB"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"KQryK6nQwl"}],"key":"BTtZFq7M0r"},{"type":"text","value":" (2024)","key":"iESat3iKaV"}],"enumerator":"1","key":"tOlEksw3FX"},{"type":"text","value":". The same dataset can also be downloaded from Zenodo: ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"H3oMsm3gRC"},{"type":"link","url":"https://zenodo.org/records/13834057","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"https://​zenodo​.org​/records​/13834057","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GVXNYdn3RM"}],"urlSource":"https://zenodo.org/records/13834057","key":"DUZsAWENEm"}],"key":"stBE7lZ9jJ"}],"key":"Ua9M1zGAmX"}],"key":"YMByVdQicB"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://opensciencedata.esa.int/products/seasfire-cube/collection","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"https://​opensciencedata​.esa​.int​/products​/seasfire​-cube​/collection","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"CFC9OTV6Et"}],"urlSource":"https://opensciencedata.esa.int/products/seasfire-cube/collection","key":"sOAuDtiV7a"},{"type":"text","value":")","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"IFPaXTM36C"}],"key":"UaDTGbI2iR"}],"key":"wg9KBB9cDJ"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://un-spider.org/advisory-support/recommended-practices/recommended-practice-burn-severity/in-detail/normalized-burn-ratio","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"https://​un​-spider​.org​/advisory​-support​/recommended​-practices​/recommended​-practice​-burn​-severity​/in​-detail​/normalized​-burn​-ratio","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"hIcK8RpwUb"}],"urlSource":"https://un-spider.org/advisory-support/recommended-practices/recommended-practice-burn-severity/in-detail/normalized-burn-ratio","key":"UomZi2h6xI"},{"type":"text","value":"](","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"rszTHxRB1g"},{"type":"link","url":"https://un-spider.org/advisory-support/recommended-practices/recommended-practice-burn-severity/in-detail/normalized-burn-ratio","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"https://​un​-spider​.org​/advisory​-support​/recommended​-practices​/recommended​-practice​-burn​-severity​/in​-detail​/normalized​-burn​-ratio","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"fIg1IL1WZl"}],"urlSource":"https://un-spider.org/advisory-support/recommended-practices/recommended-practice-burn-severity/in-detail/normalized-burn-ratio","key":"y4Qq0U4pqm"}],"key":"OcVvgWftHp"}],"key":"qpQJ66SIlS"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"emphasis","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"link","url":"https://registry.opendata.aws/sentinel-2-l2a-cogs/","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"https://​registry​.opendata​.aws​/sentinel​-2​-l2a​-cogs/","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"vgB5SJ9gIp"}],"urlSource":"https://registry.opendata.aws/sentinel-2-l2a-cogs/","key":"Igr7aYQj6x"}],"key":"NCLBUDdlMu"}],"key":"JheoEj8ojb"}],"key":"ouRoU9Q88F"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"element84’s STAC API](","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Ys7ScPDhgf"},{"type":"link","url":"https://element84.com/earth-search/","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"https://​element84​.com​/earth​-search/","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"FfWruT91pv"}],"urlSource":"https://element84.com/earth-search/","key":"O5Oa9KvG25"},{"type":"text","value":")","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"tu8rTS5CK9"}],"key":"BigIZXJxeE"}],"key":"QQsZvyolVN"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://github.com/bcdev/xrlint/tree/main/docs","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"https://​github​.com​/bcdev​/xrlint​/tree​/main​/docs","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"DKjP7qA3wd"}],"urlSource":"https://github.com/bcdev/xrlint/tree/main/docs","error":true,"key":"b2znrU79Ye"}],"key":"uCUGHIqIXn"}],"key":"aiYvK3gtnd"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://xcube.readthedocs.io/en/latest/","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"https://​xcube​.readthedocs​.io​/en​/latest/","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Okn3Ftssw5"}],"urlSource":"https://xcube.readthedocs.io/en/latest/","key":"w8fFeSHUlZ"}],"key":"YIsAAU3Cst"}],"key":"sLrrvnEZQb"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://docs.dask.org/en/stable/","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"https://​docs​.dask​.org​/en​/stable/","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"VRpXQK92Nl"}],"urlSource":"https://docs.dask.org/en/stable/","key":"nIjYW89Wq1"}],"key":"DTQouWbAVr"}],"key":"QjXaBxhamU"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://docs.xarray.dev/en/stable","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"https://​docs​.xarray​.dev​/en​/stable","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"XEFdsxLZC3"}],"urlSource":"https://docs.xarray.dev/en/stable","key":"QQ2c3fltFx"}],"key":"y4gPOKfXzB"}],"key":"Gs8NktB8bp"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://zarr.readthedocs.io/en/stable/","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"https://​zarr​.readthedocs​.io​/en​/stable/","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"D8Q2bIuqoP"}],"urlSource":"https://zarr.readthedocs.io/en/stable/","key":"PMXC7eGVVq"}],"key":"uJr4u5jp6j"}],"key":"W4pRtauCNp"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://corteva.github.io/rioxarray/stable/examples/reproject_match.html","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"https://​corteva​.github​.io​/rioxarray​/stable​/examples​/reproject​_match​.html","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"ws7MugldXG"}],"urlSource":"https://corteva.github.io/rioxarray/stable/examples/reproject_match.html","key":"JQJAbEmvRh"}],"key":"z9HKRzQACC"}],"key":"R0f7uVsNBC"}],"key":"ICcmOxmhf3"}],"key":"gOFNs3oWTn"}],"key":"W6DqS7X7uM"},"references":{"cite":{"order":["alonso-2024"],"data":{"alonso-2024":{"label":"alonso-2024","enumerator":"1","doi":"10.5281/ZENODO.13834057","html":"Alonso, L., Gans, F., Karasante, I., Ahuja, A., Prapas, I., Kondylatos, S., Papoutsis, I., Panagiotou, E., Mihail, D., Cremer, F., Weber, U., & Carvalhais, N. (2024). <i>SeasFire Cube: A Global Dataset for Seasonal Fire Modeling in the Earth System</i>. Zenodo. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.5281/ZENODO.13834057\">10.5281/ZENODO.13834057</a>","url":"https://doi.org/10.5281/ZENODO.13834057"}}}},"footer":{"navigation":{"prev":{"title":"Dask 101","url":"/dask101","group":"EarthCODE Tutorials"},"next":{"title":"Publishing to EarthCODE","url":"/publishing","group":"EarthCODE Tutorials"}}},"domain":"http://localhost:3000"}